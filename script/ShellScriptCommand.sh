#!/bin/sh

###################################################################################
#
#  Shell Name  : Command Reference Shell
#
#  Creater     : DokBak
#  Create Date : 2024/2/21          New
#  Modify Date :
#
#  Processing Overview : Reference Shell for Writing a Shell Script
#
#  Parameter   :
#     Parameter1  (optional) : Command
#     Parameter2  (optional) : Language
#
###################################################################################
#
#  쉘  이름      : 명령어 참조 쉘
#
#  작 성 자      : DokBak
#  작 성 일      : 2024/2/21          신규 작성
#  수 정 일      :
#
#  처리 개요      : 쉘 스크립트 작성을 위한 참조 쉘
#
#  파라미터       :
#     파라미터1  (옵션) : 명령어
#     파라미터2  (옵션) : 언어
#
###################################################################################
#
#  スクリプト名    : コマンド参照シェル
#
#  作成者        : DokBak
#  作成日        : 2024/2/21          新規作成
#  修正日        :
#
#  処理概要      : シェルスクリプト作成に参考できる参照シェル
#
#  パラメータ     :
#     パラメータ1  (任意) : 命令語
#     パラメータ2  (任意) : 言語
# 
###################################################################################

#--------------------------------------------#
# Basic Setting(Start Run Time)
#  : Shell Start Running Time
#  : 쉘 기동 시작 시간 출력
#  : シェル起動開始時間出力
#--------------------------------------------#
function func_basicSetting_StartingRunTime() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1
    
    local functionOutput=""

    ### RunDate / 실행시간 / 実行日
    sys_YYYYMMDDhhmmss=`date +%Y%m%d%H%M%S`
    sys_YYYY=${sys_YYYYMMDDhhmmss:0:4}
    sys_MM=${sys_YYYYMMDDhhmmss:4:2}
    sys_DD=${sys_YYYYMMDDhhmmss:6:2}
    sys_hh=${sys_YYYYMMDDhhmmss:8:2}
    sys_mm=${sys_YYYYMMDDhhmmss:10:2}
    sys_ss=${sys_YYYYMMDDhhmmss:12:2}

    ### Shell start time / 쉘 시작 시간 / シェル開始時間
    if [[ ${languageParam} == [eE][nN] ]]; then
        functionOutput="### Shell Running Time：${sys_YYYY}-${sys_MM}-${sys_DD} ${sys_hh}:${sys_mm}:${sys_ss} ###"
    elif [[ ${languageParam} == [kK][rR] ]]; then
        functionOutput="### 쉘 기동 시작 시간：${sys_YYYY}년${sys_MM}월${sys_DD}일 ${sys_hh}시${sys_mm}분${sys_ss}초 ###"
    elif [[ ${languageParam} == [jJ][pP] ]]; then
        functionOutput="### シェル起動開始時間：${sys_YYYY}年${sys_MM}月${sys_DD}日 ${sys_hh}時${sys_mm}分${sys_ss}秒 ###"
    else
        functionOutput="### Shell Running Time：${sys_YYYY}-${sys_MM}-${sys_DD} ${sys_hh}:${sys_mm}:${sys_ss} ###"
    fi

    ### Result print / 결과 출력 / 結果出力
    echo ${functionOutput}

}

#--------------------------------------------#
# Basic Setting(LogFileName_Path)
#  : LogFile Name & Path Set
#  : 로그 파일 이름 및 경로 설정
#  : ログファイル名及びパス設定
#--------------------------------------------#
function func_basicSetting_LogFileName_Path() {
    
    ### ShellScript relativePath / 쉘 스크립트 풀패스 / シェルスクリプトフルパス
    local fileRelativePath=$0
    ### relativePath -> AbsolutePath / 상대경로 -> 절대경로 / 相対パス -> 絶対パス
    local fileAbsolutePath=$(realpath "$fileRelativePath")
    ### ShellScript Name / 쉘 스크립트 이름 / シェルスクリプト名
    scriptName=$(basename $0)
    ### FilePath / 파일 패스 / ファイルパス
    filePath=${fileAbsolutePath%/*}/
    ### LogPath / 로그 패스 / ログパス
    logPath=${fileAbsolutePath%/*}/log/
    ### ProcessID / 프로세스ID / プロセスID
    PID=$1
    ### StartEndflg / 시작종료flg / 開始終了flg
    local startEndflg=$2
    ### Command Parameter / 명령어 파라미터 / コマンドパラメータ
    local searchCommandParam=$3

    ### Directory or File exists check / 디렉토리 또는 파일 존재 체크 / ディレクトリ又はファイル存在チェック
    if [ -e "${logPath}" ]; then
        logFilePath=""
    else
        mkdir -p ${logPath}
    fi

    ### logFileName Set / 로그 파일명 설정 / ログファイル名
    logFilePath=${logPath%/}/shellCommand_`date +%Y%m%d`.log
    commandLogFilePath=${logPath%/}/shellCommand_${searchCommandParam}_`date +%Y%m%d`.log

    ### log Print / 로그 출력 / ログファイル出力
    if [ ${startEndflg} -eq 0 ]; then
        if [ ! -z ${searchCommandParam} ];then
            echo "### `date +%Y/%m/%d-%H:%M:%S` [${PID}] ${scriptName} COMMAND : ${searchCommandParam} >>> ${searchCommandParam} START " >> ${commandLogFilePath}
        else
            echo "### `date +%Y/%m/%d-%H:%M:%S` [${PID}] ${scriptName} >>> START " >> ${logFilePath}
        fi
    else
        echo "### `date +%Y/%m/%d-%H:%M:%S` [${PID}] ${scriptName} >>> END "
        if [ ! -z ${searchCommandParam} ];then
            echo "### `date +%Y/%m/%d-%H:%M:%S` [${PID}] ${scriptName} COMMAND : ${searchCommandParam} >>> ${searchCommandParam} END " >> ${commandLogFilePath}
        else
            echo "### `date +%Y/%m/%d-%H:%M:%S` [${PID}] ${scriptName} >>> END " >> ${logFilePath}
        fi
    fi

}

#--------------------------------------------#
# Main Menu
#  : Main Menu Print
#  : 메인 메뉴 출력
#  : メインメニュー出力
#--------------------------------------------#
function func_mainMenu() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    while true
    do
        if [[ ${languageParam} == [kK][rR] ]];then
            echo
            printf "  ******************************\n"
            printf "  *%18s%12s*\n"                     "메뉴"
            printf "  ******************************\n"
            printf "  * %-31s*\n"                       "1. 언어 선택"
            printf "  * %-36s*\n"                       "2. 리눅스 명령어 리스트"
            printf "  * %-36s*\n"                       "3. 스크립트 작성 도움말"
            printf "  *                            *\n"
            printf "  * %-30s*\n"                       "7. 보조 쉘"
            printf "  * %-33s*\n"                       "8. 편집기 리스트"
            printf "  * %-29s*\n"                       "9. 종료"
            printf "  ******************************\n"
            echo 
            read -p " 메뉴 선택 : " selectMenu
            echo
        elif [[ ${languageParam} == [jJ][pP] ]]; then
            echo
            printf "  ******************************\n"
            printf "  *%22s%10s*\n"                     "メニュー"
            printf "  ******************************\n"
            printf "  * %-31s*\n"                       "1. 言語選択"
            printf "  * %-39s*\n"                       "2. リナックスコマンドリスト"
            printf "  * %-36s*\n"                       "3. スクリプトのヘルプ"
            printf "  *                            *\n"
            printf "  * %-33s*\n"                       "7. 手伝いシェル"
            printf "  * %-35s*\n"                       "8. エディターリスト"
            printf "  * %-29s*\n"                       "9. 終了"
            printf "  ******************************\n"
            echo 
            read -p " メニュー選択 : " selectMenu
            echo
        else
            echo
            printf "  ******************************\n"
            printf "  *%16s%12s*\n"                     "MENU"
            printf "  ******************************\n"
            printf "  * %-27s*\n"                       "1. Select Language"
            printf "  * %-27s*\n"                       "2. List of Linux Commands"
            printf "  * %-27s*\n"                       "3. Helping For Script"
            printf "  *                            *\n"
            printf "  * %-27s*\n"                       "7. Helper Shell"
            printf "  * %-27s*\n"                       "8. List of Editor"
            printf "  * %-27s*\n"                       "9. End"
            printf "  ******************************\n"
            echo 
            read -p " Select Menu : " selectMenu
            echo
        fi

        ### Parameter exist / 파라미터가 존재 / パラメータが存在
        if [[ ${selectMenu} == 1 ]]; then
            break
        elif [[ ${selectMenu} == 2 ]]; then
            break
        elif [[ ${selectMenu} == 3 ]]; then
            break
        elif [[ ${selectMenu} == 7 ]]; then
            break
        elif [[ ${selectMenu} == 8 ]]; then
            break
        elif [[ ${selectMenu} == 9 ]]; then
            break
        else
            clear
            if [[ ${languageParam} == [kK][rR] ]]; then
                echo
                printf "%s\n" "### 선택 가능한 메뉴(번호) : 1, 2, 3, 7, 8, 9 ###"
            elif [[ ${languageParam} == [jJ][pP] ]]; then
                echo
                printf "%s\n" "### 選択可能なメニュー(番号) : 1, 2, 3, 7, 8, 9 ###"
            else
                echo
                printf "%s\n" "### Selectable menu (number): 1, 2, 3, 7, 8, 9 ###"
            fi
        fi
    done

}

#--------------------------------------------#
# How To Use
#  : How to use
#  : 사용법
#  : 使用法
#--------------------------------------------#
function func_howToUse() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    if [[ ${languageParam} == [kK][rR] ]];then
        echo 
        echo "##############################################################################################"
        echo
        echo "  이 쉘의 기본 설정 언어는 영어입니다. "
        echo "  지원 언어 : 영어(en), 한국어(kr), 일본어(jp) "
        echo "  사용법   : sh [Shell Scrip Directory Path]/ShellScriptCommand.sh [Command] [Language] "
        echo
        echo "  예시    : sh ./ShellScriptCommand.sh "
        echo "         : sh ./ShellScriptCommand.sh cp "
        echo "         : sh ./ShellScriptCommand.sh cat kr "
        echo
        echo "##############################################################################################"
    elif [[ ${languageParam} == [jJ][pP] ]];then
        echo 
        echo "##############################################################################################"
        echo
        echo "  このシェルの基本言語は英語です。 "
        echo "  支援言語 : 英語(en), 韓国語(kr), 日本語(jp) "
        echo "  使用法   : sh [Shell Scrip Directory Path]/ShellScriptCommand.sh [Command] [Language] "
        echo
        echo "  例      : sh ./ShellScriptCommand.sh "
        echo "         : sh ./ShellScriptCommand.sh cp "
        echo "         : sh ./ShellScriptCommand.sh cat kr "
        echo
        echo "##############################################################################################"
    else
        echo 
        echo "##############################################################################################"
        echo
        echo "  Default language for this shell script is English "
        echo "  Support language : English(en), Korean(kr), Japense(jp) "
        echo "  How To Use : sh [Shell Scrip Directory Path]/ShellScriptCommand.sh [Command] [Language] "
        echo
        echo "  Sample : sh ./ShellScriptCommand.sh "
        echo "         : sh ./ShellScriptCommand.sh cp "
        echo "         : sh ./ShellScriptCommand.sh cat kr "
        echo
        echo "##############################################################################################"
    fi

}

#--------------------------------------------#
# Support Language
#  : support language
#  : 지원 언어
#  : 支援言語
#--------------------------------------------#
function func_supportLanguage() {

    echo
    echo "##############################################################################################"
    echo
    echo "  Support language : English(en), Korean(kr), Japense(jp) "
    echo "    ( Parameter2 )  "
    echo
    echo "##############################################################################################"
    echo

}

#--------------------------------------------#
# Script End
#  : Shell Script Close
#  : 쉘 스크립트 종료
#  : シェルスクリプト終了
#--------------------------------------------#
function func_scriptEnd() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    clear

    ### Shell Script End / 쉘 스크립트 종료 / シェルスクリプト終了
    if [[ ${languageParam} == [kK][rR]  ]];then
        echo
        printf "  ******************************\n"
        printf "  *                            *\n"
        printf "  * %36s%2s*\n"                     "사용해주셔서 감사합니다"
        printf "  * %17s%10s*\n"                    "[DokBak]"
        printf "  *                            *\n"
        printf "  ******************************\n"
        echo
        break
    elif [[ ${languageParam} == [jJ][pP]  ]];then
        echo
        printf "  ******************************\n"
        printf "  *                            *\n"
        printf "  * %19s%1s*\n"                     "ご利用ありがとうございます"
        printf "  * %17s%10s*\n"                    "[DokBak]"
        printf "  *                            *\n"
        printf "  ******************************\n"
        echo
        break
    else
        echo
        printf "  ******************************\n"
        printf "  *                            *\n"
        printf "  * %22s%5s*\n"                     "Thank you for Using"
        printf "  * %17s%10s*\n"                    "[DokBak]"
        printf "  *                            *\n"
        printf "  ******************************\n"
        echo
        break
    fi
    
}

#--------------------------------------------#
# Select Language
#  : Output Language Select
#  : 출력 언어 선택
#  : 出力言語出力
#--------------------------------------------#
function func_selectLanguage() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    while true
    do
        if [[ ${languageParam} == [kK][rR] ]];then
            echo
            printf "  ******************************\n"
            printf "  * %22s%9s*\n"                     "언어 선택"
            printf "  ******************************\n"
            printf "  * %-29s*\n"                       "1. 영어(en)"
            printf "  * %-30s*\n"                       "2. 한국어(kr)"
            printf "  * %-30s*\n"                       "3. 일본어(jp)"
            printf "  *                            *\n"
            printf "  * %-31s*\n"                       "9. 이전메뉴"
            printf "  ******************************\n"
            echo 
            read -p " 출력 언어를 선택해주세요. : " selectLanguage
            echo
        elif [[ ${languageParam} == [jJ][pP] ]]; then
            echo
            printf "  ******************************\n"
            printf "  * %22s%9s*\n"                     "言語選択"
            printf "  ******************************\n"
            printf "  * %-29s*\n"                       "1. 英語(en)"
            printf "  * %-30s*\n"                       "2. 韓国語(kr)"
            printf "  * %-30s*\n"                       "3. 日本語(jp)"
            printf "  *                            *\n"
            printf "  * %-33s*\n"                       "9. 前のメニュー"
            printf "  ******************************\n"
            echo 
            read -p " 出力言語を選択ください。 : " selectLanguage
            echo
        else
            echo
            printf "  ******************************\n"
            printf "  * %22s%5s*\n"                     "Select Language"
            printf "  ******************************\n"
            printf "  * %-27s*\n"                       "1. English(en)"
            printf "  * %-27s*\n"                       "2. Korean(kr)"
            printf "  * %-27s*\n"                       "3. Japense(jp)"
            printf "  *                            *\n"
            printf "  * %-27s*\n"                       "9. Previous Menu"
            printf "  ******************************\n"
            echo 
            read -p " Select Language. : " selectLanguage
            echo
        fi

        ### Parameter exist / 파라미터가 존재 / パラメータが存在
        if [[ ${selectLanguage} == 1 || ${selectLanguage} == [eE][nN] ]]; then
            clear
            languageParam="en"
            ouputLanguage="en"
            break
        elif [[ ${selectLanguage} == 2 || ${selectLanguage} == [kK][rR] ]]; then
            clear
            languageParam="kr"
            ouputLanguage="kr"
            break
        elif [[ ${selectLanguage} == 3 || ${selectLanguage} == [jJ][pP] ]]; then
            clear
            languageParam="jp"
            ouputLanguage="jp"
            break
        elif [[ ${selectLanguage} == 9 ]]; then
            clear
            break
        else
            clear
            if [[ ${languageParam} == [kK][rR] ]]; then
                echo
                printf "%s%s\n" "### 출력 언어를 선택해주세요. (대소문자 구분없음 : " "en, kr, jp ) ###"
                printf "%s%36s\n" "### 출력 번호를 선택해주세요. (" "1,  2,  3 ) ###"
            elif [[ ${languageParam} == [jJ][pP] ]]; then
                echo
                printf "%s%s\n" "### 出力言語を選択してください. (大小文字区別無し : " "en, kr, jp ) ###"
                printf "%s%35s\n" "### 出力番号を選択してください. (" "1,  2,  3 ) ###"
            else
                echo
                printf "%s%s\n" "### Please check the language. (case-insensitive : " "en, kr, jp ) ###"
                printf "%s%35s\n" "### Please check the Number.   (" "1,  2,  3 ) ###"
            fi
        fi
    done

}

#--------------------------------------------#
# Linux Commands List
#  : Included Linux Commands List
#  : 포함된 리눅스 명령어 리스트
#  : 含まれているLinuxコマンドリスト
#--------------------------------------------#
function func_linuxCommandsList() {
    
    ### Command Existed Check　Flg / 명령 존재 확인 플래그 / コマンド存在チェックフラグ
    local existCheckParam=$1
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$2

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    Index=0
    echo
    printf "##############################################################################################\n"
    if [[ ${languageParam} == [kK][rR] ]]; then
        printf "  %-8s %s  %-18s %s  %-102s\n" "번호" "#" "명령어" "#" "설명"
        printf "##############################################################################################\n"
        for commandIndex in ${commandList[@]}; do
            printf "  %03d    %s  %-15s %s  %-100s\n" $((${Index}+1)) "#" ${commandList[${Index}]} "#" ${commandDescriptionKr[${Index}]} | sed 's/_/ /g'
            Index=$(( ${Index} + 1 ))
        done
    elif [[ ${languageParam} == [jJ][pP] ]]; then
        printf "  %-8s %s  %-19s %s  %-102s\n" "番号" "#" "コマンド" "#" "説明"
        printf "##############################################################################################\n"
        for commandIndex in ${commandList[@]}; do
            printf "  %03d    %s  %-15s %s  %-100s\n" $((${Index}+1)) "#" ${commandList[${Index}]} "#" ${commandDescriptionJp[${Index}]} | sed 's/_/ /g'
            Index=$(( ${Index} + 1 ))
        done
    else
        printf "  %-6s %s  %-15s %s  %-100s\n" "Number" "#" "Command" "#" "Description"
        printf "##############################################################################################\n"
        for commandIndex in ${commandList[@]}; do
            printf "  %03d    %s  %-15s %s  %-100s\n" $((${Index}+1)) "#" ${commandList[${Index}]} "#" ${commandDescriptionEn[${Index}]} | sed 's/_/ /g'
            Index=$(( ${Index} + 1 ))
        done
    fi
    printf "##############################################################################################\n"
    echo
    if [[ ${existCheckParam} == 1 ]];then
        if [[ ${languageParam} == [kK][rR] ]];then
            read -p " 검색 명령어 (취소:C) : " searchCommand
        elif [[ ${languageParam} == [jJ][pP] ]];then
            read -p " 検索コマンド (取り消し:C) : " searchCommand
        else
            read -p " Search Command (Cancel:C) : " searchCommand
        fi

        if [[ ${searchCommand} == [0-9][0-9][0-9] ]];then
            searchCommand=$((10#${searchCommand}))
        fi

        if [[ ${searchCommand} =~ ^[0-9]+$ && ${#searchCommand} -gt 0 ]]; then
            searchCommand=${commandList[$((${searchCommand}-1))]}
        fi

        if [[ ${searchCommand} == [cC] || ${searchCommand} == [cC][aA][nN][cC][eE][lL] ]];then
            searchCommand=""
            break
        fi
    else
        break
    fi

}

#--------------------------------------------#
# Linux Commands Exist Check
#  : Included Linux Commands Exist Check
#  : 포함된 리눅스 명령어 존재 체크
#  : 含まれているLinuxコマンド存在チェック
#--------------------------------------------#
function func_linuxCommandsExistCheck() {

    ### Command List Array / 명령어 리스트 배열 / コマンドリスト配列
    local commandListParam=(${commandList[@]})
    
    ### Command List Array Length / 명령어 리스트 배열 길이 / コマンドリスト配列長
    local commandListArrayLength="${#commandList[@]}"

    ### Command Parameter / 명령어 파라미터 / コマンドパラメータ
    local searchCommandParam=$1

    ### Command Exist Check Flg / 명령어 존재 체크 플래그 / コマンド存在チェックフラグ
    existCheck=0

    ### Command Array Index / 명령어 리스트 인덱스 / コマンド配列インデックス
    commandItemIndex=0
    for commandItem in ${commandListParam[@]}; do
        if [[ ${commandItem} == ${searchCommandParam} ]];then
            existCheck=1
            break
        fi
        commandItemIndex=$(( ${commandItemIndex} + 1 ))
    done

}

#--------------------------------------------#
# Not Exist Command
#  : Not Exist Command
#  : 존재하지 않는 명령어
#  : 存在しないコマンド
#--------------------------------------------#
function func_notExistCommand() {
    
    ### Command Parameter / 명령어 파라미터 / コマンドパラメータ
    local searchCommandParam=$1
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$2

    ### Exist Check Parameter / 존재 체크 파라미터 / 存在チェックパラメータ
    local existCheckParam=$3

    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        echo "##############################################################################################"
        echo
        echo "  해당 명령어(${searchCommandParam})는 포함되어 있지 않습니다. "
        echo "    ( 파라미터1 )  "
        func_linuxCommandsList ${existCheckParam} ${ouputLanguageParam}
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        echo "##############################################################################################"
        echo
        echo "  ごのコマンド(${searchCommandParam})は含まれていません。"
        echo "    ( パラメータ1 )  "
        func_linuxCommandsList ${existCheckParam} ${ouputLanguageParam}
    else
        func_howToUse ${ouputLanguageParam}
        echo
        echo "  The Command(${searchCommandParam}) not included. "
        echo "    ( Parameter1 )  "
        func_linuxCommandsList ${existCheckParam} ${ouputLanguageParam}
    fi

}

#--------------------------------------------#
# Linux Command Example
#  : Linux Command Example
#  : 리눅스 명령어 예
#  : Linuxコマンド例
#--------------------------------------------#
function func_linuxCommandExample() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### FilePath / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Array Index / 배열 인덱스 파라미터 / 配列インデックスパラメータ
    local commandItemIndex=$3

    clear
    echo
    case ${commandList[${commandItemIndex}]} in
        cat)
            func_command_cat ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        expr)
            func_command_expr ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        sleep)
            func_command_sleep ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        gunzip)
            func_command_gunzip ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        gzip)
            func_command_gzip ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        zip)
            func_command_zip ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        unzip)
            func_command_unzip ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        date)
            func_command_date ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        cal)
            func_command_cal ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        wc)
            func_command_wc ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        uniq)
            func_command_uniq ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        touch)
            func_command_touch ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        head)
            func_command_head ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        tail)
            func_command_tail ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        cd)
            func_command_cd ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        chgrp)
            func_command_chgrp ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        chmod)
            func_command_chmod ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        chown)
            func_command_chown ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        pwd)
            func_command_pwd ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        mkdir)
            func_command_mkdir ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        rmdir)
            func_command_rmdir ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        rm)
            func_command_rm ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        mv)
            func_command_mv ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        cp)
            func_command_cp ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        cut)
            func_command_cut ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        dd)
            func_command_dd ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        diff)
            func_command_diff ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        find)
            func_command_find ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        clear)
            func_command_clear ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        man)
            func_command_man ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        df)
            func_command_df ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        du)
            func_command_du ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        history)
            func_command_history ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        less)
            func_command_less ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        more)
            func_command_more ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        whoami)
            func_command_whoami ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        echo)
            func_command_echo ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        id)
            func_command_id ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        uname)
            func_command_uname ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        uptime)
            func_command_uptime ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        env)
            func_command_env ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        export)
            func_command_export ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        exit)
            func_command_exit ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        grep)
            func_command_grep ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        ln)
            func_command_ln ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        ls)
            func_command_ls ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        umask)
            func_command_umask ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        fc)
            func_command_fc ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        ping)
            func_command_ping ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        ps)
            func_command_ps ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        top)
            func_command_top ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        sort)
            func_command_sort ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        tar)
            func_command_tar ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        tr)
            func_command_tr ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        printf)
            func_command_printf ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        paste)
            func_command_paste ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        sed)
            func_command_sed ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        nkf)
            func_command_nkf ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        alias)
            func_command_alias ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        lsof)
            func_command_lsof ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        egrep)
            func_command_egrep ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        read)
            func_command_read ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        sh)
            func_command_sh ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        shift)
            func_command_shift ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        readonly)
            func_command_readonly ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        declare)
            func_command_declare ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        rename)
            func_command_rename ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        awk)
            func_command_awk ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        locale)
            func_command_locale ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        compress)
            func_command_compress ${ouputLanguageParam} ${filePath} ${commandDescriptionEn[${commandItemIndex}]} ${commandDescriptionKr[${commandItemIndex}]} ${commandDescriptionJp[${commandItemIndex}]} ${commandList[${commandItemIndex}]}
            ;;
        *)  echo ; 
            if [[ ${ouputLanguageParam} == [kK][rR] ]];then
                echo " 에러 : 명령어 함수 미포함 (func_command_${commandList[${commandItemIndex}]})"; 
            elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
                echo " エラー : コマンド関数を含まない (func_command_${commandList[${commandItemIndex}]})"; 
            else
                echo " ERROR : Command_Function Not Included (func_command_${commandList[${commandItemIndex}]})"; 
            fi
            echo ; # default
    esac
    
    ### Search Command Initialization / 검색 명령어 초기화 / 検索コマンド初期化
    searchCommand=""
    clear
    
}

#--------------------------------------------#
# Command : cat                              #
#--------------------------------------------#
function func_command_cat() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo "testFile,Command,data" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-benst]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[파일경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-benst]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[ファイルパス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-benst]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[filePath]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일의 내용을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "공백이 아닌 라인의 라인 번호를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 라인을 라인 번호로 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     7  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 행 끝에 [$] 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "연속된 빈 줄을 압축하여 한 줄로 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "탭 문자열 "^I"로 대체되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data^I" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの内容を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "空白ではない行の前に行番号を出力します" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "すべての行を行番号を出力します" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     7  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "すべての行の末尾に[$]を出力します" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "連続する空白行を圧縮し、1行として出力します" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "タブ文字列を"^I"に置き換えられ、出力されます" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data^I" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output the contents of the file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs a line number in front of a line that is not blank" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Print out all lines with line numbers" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     1  testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     3  File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     7  Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -n ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Print a [$] at the end of all lines" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date$" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compresses consecutive blank lines and outputs them as a single line" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data\t" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "tab string is replaced with a string "^I" and outputted" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "testFile,Command,data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File,Command,data^I" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Command,date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat -t ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    
    ### Show Command
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : expr                             #
#--------------------------------------------#
function func_command_expr() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[연산자]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[숫자1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※연산자" ":" "[+,-,/,*,%,>,>=,=,<=,<]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[숫자2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[演算子]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[数字1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※演算子" ":" "[+,-,/,*,%,>,>=,=,<=,<]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[数字2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[Operator]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[number1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-16s %s %s\n" "※Operator" ":" "[+,-,/,*,%,>,>=,=,<=,<]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[number2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "산술연산" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "10" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '+' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '-' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '/' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '*' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '%' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '+' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '-' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '/' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '*' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '%' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "관계연산" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '>' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '>=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '<=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "expr '5' '<' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "算術演算" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "10" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '+' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '-' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '/' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '*' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '%' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '+' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '-' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '/' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '*' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '%' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "算術演算" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '>' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '>=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '<=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "expr '5' '<' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "arithmetic operations" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "10" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '+' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '-' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '/' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '*' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '%' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '+' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '-' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '/' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '*' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '%' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "arithmetic operations" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '>' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '>=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '<=' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "expr '5' '<' '2'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '>=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<=' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            expr '5' '<' '2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : sleep                            #
#--------------------------------------------#
function func_command_sleep() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대기시간:'n'초]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[待機時間:'n'秒]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[waitingTime:'n'seconds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "n초 후 다음 작업 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep 명령어 전 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep 명령어 3초 후 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sleep 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep 명령어 전 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'sleep 3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep 명령어 3초 후 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "n秒後に次の作業を実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep コマンド前出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep コマンド3秒後出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sleep 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep コマンド前出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'sleep 3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep コマンド3秒後出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "After n seconds, perform the following actions" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep Command Pre-Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep command output after 3 seconds" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sleep 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep Command Pre-Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'sleep 3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "sleep command output after 3 seconds" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : gzip                             #
#--------------------------------------------#
function func_command_gzip() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory/
    echo "testFile1,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt
    echo "testFile2,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt
    echo "testFile3,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-dr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[파일경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-dr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[ファイルパス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-dr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[filePath]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 단위로 압축" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 단위로 압축 해제(gunzip)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 폴더내 모든 파일 압축" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "gzip -r ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル単位で圧縮" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル単位で解凍(gunzip)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "サブフォルダー内のすべてのファイルを圧縮" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "gzip -r ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compress by file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Uncompress by file(gunzip)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compress all files in subfolders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "gzip -r ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt.gz
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : gunzip                           #
#--------------------------------------------#
function func_command_gunzip() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory/
    echo "testFile1,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt
    echo "testFile2,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt
    echo "testFile3,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt
    gzip ${filePathParam%/}/tmp/${commandItem}/directory/*
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-r]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[파일경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-r]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[ファイルパス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-r]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[filePath]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 단위로 압축 해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 폴더내 모든 파일 압축해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 내 파일 확인" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더 : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル単位で解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "サブフォルダー内のすべてのファイルの解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ内ファイル確認" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダ : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Uncompress by file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt.gz >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt.gz` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unzip all files in subfolders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Checking files in folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Target Folder : ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            gunzip -r ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls ${filePathParam%/}/tmp/${commandItem}/directory/ | grep ${commandItem}_TestFile3.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : zip                              #
#--------------------------------------------#
function func_command_zip() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory/test1/
    echo "testFile1,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt
    echo "testFile2,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt
    echo "testFile3,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]_[인수3]_..." | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-rjd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[압축 대상 파일 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[압축 파일 출력 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수3" ":" "[압축 파일 출력 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]_[引数3]_..." | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-rjd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[圧縮対象ファイルパス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[圧縮ファイル出力パス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数3" ":" "[圧縮ファイル出力パス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]_[argument3]_..." | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-rjd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[compressed_file_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[compressed_file_output_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument3" ":" "[compressed_file_output_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "여러 파일 압축 (신규파일 adding)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "여러 파일 압축 (기존파일 updatng)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "예상출력결과" ":" "지정된 폴더의 모든 하위 구조 압축" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "사용법" ":" "zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "예상출력결과" ":" "하위 폴더를 무시하고 파일만 압축" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile_r.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "사용법" ":" "zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/* >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "예상출력결과" ":" "zip파일 내부에서 지정 파일을 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "사용법" ":" "zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "複数ファイル圧縮(新規ファイルadding)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt"
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "複数ファイル圧縮(既存ファイルupdatng)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "予想出力結果" ":" "指定されたフォルダー内のすべてのサブ構造圧" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "使い方" ":" "zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/directory/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "予想出力結果" ":" "サブフォルダーを無視してファイルのみを圧縮" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile_r.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "使い方" ":" "zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/* >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "予想出力結果" ":" "zipファイルの内部から指定ファイルを削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "使い方" ":" "zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compress multiple files (new file adding)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/ ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compress multiple files (existing files updateng)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "updating: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compress all substructures in the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -r ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_r.zip ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Ignore subfolders and compress only files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  adding: ${commandItem}_TestFile_r.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -j ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${filePathParam%/}/tmp/${commandItem}/directory/* >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete the specified file from inside the zip file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "deleting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            zip -d ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_j.zip ${commandItem}_TestFile2.txt ${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : unzip                              #
#--------------------------------------------#
function func_command_unzip() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory/test1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory/test2/
    echo "testFile1,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt
    echo "testFile2,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt
    echo "testFile3,Command,data" > ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile3.txt
    zip -jr ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip ${filePathParam%/}/tmp/${commandItem}/directory/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ld]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[압축 파일 파일 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[압축 해제 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ld]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[圧縮ファイル出力パス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[ファイル解凍パス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ld]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[compressed_file_output_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[decompression_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 폴더에 압축 해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "압축 파일 내용 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  Length      Date    Time    Name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------  ---------- -----   ----" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------                     -------" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       69                     n files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 폴더에 압축 해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在のフォルダへの解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "圧縮ファイルの内容出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  Length      Date    Time    Name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------  ---------- -----   ----" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------                     -------" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       69                     n files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフォルダへの解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compressed File Content Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unzip to the current folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  Length      Date    Time    Name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------  ---------- -----   ----" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       23  MM-DD-YYYY hh:mm   unzip_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "---------                     -------" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       69                     n files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip -l ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unzip to the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "extracting: ${filePathParam%/}/tmp/${commandItem}/directory/test2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            unzip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile_jr.zip -d ${filePathParam%/}/tmp/${commandItem}/directory/test2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/
    rm -rf ./${commandItem}_TestFile2.txt
    rm -rf ./${commandItem}_TestFile3.txt
    rm -rf ./${commandItem}_TestFile1.txt

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : date                              #
#--------------------------------------------#
function func_command_date() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[출력 날짜 형식]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[出力日付形式]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Output_Date_Format]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "표준 형식 날짜 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo ' export LC_ALL="ko_KR.UTF-8" ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export LC_ALL="ko_KR.UTF-8" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[YYYY]년 [M]월  [D]일 [X]요일 [hh]시 [mm]분 [ss]초 JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2024년 3월  1일 금요일 21시 35분 28초 JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "표준 형식 날짜 출력(간소화)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[X]  [M]/ [D] [hh]:[mm]:[ss] [YYYY]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "금  3/ 1 21:35:28 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%c'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%c' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "날짜 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY-MM-DD : 2024-03-01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YY : 03/01/24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YYYY : 03/01/2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%F'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%D'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%x'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%F' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%D' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%x' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "연도 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY : 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  YY :   24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YY   : 20  " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%Y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%C'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%C' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "월 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3월" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%m'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%B'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%b'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%h'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%m' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%B' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%b' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%h' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" " 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%_d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%e'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%e' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "요일 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일요일" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7 : 1(Mon)~7(Sun)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0 : 0(Sun)~6(Mon)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%A'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%a'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%u'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%w'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%A' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%a' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%u' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%w' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "AM/PM 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "PM" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%p'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%p' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "시간 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁 24時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁 12時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁 24時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁 12時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%H'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%I'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%k'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%H' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%I' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%k' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "분출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2분)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1분)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%_M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "초출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2자리수)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1자리수)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%_S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "타임존출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "+0900" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "date '+%Z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "標準形式日付出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo ' export LC_ALL="ja_JP.UTF-8" ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export LC_ALL="ja_JP.UTF-8" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[YYYY]年 [M]月 [D]日 [X]曜日 [hh]時[mm]分[ss]秒 JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "標準形式日付出力(簡略)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[X]  [M]/ [D] [hh]:[mm]:[ss] [YYYY]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "金  3/ 1 21:35:28 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%c'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%c' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "日付出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY-MM-DD : 2024-03-01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YY : 03/01/24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YYYY : 03/01/2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%F'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%D'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%x'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%F' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%D' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%x' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "年度出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY : 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  YY : 24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YY   : 20" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%Y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%C'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%C' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "月出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3月" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%m'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%B'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%b'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%h'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%m' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%B' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%b' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%h' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "日出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%_d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%e'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%e' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "曜日出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日曜日" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7 : 1(Mon)~7(Sun)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0 : 0(Sun)~6(Mon)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%A'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%a'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%u'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%w'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%A' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%a' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%u' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%w' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "AM/PM出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "PM" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%p'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%p' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "時出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁 24時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁 12時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁 24時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁 12時)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%H'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%I'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%k'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%H' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%I' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%k' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "分出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁 分)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁 分)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%_M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "秒出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2桁)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1桁)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%_S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "タイムゾーン出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "+0900" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "date '+%Z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Standard Format Date Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo ' export LC_ALL="en_US.UTF-8" ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export LC_ALL="en_US.UTF-8" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[the week] [Months] [Days] [hh]:[mm]:[ss] JST [YYYY]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Standard Format Date Output(simplify)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "[X]  [M] [D] [hh]:[mm]:[ss] [YYYY]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Fri Mar 1 21:35:28 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%c'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%c' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Date Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY-MM-DD : 2024-03-01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YY : 03/01/24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MM/DD/YYYY : 03/01/2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%F'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%D'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%x'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%F' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%D' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%x' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Year Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YYYY : 2024" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  YY :   24" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "YY   : 20  " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%Y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%y'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%C'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%y' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%C' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Months Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "March" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Mar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Mar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%m'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%B'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%b'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%h'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%m' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%B' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%b' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%h' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Days Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%_d'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%e'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_d' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%e' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Weeks Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Sunday" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Sun" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "7 : 1(Mon)~7(Sun)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "0 : 0(Sun)~6(Mon)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%A'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%a'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%u'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%w'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%A' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%a' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%u' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%w' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "AM/PM Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "PM" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%p'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%p' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "hours Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2 words 24hours)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2 words 12hours)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1 words 24hours)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1 words 12hours)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%H'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%I'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%k'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%H' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%I' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%k' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Minutes Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2 words)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1 words)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%_M'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_M' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Seconds Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "01 : (2 words)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1 : (1 words)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%_S'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%_S' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Timezone Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "+0900" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "JST" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "date '+%Z'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date '+%Z' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : cal                              #
#--------------------------------------------#
function func_command_cal() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-hjyd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상날짜]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-hjyd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象日付]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-hjyd]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[target_Date]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "명령어 실행 월의 달력을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M월 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 월 화 수 목 금 토" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "명령어 실행 월의 달력을 출력(오늘 강조 표시)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M월 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 월 화 수 목 금 토" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "줄리안 달력으로 출력(1월 1일을 기준으로 1씩 더해진 날짜를 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M월 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 월 화 수 목 금 토" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal -j" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -j >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "올해의 모든 날짜를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M월 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 월 화 수 목 금 토" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal -y" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -y >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 날짜를 달력을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     6월 2022    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 월 화 수 목 금 토" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal -d 2022-6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cal -d 2022-6-1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -d 2022-6 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -d 2022-6-1 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "コマンド実行月のカレンダーを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M月 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日 月 火 水 木 金 土" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "コマンド実行月のカレンダーを出力(今日は強調表示しない)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M月 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日 月 火 水 木 金 土" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ジュリアンカレンダーへの出力（1月1日から1日ずつ足す日付を出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M月 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日 月 火 水 木 金 土" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal -j" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -j >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "今年のすべての日付を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     M月 YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日 月 火 水 木 金 土" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal -y" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -y >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定された日付をカレンダーを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "     6月 2022    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "日 月 火 水 木 金 土" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal -d 2022-6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cal -d 2022-6-1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -d 2022-6 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs the calendar for the month of command execution" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   March YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Su Mo Tu We Th Fr Sa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs the calendar for the month of command execution(Not highlight today)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   March YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Su Mo Tu We Th Fr Sa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -h  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output to Julian Calendar (outputs the date added by 1 as of January 1st)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   March YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Su Mo Tu We Th Fr Sa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal -j" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -j >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output all dates for this year" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   March YYYY    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Su Mo Tu We Th Fr Sa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　●　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal -y" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -y >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output calendar for the specified date" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   June 2022    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Su Mo Tu We Th Fr Sa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "◯　◯　◯　◯　◯　◯　◯" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal -d 2022-6" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cal -d 2022-6-1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -d 2022-6 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cal -d 2022-6-1 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : wc                               #
#--------------------------------------------#
function func_command_wc() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo "testFileA,Command,data" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'apple banana cream dust Test txt TestFile1 gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'iphone,ipad,imac\tTest,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-lwc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-lwc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-lwc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "라인수,단어수,바이트수출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   라인수  단어수  바이트수  대상파일경로"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "    10     17        207       ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "라인수출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   10 : 라인수"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "단어수출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   17 : 단어수 (구분자 : 스페이스)"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "바이트수출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   207 : 바이트수 (LF : 1바이트, CRLF : 2바이트)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "行数、単語数、バイト数出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   行数  単語数  バイト数  対象ファイルパス"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "    10    17       207      ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "行数出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   10 : 行数"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単語数出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   17 : 単語数 (区分字 : スペース)"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "バイト数出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   207 : バイト数 (LF : 1バイト, CRLF : 2バイト)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Line_Count,Words_Count,Byte_Count Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   Line_Count  Words_Count  Byte_Count  TargetFilePath"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "       10           17         207       ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Line Count Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   10 : Line Count"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Words Count Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   17 : Words Count (Separator : space)"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Bytes Count Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   207 : Byte Count (LF : 1byte, CRLF : 2byte)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            wc -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : uniq                             #
#--------------------------------------------#
function func_command_uniq() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo "testFileA,Command,data" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test apple' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test apple' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test banana' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test Banana' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test banana' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test apple' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test Peach' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test peach' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'test peach' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ci]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ci]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ci]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "연속된 중복값을 제거하여 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##원본##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##예상출력##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "연속된 중복값을 제거하여 출력(중복된 라인수를 선두에 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   2 test apple\n   1 test banana\n   1 test Banana\n   1 test banana\n   1 test apple\n   1 test Peach\n   2 test peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대소문자 구분없이 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest apple\ntest Peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "連続重複値の削除と出力(先頭に重複数を出力)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##原本##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##予想出力##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "大文字と小文字を区別しない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   2 test apple\n   1 test banana\n   1 test Banana\n   1 test banana\n   1 test apple\n   1 test Peach\n   2 test peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単語数出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest apple\ntest Peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete consecutive duplicate values and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##Original##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "##ExpectedOutput##" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest Banana\ntest banana\ntest apple\ntest Peach\ntest peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output by eliminating consecutive duplicate values (number of duplicate outputs)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "   2 test apple\n   1 test banana\n   1 test Banana\n   1 test banana\n   1 test apple\n   1 test Peach\n   2 test peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Put out case-insensitive" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "test apple\ntest banana\ntest apple\ntest Peach\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uniq -i ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : touch                            #
#--------------------------------------------#
function func_command_touch() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-trc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-trc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-trc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "0바이트의 빈 파일을 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재시간" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재시간" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 날짜 및 시간[[CC]YY]MMDDhhmm[SS]으로 수정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재시간" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파라미터(앞)의 수정 날짜 정보를 파라미터(뒤)의 수정날짜 정보로 수정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재시간" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "수정 날짜 정보를 현재 시간으로 갱신" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재시간" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "0バイトの空きファイルを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在時間" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在時間" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定された日付[[CC]YY]MMDDhhmm[SS]に修正"
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在時間" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "パラメータ（前）の修正日付情報をパラメータ（後）の修正日付情報に修正" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在時間" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1)) >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "修正日付情報を現在の時間に更新" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在時間" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create an empty file of 0 bytes" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Current Time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Current Time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Modify to specified date and time [[CC]YY]MMDDhmm[SS]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Current Time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -t 199112312359 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Modify the modification date information of the parameter (front) to the modification date information of the parameter (back)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Current Time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Refreshing revision date information to current time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Current Time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            date "+%m/%d %H:%M" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            touch -c ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ls -l ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : head                             #
#--------------------------------------------#
function func_command_head() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    for n in {2..20};
    do
        echo "TestFile${n}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    done 
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "앞에서 10줄 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile5' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile6' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile7' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile8' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile9' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile10' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "앞에서 n줄 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "앞에서 n바이트 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Tes' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "前から10行出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile5' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile6' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile7' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile8' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile9' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile10' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "前からn行出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "前からnバイト出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Tes' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "10 lines output from the front" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile5' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile6' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile7' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile8' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile9' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile10' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "n-line output from front" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output n-bytes from the front" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Tes' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            head -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : tail                             #
#--------------------------------------------#
function func_command_tail() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    for n in {2..20};
    do
        echo "TestFile${n}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    done 
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-nc]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "뒤에서 10줄 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile11' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile12' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile13' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile14' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile15' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile16' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile17' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "뒤에서 n줄 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "뒤에서 n바이트 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '20 : 개행코드 포함' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "後ろから10行出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile11' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile12' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile13' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile14' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile15' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile16' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile17' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "後ろからn行出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "後ろからnバイト出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '20 : 改行コード付き' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "10 lines output from the back" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile11' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile12' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile13' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile14' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile15' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile16' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile17' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "n-line output from the back" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile18' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile19' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile20' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -n 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "n-byte output from the back" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '20 : Include NewLine code' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tail -c 3 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : cd                               #
#--------------------------------------------#
function func_command_cd() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象フォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "작업 디렉토리 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : 작업 디렉토리" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 작업 디렉토리" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1로 이동" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2로 이동" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "作業ディレクトリの変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : 作業ディレクトリ" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在作業ディレクトリ" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1に移動" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2に移動" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Changing the Working Directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Working Directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "pwd : Directory2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cd ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Working Directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Move Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Move Directory2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : chgrp                            #
#--------------------------------------------#
function func_command_chgrp() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/group : 파일에서 확인 가능" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : 파일 그룹 소유권이 admin으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : 폴더 그룹 소유권이 admin으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 그룹 소유권 변경 전 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 그룹 소유권 변경 후 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 그룹 소유권 변경 전 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 그룹 소유권 변경 후 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일 그룹 소유권이 admin으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : 폴더 그룹 소유권이 admin으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 그룹 소유권 변경 전 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 그룹 소유권 변경 후 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/group : ファイルから確認可能" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : ファイルグループの所有権がadminに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : フォルダグループ所有権がadminに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルグループの所有権変更前 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルグループの所有権変更後 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダグループの所有権変更前 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダグループの所有権変更後 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル・フォルダグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイルグループの所有権がadminに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : フォルダグループの所有権がadminに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダグループの所有権変更前 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダグループの所有権変更後 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change File group Ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change folder group ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/group : Check from the File" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : Change file group ownership to admin" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Change folder group ownership to admin" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp admin ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change file/folder group ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : Change file group ownership to admin" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : Change folder group ownership to admin" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file/folder groups :(${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chgrp -R admin ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file/folder groups : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : chmod                            #
#--------------------------------------------#
function func_command_chmod() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : 파일 그룹 소유권이 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : 폴더 그룹 소유권이 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 그룹 소유권 변경 전 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 그룹 소유권 변경 후 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 그룹 소유권 변경 전 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 그룹 소유권 변경 후 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더 그룹 소유권 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일 그룹 소유권이 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : 폴더 그룹 소유권이 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 그룹 소유권 변경 전 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 그룹 소유권 변경 후 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : ファイルグループの所有権が777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : フォルダグループ所有権が777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルグループの所有権変更前 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルグループの所有権変更後 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダグループの所有権変更前 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダグループの所有権変更後 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル・フォルダグループの所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイルグループの所有権が777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : フォルダグループの所有権が777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダグループの所有権変更前 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダグループの所有権変更後 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change File group Ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change folder group ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : Change file group ownership to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Change folder group ownership to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod 777 ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change file/folder group ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : Change file group ownership to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : Change folder group ownership to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file/folder groups :(${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chmod -R 777 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file/folder groups : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : chown                            #
#--------------------------------------------#
function func_command_chown() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-R]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-R]" | sed 's/_/ /g'
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 소유자 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더 소유자 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/passwd : 파일에서 확인 가능" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : 파일 소유자가 ownchange으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : 폴더 소유자가 ownchange으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 소유자 변경 전 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 소유자 변경 후 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 소유자 변경 전 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 소유자 변경 후 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더 소유자 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일 소유자가 ownchange으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : 폴더 소유자가 ownchange으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 소유자 변경 전 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 소유자 변경 후 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダ所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/passwd : ファイルから確認可能" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : ファイル所有権がownchangeに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : フォルダ所有権がownchangeに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有権変更前 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有権変更後 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダの所有権変更前 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダの所有権変更後 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル・フォルダ所有権変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイル所有権がownchangeに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : フォルダ所有権がownchangeに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダ所有権変更前 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル・フォルダ所有権変更後 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change File Ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change folder ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "/etc/passwd : Check from the File" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : Change file ownership to ownchange" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Change folder ownership to ownchange" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file groups : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown ownchange ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of folder groups : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change file/folder ownership" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : Change file ownership to ownchange" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : Change folder ownership to ownchange" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing ownership of file/folder groups :(${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            chown -R ownchange ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing ownership of file/folder groups : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : pwd                              #
#--------------------------------------------#
function func_command_pwd() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "작업 디렉토리 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "작업 디렉토리 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "pwd" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "作業ディレクトリ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "作業ディレクトリ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "pwd" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output Working Directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output Working Directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cd ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "pwd" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            pwd >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : mkdir                            #
#--------------------------------------------#
function func_command_mkdir() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-pm]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-pm]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象フォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-pm]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : 폴더를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 전 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 후 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "권한을 설정하면서 폴더 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : 폴더를 생성(권한 : 710)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 전 : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 후 : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리까지 모두 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory3/SubDirectory4 : 폴더를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 전 : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 생성 후 : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダ作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : フォルダ作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成前 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成後 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "権限を設定しながらフォルダを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : フォルダ作成(権限 : 710)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成前 : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成後 : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位ディレクトリまですべて作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory3/SubDirectory4 : フォルダ作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成前 : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ作成後 : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Folder Create" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Folder Create" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before creating a folder : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After creating a folder : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create folder while setting permissions" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2 : フォルダ作成(権限 : 710)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before creating a folder : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -m 710 ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After creating a folder : (Directory2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create all down to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory3/SubDirectory4 : Folder Create" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before creating a folder : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/SubDirectory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After creating a folder : (Directory3/SubDirectory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : rmdir                            #
#--------------------------------------------#
function func_command_rmdir() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/SubDirectory3/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-p]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-p]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象フォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-p]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더를 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : 폴더를 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 삭제 전 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 삭제 후 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리까지 모두 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/SubDirectory3 : 폴더를 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 삭제 전 : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더를 삭제 후 : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダ削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : フォルダ削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ削除前 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ削除後 : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位ディレクトリまですべて削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/SubDirectory3 : フォルダ削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ削除前 : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ削除後 : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Folder Delete" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Folder Delete" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a folder : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a folder : (Directory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete all down to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/SubDirectory3 : Folder Delete" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a folder : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rmdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a folder : (Directory2/SubDirectory3)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : rm                               #
#--------------------------------------------#
function func_command_rm() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile4.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ifr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ifr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ifr]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일을 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : 파일를 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 전 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 후 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일을 삭제시 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일를 삭제시 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 전 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 후 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일을 강제 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt : 파일를 강제 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 전 : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 후 : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리까지 모두 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile4.txt : 하위 디렉토리까지 모두 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 전 : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일를 삭제 후 : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : ファイル削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除前 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除後 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルを削除する際の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイルを削除する際の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除前 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除後 : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルを強制削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile3.txt : ファイルを強制削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除前 : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除後 : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位ディレクトリまですべて削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile4.txt : 下位ディレクトリまですべて削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除前 : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル削除後 : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "File Delete" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : File Delete" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a File : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a File : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Questions when deleting file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : Questions when deleting file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a file : (${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a file : (Direct${commandItem}_TestFile2.txtory1)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Force file deletion" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Force file deletion" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a file : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -f ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a file : (${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete all down to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile4.txt : Delete all down to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before deleting a File : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rm -r ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After deleting a File : (Directory1/${commandItem}_TestFile4.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : mv                               #
#--------------------------------------------#
function func_command_mv() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ifn]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ifn]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ifn]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 이동" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : 파일 이동" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 이동 전 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 이동 후 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile11.txt : 파일 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 이름 변경 전 : (수정전 : ${commandItem}_TestFile1.txt, 수정후 : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 이름 변경 후 : (수정전 : ${commandItem}_TestFile1.txt, 수정후 : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory4/ : 폴더 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 이름 변경 전 : (수정전 : Directory3, 수정후 : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더 이름 변경 후 : (수정전 : Directory3, 수정후 : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 질문 전 : (수정전 : ${commandItem}_TestFile11.txt, 수정후 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 질문 후 : (수정전 : ${commandItem}_TestFile11.txt, 수정후 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 및 폴더 강제이동 또는 강제 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile5.txt : 파일 및 폴더 강제 이동 또는 강제 이름 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 및 폴더 강제 이동 또는 강제 이름 변경 전 : (수정전 : ${commandItem}_TestFile3.txt, 수정후 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 및 폴더 강제 이동 또는 강제 이름 변경 후 : (수정전 : ${commandItem}_TestFile3.txt, 수정후 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 명령이 실행되지 않음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : 파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 명령이 실행되지 않음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 명령이 실행되지 않음 전 : (수정전 : ${commandItem}_TestFile2.txt, 수정후 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더 이동 또는 이름 변경시 기존 파일/폴더가 존재한다면 명령이 실행되지 않음 후 : (수정전 : ${commandItem}_TestFile2.txt, 수정후 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル移動" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : ファイル移動" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル移動前 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル移動後 : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル名変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : ファイル名変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル名変更前 : (変更前 : ${commandItem}_TestFile1.txt, 変更後 : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル名変更前 : (変更前 : ${commandItem}_TestFile1.txt, 変更後 : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダ名変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : フォルダ名変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ名変更前 : (変更前 : Directory3, 変更後 : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダ名変更後 : (変更前 : Directory3, 変更後 : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルを移動する際の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイルを移動する際の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル/フォルダの移動または名前変更時に既存のファイル/フォルダが存在する場合は質問 前 : (変更前 : ${commandItem}_TestFile11.txt, 変更後 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル/フォルダの移動または名前変更時に既存のファイル/フォルダが存在する場合は質問 後 : (変更前 : ${commandItem}_TestFile11.txt, 変更後 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルを強制移動,強制名前変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile5.txt : ファイルを強制移動,強制名前変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルを強制移動,強制名前変更 前 : (変更前 : ${commandItem}_TestFile3.txt, 変更後 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルを強制移動,強制名前変更 後 : (変更前 : ${commandItem}_TestFile3.txt, 変更後 : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル/フォルダ移動または名前変更時に既存のファイル/フォルダが存在する場合、命令が実行されない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : ファイル/フォルダ移動または名前変更時に既存のファイル/フォルダが存在する場合、命令が実行されない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル/フォルダ移動または名前変更時に既存のファイル/フォルダが存在する場合、命令が実行されない 前 : (変更前 : ${commandItem}_TestFile11.txt, 変更後 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル/フォルダ移動または名前変更時に既存のファイル/フォルダが存在する場合、命令が実行されない 後 : (変更前 : ${commandItem}_TestFile11.txt, 変更後 : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "File Moving" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile1.txt : File Moving" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Moving a File : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Moving a File : (${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Changing the File Name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : Changing the File Name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before changing the File Name : (Before : ${commandItem}_TestFile1.txt, After : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After changing the File Name : (Before : ${commandItem}_TestFile1.txt, After : ${commandItem}_TestFile11.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Folder Rename" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory4/ : Folder Rename" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Folder Rename : (Before : Directory3, After : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv ${filePathParam%/}/tmp/${commandItem}/Directory3/ ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Folder Rename : (Before : Directory3, After : Directory4)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Questions if existing files/folders exist when moving or renaming files/folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : Questions if existing files/folders exist when moving or renaming files/folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Questions if existing files/folders exist when moving or renaming files/folders Before : (Before : ${commandItem}_TestFile11.txt, After : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -i ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile11.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Questions if existing files/folders exist when moving or renaming files/folders After : (Before : ${commandItem}_TestFile11.txt, After : ${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Forced move or rename files and folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1 : Forced move or rename files and folders" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Forced move or rename files and folders Before : (Before : ${commandItem}_TestFile3.txt, After : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -f ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile3.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Forced move or rename files and folders After : (Before : ${commandItem}_TestFile3.txt, After : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/Directory4/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "If an existing file/folder exists when you move or rename a file/folder, the command does not run" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${commandItem}_TestFile2.txt : If an existing file/folder exists when you move or rename a file/folder, the command does not run" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "If an existing file/folder exists when you move or rename a file/folder, the command does not run Before : (Before : ${commandItem}_TestFile2.txt, After : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            mv -n ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory4/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "If an existing file/folder exists when you move or rename a file/folder, the command does not run After : (Before : ${commandItem}_TestFile2.txt, After : ${commandItem}_TestFile5.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : cp                               #
#--------------------------------------------#
function func_command_cp() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo 'TestData' > ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/Test.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-irpa]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-irpa]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-irpa]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : 파일 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 복사 전 : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 복사 후 : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 복사(이름 재정의)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : 파일 복사(이름 재정의)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 복사(이름 재정의) 전 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 복사(이름 재정의) 후 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "출력 경로에 같은 이름의 파일이 존재하는경우 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : 출력 경로에 같은 이름의 파일이 존재하는경우 질문" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "출력 경로에 같은 이름의 파일이 존재하는경우 질문 전 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "출력 경로에 같은 이름의 파일이 존재하는경우 질문 후 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리 모두 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/Test/Test.txt                : 하위 디렉토리 모두 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 디렉토리 모두 복사 전 : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 디렉토리 모두 복사 후 : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile1.txt : 파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사 전 : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사 후 : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사(-p) & 심볼릭 링크 제체를 복사하고 원본 참조도 유지" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile2.txt : 파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사(-p) & 심볼릭 링크 제체를 복사하고 원본 참조도 유지" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사(-p) & 심볼릭 링크 제체를 복사하고 원본 참조도 유지 전 : (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 소유자, 그룹, 권한, 타임스탬프 등을 원본 그대로 복사(-p) & 심볼릭 링크 제체를 복사하고 원본 참조도 유지 후 : (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダ削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : ファイルコピー" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルコピー前 : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルコピー後 : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルコピー（名前再定義）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : ファイルコピー（名前再定義）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルコピー（名前再定義）前 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルコピー（名前再定義）後 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "出力パスに同名のファイルが存在する場合の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : 出力パスに同名のファイルが存在する場合の質問" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "出力パスに同名のファイルが存在する場合の質問前 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "出力パスに同名のファイルが存在する場合の質問後 : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "サブディレクトリすべてコピー" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/Test/Test.txt                : サブディレクトリすべてコピー" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "サブディレクトリすべてコピー前 : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "サブディレクトリすべてコピー後 : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile1.txt : ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー前 : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー後 : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー(-p)&シンボリックリンクの堤体をコピーし、原本参照も保持" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile2.txt : ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー(-p)&シンボリックリンクの堤体をコピーし、原本参照も保持" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cp -a ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー(-p)&シンボリックリンクの堤体をコピーし、原本参照も保持前 : (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -a ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルの所有者、グループ、権限、タイムスタンプなどを元のままコピー(-p)&シンボリックリンクの堤体をコピーし、原本参照も保持後 : (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "File copy" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile1.txt : File copy" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before File copy : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After File copy : (Directory2/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy File (Rename)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : Copy File (Rename)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Copy File (Rename) : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Copy File (Rename) : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Questions if a file of the same name exists in the output path" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/${commandItem}_TestFile3.txt : Questions if a file of the same name exists in the output path" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Questions if a file of the same name exists in the output path : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Questions if a file of the same name exists in the output path : (Directory2/${commandItem}_TestFile3.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy all subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory1/Test/Test.txt                : Copy all subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Copy all subdirectories : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -r ${filePathParam%/}/tmp/${commandItem}/Directory2/ ${filePathParam%/}/tmp/${commandItem}/Directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Copy all subdirectories : (Directory1/Test/Test.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy file owners, groups, privileges, timestamps, and so on" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile1.txt : Copy file owners, groups, privileges, timestamps, and so on" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Copy file owners, groups, privileges, timestamps, and so on : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -p ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Copy file owners, groups, privileges, timestamps, and so on : (Directory2/Test/${commandItem}_TestFile1.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy file owners, groups, privileges, timestamps, and so on(-p) & copy the symbolic link system and maintain the original reference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Directory2/Test/${commandItem}_TestFile2.txt : Copy file owners, groups, privileges, timestamps, and so on(-p) & copy the symbolic link system and maintain the original reference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cp -a ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Before Copy file owners, groups, privileges, timestamps, and so on (-p) & copy the symbolic link system and maintain the original reference: (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cp -a ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/Test/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "After Copy file owners, groups, privileges, timestamps, and so on (-p) & copy the symbolic link system and maintain the original reference: (Directory2/Test/${commandItem}_TestFile2.txt)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : cut                              #
#--------------------------------------------#
function func_command_cut() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo '1234567890' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'ABCDEFGHIJKL' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '2b yteString1 2byteS,tring2,2byteString3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '2byteString12byteString2,2byteString3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'ＡTestFile1,3Testing2,3Testing3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'あTestFile14Testing2,4Testing3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-bcfdw]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[출력_자릿수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-bcfdw]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[出力桁数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-bcfdw]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Output_digits]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "각 라인 선두에서부터 n바이트 위치의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : 선두에서부터 n바이트 위치의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  : 멀티바이트 문자는 정상적으로 출력되지 않을 가능성이 있다." >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "각 라인 선두에서부터 n바이트 위치부터 m바이트 위치까지의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : 선두에서부터 n바이트 위치부터 m바이트 위치까지의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTes : 멀티바이트 문자는 정상적으로 출력되지 않을 가능성이 있다." >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTes " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "각 라인 선두에서부터 n번째 위치의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : 선두에서부터 n번째 위치의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Ａ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "각 라인 선두에서부터 n번째 위치부터 m번째 위치까지의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : 선두에서부터 n번째 위치부터 m번째 위치까지의 문자 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "스페이스로 구분지어서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2,2byteString3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1,3Testing2,3Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2,4Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "-d옵션뒤의 기호로 구분하며 -f뒤의 n번째 항목 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yteString1 2byteS" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -f1 -d , ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -f1 -d ',' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -f1 -d "," ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cut -f1 -d, ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ,  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ',' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d "," ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d, ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "各行先頭からnバイト位置の文字を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : 各行先頭からnバイト位置の文字を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  : マルチバイト文字は正常に出力されない可能性がある" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "先頭からnバイト位置からmバイト位置までの文字出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : 各行先頭からnバイト位置からmバイト位置までの文字出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTe : マルチバイト文字は正常に出力されない可能性がある" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTe " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "先頭先頭からn番目の位置の文字出" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : 先頭先頭からn番目の位置の文字出" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Ａ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "先頭からn番目の位置からm番目の位置までの文字出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : 先頭からn番目の位置からm番目の位置までの文字出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "先頭からn番目の位置からm番目の位置までの文字出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2,2byteString3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1,3Testing2,3Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2,4Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "-dオプションの後ろの記号で区分し-fの後ろのn番目の項目を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yteString1 2byteS" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -f1 -d , ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -f1 -d ',' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -f1 -d "," ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cut -f1 -d, ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ,  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ',' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d "," ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d, ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Text output from each line lead to [n]bit position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : Text output from each line lead to [n]bit position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "  : There is a possibility that the multi-byte character may not be output normally" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete all down to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : Character output from the beginning to the [n]byte position to the [m]byte position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTes : There is a possibility that the multi-byte character may not be output normally" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTes " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -b 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Character output from the beginning to the [n]th position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 : Character output from the beginning to the [n]th position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Ａ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あ " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Character output from head to [n]th position to [m]th position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "12345 : Character output from head to [n]th position to [m]th position" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDE " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yt " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byte " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTest " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -c 1-5 ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output separated by space" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2,2byteString3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1,3Testing2,3Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2,4Testing3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "The -d option is symbol-separated and the nth item is displayed after the -f option" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1234567890" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ABCDEFGHIJKL" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2b yteString1 2byteS" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2byteString12byteString2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ＡTestFile1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "あTestFile14Testing2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -f1 -d ,  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -f1 -d ','  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -f1 -d ","  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "cut -f1 -d,  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ,  ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d ',' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d "," ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cut -f1 -d, ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : dd                               #
#--------------------------------------------#
function func_command_dd() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo "TestFile01TestFile02TestFile03TestFile04TestFile05TestFile06TestFile07TestFile08TestFile09TestFile10" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_입력파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_출력파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象入力ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象出力ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_InputFile]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_OutputFile]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "블록 단위로 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 블록 단위로 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "32byte 블록 단위로 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byte 블록 단위로 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "32byte 블록 단위로 2블록 만큼 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byte 블록 단위로 2블록 만큼 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "32byte 블록 단위로 2블록 만큼 스킵후 나머지 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byte 블록 단위로 2블록 만큼 스킵후 나머지 복사해서 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ブロック単位でコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ブロック単位でコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "32byteブロック単位でコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byteブロック単位でコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" ":" 'dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "32byteブロック単位で2ブロック分コピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byteブロック単位で2ブロック分コピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "32byteブロック単位で2ブロック分スキップした後、残りをコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 32byteブロック単位で2ブロック分スキップした後、残りをコピーして出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy in blocks and print out" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Copy in blocks and print out" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy and print in 32-byte blocks" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Copy and print in 32-byte blocks" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt" bs=32 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Copy and output 2 blocks per 32 byte block" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Copy and output 2 blocks per 32 byte block" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt" bs=32 count=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile4.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Skip by 2 blocks per 32-byte block and copy the rest and output it" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Skip by 2 blocks per 32-byte block and copy the rest and output it" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            dd if="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" of="${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt" bs=32 skip=2 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile5.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : diff                             #
#--------------------------------------------#
function func_command_diff() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory2/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory3/
    echo "Test File01" > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File02" >> ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File03" >> ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File04" >> ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File05" >> ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File01" > ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo "Test File02" >> ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo "Test File03" >> ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo "Test File04" >> ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo "Test File05" >> ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt
    echo "Test   File01" > ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    echo "Test File02" >> ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    echo "test File03" >> ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    echo "test File04" >> ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    echo "test File05" >> ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-qsib]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-qsib]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-qsib]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "두 파일을 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교 : 출력 없음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "차이가 있는 파일의 경우 differ 라고 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교 : 출력 없음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교 : [인수1] and [인수2] differ 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "차이가 없는 파일의 경우 identical 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교 : [인수1] and [인수2] identical 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대소문자 구분없이 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교 : 출력 없음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "연속된 스페이스는 하나로 인식하여 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교 : 출력 없음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 없는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 차이가 있는 파일 비교" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較 : 出力なし" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "差のあるファイルの場合、differと出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較 : 出力なし" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較 : [引数1] and [引数2] differ 出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "差のないファイルの場合、identical出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較 : [引数1] and [引数2] identical 出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "大文字と小文字の区別なくファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較 : 出力なし" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "連続したスペースは一つとして認識し、ファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較 : 出力なし" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 差のないファイル比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 異なるファイルを比較" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Compare two files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " File comparison without difference : no output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Comparison of files without difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output as differ for files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " File comparison without difference : no output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences : [argument1] and [argument2] differ print" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Comparison of files without difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -q ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "identical output for files with no difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " File comparison without difference : [argument1] and [argument2] identical print" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < TestFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > testFile05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Comparison of files without difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -s ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "case sensitive file comparison" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " File comparison without difference : no output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 1c1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > Test   File01" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Comparison of files without difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -i ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Recognize consecutive spaces as one and compare files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " File comparison without difference : no output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " 3,5c3,5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " < Test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " ---" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File03" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File04" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " > test File05" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Comparison of files without difference" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo " Compare files with differences" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            diff -b ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/Directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : find                             #
#--------------------------------------------#
function func_command_find() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory2/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory4/
    echo "Test File01" > ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt
    echo "Test File02" > ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[옵션]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[검색패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[オプション]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[検索パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[option]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일이 존재 하는지 체크" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일이 존재하면 해당 경로 출력, 없다면 No such file or directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리까지 파일/폴더들을 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 디렉토리까지 파일/폴더들을 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 패턴으로 파일/폴더를 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 패턴으로 파일/폴더를 검색하여 결과값이 있다면 파일/폴더 경로 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*TestF*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*Directory2*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*TestF*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*Directory2*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 폴더의 모든 파일을 출력(-print : 개행있음, -print0 : 개행없음)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 폴더의 모든 파일을 출력(-print : 개행있음, -print0 : 개행없음)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory2 -name '*find*' -print0 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "깊이 n만큼의 상위 경로까지만 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "깊이 n만큼의 상위 경로까지만 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "깊이 3의 파일은 검색이 안됨" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "깊이 2의 파일이 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4 -maxdepth 2 -name "*File2*"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "검색된 패턴의 파일 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "검색된 패턴의 파일 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete '" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "검색된 패턴의 파일 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルが存在するかどうかをチェック" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイルが存在する場合はそのパスを出力、存在しない場合は[No such file or directory]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位ディレクトリまでファイル/フォルダをすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "下位ディレクトリまでファイル/フォルダをすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたパターンでファイル/フォルダを検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定されたパターンでファイル/フォルダを検索し、結果値がある場合はファイル/フォルダ経路を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*TestF*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*Directory2*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*TestF*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*Directory2*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位フォルダのすべてのファイルを出力(-print:改行あり、-print0:改行なし)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "下位フォルダのすべてのファイルを出力(-print:改行あり、-print0:改行なし)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print0 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "深さ2の上位経路まで検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "深さ2の上位経路まで検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "深さ3のファイルは検索できない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "深さ2のファイルが検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4 -maxdepth 2 -name "*File2*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt 
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "検索されたパターンのファイルを削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "検索されたパターンのファイルを削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "検索されたパターンのファイルを削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Check if a file exists" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Check if a file exists, Not exist : No such file or directory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs all files/folders in the subdirectory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs all files/folders in the subdirectory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search for files/folders in a specified pattern" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search for files/folders in a specified pattern and output the file/folder path if there is a result" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*TestF*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name "*Directory2*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs all files in subfolders (-print: New Line, -print0: )" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs all files in subfolders (-print: New Line, -print0: )" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print0 " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-print0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1 -name '*find*' -print0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search only up to upper path by depth n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search only up to upper path by depth n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*" " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Files with depth 3 are not retrieved" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3 -maxdepth 2 -name "*File2*"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "File at depth 2 is detected" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4 -maxdepth 2 -name "*File2*"  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete files in retrieved patterns" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Delete files in retrieved patterns" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Delete files in retrieved patterns" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            find ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/find_TestFile2.txt -name "*File2*" -delete >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/Directory1/Directory3/Directory4/Directory5/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : clear                            #
#--------------------------------------------#
function func_command_clear() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "작업중인 터미널 화면을 정리" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "작업중인 터미널 화면을 정리" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "clear" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            clear
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" ":" "clear" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "作業中のターミナル画面を整理" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "作業中のターミナル画面を整理" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "clear" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            clear
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" ":" "clear" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Clean up the terminal screen you're working on" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Clean up the terminal screen you're working on" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "clear" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            clear
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : man                              #
#--------------------------------------------#
function func_command_man() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[명령어]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[コマンド]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Command]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "다른 명령어에 대한 매뉴얼 페이지를 표시하는 데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "다른 명령어에 대한 매뉴얼 페이지를 표시하는 데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "man cat" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            man cat >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "他のコマンドのマニュアルページを表示するために使います" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "他のコマンドのマニュアルページを表示するために使います" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "man cat" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            man cat >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Used to display manual pages for other commands" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Used to display manual pages for other commands" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "man cat" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            man cat >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : df                               #
#--------------------------------------------#
function func_command_df() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-hHl]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-hHl]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-hHl]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "단위가 1024로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "단위가 1024로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "df -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "단위가 1000로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "단위가 1000로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "df -H" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -H >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "로컬 마운트 디스크 정보만을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "로컬 마운트 디스크 정보만을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "df -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単位が1024で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "単位が1024で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "df -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単位が1000で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "単位が1000で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "df -H" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -H >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ローカルマウントディスク情報のみを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ローカルマウントディスク情報のみを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "df -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unit calculated as 1024 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Unit calculated as 1024 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "df -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unit calculated as 1000 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Unit calculated as 1000 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "df -H" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -H >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output local mount disk information only" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output local mount disk information only" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "df -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            df -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : du                               #
#--------------------------------------------#
function func_command_du() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ahs]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ahs]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ahs]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리내의 모든 파일/폴더의 용량을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 디렉토리내의 모든 파일/폴더의 용량을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "du -a ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -a ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "단위가 1024로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "단위가 1024로 계산되어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "du -h ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -h ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정 폴더의 사용 용량의 합계 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정 폴더의 사용 용량의 합계 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "du -s ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -s ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "下位ディレクトリ内のすべてのファイル/フォルダの容量を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "下位ディレクトリ内のすべてのファイル/フォルダの容量を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "du -a ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -a ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単位が1024で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "単位が1024で計算され出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "du -h" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -h >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定フォルダの使用容量の合計出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定フォルダの使用容量の合計出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "du -s ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -s ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs the capacity of all files/folders in a subdirectory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs the capacity of all files/folders in a subdirectory" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "du -a ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -a ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unit calculated as 1024 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Unit calculated as 1024 and output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "du -h ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -h ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Total Output of Capacity Used for a Specified Folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Total Output of Capacity Used for a Specified Folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "du -s ${filePathParam%/}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            du -s ${filePathParam%/} >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : history                          #
#--------------------------------------------#
function func_command_history() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "터미널에서 최근에 실행된 명령어 목록을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "터미널에서 최근에 실행된 명령어 목록을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "history" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            history >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ターミナルで最近実行されたコマンドのリストを表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ターミナルで最近実行されたコマンドのリストを表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "history" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            history >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays a list of recently executed commands from the terminal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays a list of recently executed commands from the terminal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "history" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            history >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : less                             #
#--------------------------------------------#
function func_command_less() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo ' ### less Command  ### ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Exit ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' less Mode exit : q, Q, :q, :Q, ZZ ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Help ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' less Help : h H ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Move ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1line down : [downkey], e, j, [enter] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1line up : [upkey], y, k ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1page down : f, [space] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1page up : b ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 0.5page down : d ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 0.5page up : u ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search to Next page : /[Search_Word] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search to Previous page : ?[Search_Word] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Jump ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' first line : g ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' last line : G ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    LINENUM=1
    for n in {1..100} 
    do 
        echo "less start $LINENUM" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
        LINENUM=$(( LINENUM + 1 ))
    done
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[옵션]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[검색패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[オプション]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[検索パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[option]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 내용 확인(수정은 불가)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 내용 확인(수정은 불가)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル内容の確認(修正は不可)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル内容の確認(修正は不可)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Check the contents of the file (no modification)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Check the contents of the file (no modification)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : more                             #
#--------------------------------------------#
function func_command_more() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo ' ### more Command  ### ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Exit ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' more Mode exit : q, Q, :q, :Q, ZZ ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Help ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' more Help : h H ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Move ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1line down : [downkey], e, j, [enter] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1line up : [upkey], y, k ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1page down : f, [space] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 1page up : b ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 0.5page down : d ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' 0.5page up : u ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search to Next page : /[Search_Word] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Search to Previous page : ?[Search_Word] ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' Jump ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' first line : g ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo ' last line : G ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    LINENUM=1
    for n in {1..100} 
    do 
        echo "more start $LINENUM" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
        LINENUM=$(( LINENUM + 1 ))
    done
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[옵션]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[검색패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[オプション]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[検索パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[option]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-name | -maxdepth | -print | -delete]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 내용 확인(수정은 불가)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일 내용 확인(수정은 불가)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル内容の確認(修正は不可)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル内容の確認(修正は不可)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Check the contents of the file (no modification)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Check the contents of the file (no modification)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    more ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : whoami                           #
#--------------------------------------------#
function func_command_whoami() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 로그인한 사용자의 이름을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 로그인한 사용자의 이름을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "whoami" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            whoami >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在ログインしているユーザーの名前を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在ログインしているユーザーの名前を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "whoami" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            whoami >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays the name of the user who is currently logged in" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays the name of the user who is currently logged in" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "whoami" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            whoami >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : echo                             #
#--------------------------------------------#
function func_command_echo() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[출력_메시지]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[出力メッセージ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Output_messages]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "터미널에 텍스트 라인이나 변수의 값을 표시하는데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "터미널에 텍스트 라인이나 변수의 값을 표시하는데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "echo" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "echo 'Test Text'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test Text' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ターミナルにテキストラインまたは変数の値を表示するために使用" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ターミナルにテキストラインまたは変数の値を表示するために使用" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "echo" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "echo 'Test Text'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test Text' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Used to display the value of a text line or variable in a terminal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Used to display the value of a text line or variable in a terminal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "echo" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "echo 'Test Text'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test Text' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : id                               #
#--------------------------------------------#
function func_command_id() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ugGF]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ugGF]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ugGF]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 사용자 또는 지정된 사용자에 대한 식별자 정보를 제공" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 사용자 또는 지정된 사용자에 대한 식별자 정보를 제공" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "id" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "각 사용자를 고유하게 식별하는 숫자(UID), 일반적으로 0은 root 사용자의 UID" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "각 사용자를 고유하게 식별하는 숫자(UID), 일반적으로 0은 root 사용자의 UID" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "id -u" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -u >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자 그룹을 식별하는 데 사용되는 숫자(GID), 사용자들은 하나 이상의 그룹에 속함" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "사용자 그룹을 식별하는 데 사용되는 숫자(GID), 사용자들은 하나 이상의 그룹에 속함" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "id -g" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -g >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자 모든 그룹ID 출력(숫자로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "사용자 모든 그룹ID 출력(숫자로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "id -G" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -G >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在のユーザーまたは指定されたユーザーの識別子情報を提供" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在のユーザーまたは指定されたユーザーの識別子情報を提供" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "id" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "各ユーザを一意に識別する数字（UID）、一般的に0はrootユーザのUID" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "各ユーザを一意に識別する数字（UID）、一般的に0はrootユーザのUID" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "id -u" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -u >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーグループを識別するために使用される数字(GID)、ユーザーは1つ以上のグループに属する" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ユーザーグループを識別するために使用される数字(GID)、ユーザーは1つ以上のグループに属する" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "id -g" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -g >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーすべてのグループIDを出力（数字で出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ユーザーすべてのグループIDを出力（数字で出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "id -G" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -G >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output of all user group IDs (number output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output of all user group IDs (number output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "id" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A number (UID) that uniquely identifies each user, where 0 is usually the UID of the root user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "A number (UID) that uniquely identifies each user, where 0 is usually the UID of the root user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "id -u" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -u >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Numbers (GIDs) used to identify user groups, users belong to one or more groups" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Numbers (GIDs) used to identify user groups, users belong to one or more groups" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "id -g" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -g >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output of all user group IDs (number output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output of all user group IDs (number output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "id -G" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            id -G >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : uname                            #
#--------------------------------------------#
function func_command_uname() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-snrvmap]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-snrvmap]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-snrvmap]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "커널 이름 출력(기본옵션 -s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "커널 이름 출력(기본옵션 -s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -s" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -s >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "네트워크 호스트 이름 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "네트워크 호스트 이름 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -n >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "커널 릴리스 버전 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "커널 릴리스 버전 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -r" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -r >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "커널 빌드 시간과 관련된 추가정보를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "커널 빌드 시간과 관련된 추가정보를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -v" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -v >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "시스템 하드웨어 타입정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "시스템 하드웨어 타입정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -m" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -m >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}""" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "모든 정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -a" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -snrvm" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -a >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -snrvm >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "프로세스 타입정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "프로세스 타입정보 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uname -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -p >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "カーネル名出力(基本オプション-s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "カーネル名出力(基本オプション-s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -s" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -s >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ネットワークホスト名の出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ネットワークホスト名の出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -n >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "カーネルリリースバージョン出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "カーネルリリースバージョン出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -r" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -r >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "カーネルビルド時間に関連する追加情報を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "カーネルビルド時間に関連する追加情報を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -v" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -v >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "システムハードウェアタイプ情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "システムハードウェアタイプ情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -m" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -m >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "すべての情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "すべての情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -a" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -snrvm" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -a >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -snrvm >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "プロセスタイプ情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "プロセスタイプ情報出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uname -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -p >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Kernel Name Output (Default Option -s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kernel Name Output (Default Option -s)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -s" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -s >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Network Hostname Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Network Hostname Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -n >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Kernel Release Version Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kernel Release Version Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -r" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -r >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs additional information related to kernel build time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs additional information related to kernel build time" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -v" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -v >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output system hardware type information" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output system hardware type information" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -m" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -m >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output all information" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output all information" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -a" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -snrvm" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -a >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -snrvm >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Process Type Information Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Process Type Information Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uname -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uname -p >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : uptime                           #
#--------------------------------------------#
function func_command_uptime() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "시스템이 얼마나 오랜 기간동안 다시 시작되지 않고 실행 중인지를 표시(시스템의 가동 시간, 현재 시간, 사용자 수 및 시스템 부하 평균)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "시스템이 얼마나 오랜 기간동안 다시 시작되지 않고 실행 중인지를 표시(시스템의 가동 시간, 현재 시간, 사용자 수 및 시스템 부하 평균)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "uptime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uptime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "システムがどのくらいの期間再起動せずに実行中であるかを表示（システムの稼働時間、現在時間、ユーザ数およびシステム負荷平均）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "システムがどのくらいの期間再起動せずに実行中であるかを表示（システムの稼働時間、現在時間、ユーザ数およびシステム負荷平均）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "uptime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uptime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Indicates how long the system is running without restarting(average system uptime, current time, number of users, and system load)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Indicates how long the system is running without restarting(average system uptime, current time, number of users, and system load)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "uptime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            uptime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : env                              #
#--------------------------------------------#
function func_command_env() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-0u]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[환경변수선언]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[일시적명령어]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-0u]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[環境変数宣言]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[一時的命令語]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-0u]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Declaration_of_Environmental_Variables]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[a_temporary_command]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "등록되어있는 환경변수를 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "등록되어있는 환경변수를 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "env" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "등록되어있는 환경변수를 모두 출력(개행코드 없음)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "등록되어있는 환경변수를 모두 출력(개행코드 없음)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "env -0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "일시적으로 설정되는 환경변수 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일시적으로 설정되는 환경변수 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "env TESTVariables=TESTenv" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env TESTVariables=TESTenv >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 환경변수를 제외하고 나머지 환경변수를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 환경변수를 제외하고 나머지 환경변수를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "env -u PATH" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -u PATH >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "登録されている環境変数をすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "登録されている環境変数をすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "env" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "登録されている環境変数をすべて出力（改行コードなし）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "登録されている環境変数をすべて出力（改行コードなし）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "env -0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n"
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一時的に設定される環境変数設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "一時的に設定される環境変数設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "env TESTVariables=TESTenv" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env TESTVariables=TESTenv >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定された環境変数を除いて残りの環境変数を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定された環境変数を除いて残りの環境変数を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "env -u PATH" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -u PATH >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output all registered environmental variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output all registered environmental variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "env" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output all registered environmental variables(no opening code)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output all registered environmental variables(no opening code)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "env -0" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -0 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Setting environment variables that are temporarily set" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Setting environment variables that are temporarily set" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "env TESTVariables=TESTenv" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env TESTVariables=TESTenv >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output the remaining environmental variables except for the specified environmental variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output the remaining environmental variables except for the specified environmental variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "env -u PATH" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env -u PATH >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : export                           #
#--------------------------------------------#
function func_command_export() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[선언환경변수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[宣言環境変数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Declaration_Environmental_Variables]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "셸/터미널 세션에서 생성된 변수를 자식 프로세스에 전달하여 환경 전체에서 접근 가능하게 합니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "셸/터미널 세션에서 생성된 변수를 자식 프로세스에 전달하여 환경 전체에서 접근 가능하게 합니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "export GLOBALVAR=GLOBALDATA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export GLOBALVAR=GLOBALDATA >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シェル/ターミナルセッションで生成された変数を子プロセスに伝達し、環境全体でアクセス可能にします" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "シェル/ターミナルセッションで生成された変数を子プロセスに伝達し、環境全体でアクセス可能にします" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "export GLOBALVAR=GLOBALDATA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export GLOBALVAR=GLOBALDATA >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Deliver variables created in shell/terminal sessions to child processes to make them accessible throughout the environment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Deliver variables created in shell/terminal sessions to child processes to make them accessible throughout the environment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "export GLOBALVAR=GLOBALDATA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            export GLOBALVAR=GLOBALDATA >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            env | grep GLOBALVAR >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : exit                             #
#--------------------------------------------#
function func_command_exit() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "셸/터미널 세션에서 생성된 변수를 자식 프로세스에 전달하여 환경 전체에서 접근 가능하게 합니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "셸/터미널 세션에서 생성된 변수를 자식 프로세스에 전달하여 환경 전체에서 접근 가능하게 합니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "exit" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'exit' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シェル/ターミナルセッションで生成された変数を子プロセスに伝達し、環境全体でアクセス可能にします" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "シェル/ターミナルセッションで生成された変数を子プロセスに伝達し、環境全体でアクセス可能にします" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "exit" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'exit' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Deliver variables created in shell/terminal sessions to child processes to make them accessible throughout the environment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Deliver variables created in shell/terminal sessions to child processes to make them accessible throughout the environment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "exit" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'exit' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : grep                             #
#--------------------------------------------#
function func_command_grep() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test File1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'apple,banana,cream,dust,test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'testbash,zsh,sh'>> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'TestFile4' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile4.log
    echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile4.log
    echo 'psa,psa,psa,psa' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/${commandItem}_TestFile5.log
    echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/${commandItem}_TestFile5.log
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}"
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ivwnlsreo]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[검색패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ivwnlsreo]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[検索パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ivwnlsreo]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 검색어(test)를 검색해서 검색결과를 포함한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 검색어(test)를 검색해서 검색결과를 포함한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 검색어(Test)를 대소문자 구분없이 검색해서 검색결과를 포함한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 검색어(Test)를 대소문자 구분없이 검색해서 검색결과를 포함한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 검색어(Test)를 검색해서 검색결과를 제외한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 검색어(Test)를 검색해서 검색결과를 제외한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 정확하게 일치하는 단어 단위로 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 정확하게 일치하는 단어 단위로 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 처음에 [검색어]가 포함된 행 번호가 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 처음에 [검색어]가 포함된 행 번호가 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 패턴에 의해 하나 이상의 행이 일치하는 파일의 이름을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 패턴에 의해 하나 이상의 행이 일치하는 파일의 이름을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 오류가 있어도 출력되지 않습니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 오류가 있어도 출력되지 않습니다" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 폴더에서 하위 디렉토리 파일들까지 모두 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 폴더에서 하위 디렉토리 파일들까지 모두 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -r test ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -r test ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상 파일에서 여러 패턴 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 여러 패턴 검색" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "일치하는 부분만 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "일치하는 부분만 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルから検索語（test）を検索し、検索結果を含む行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルから検索語（test）を検索し、検索結果を含む行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルから検索語(Test)を大文字·小文字の区別なく検索し、検索結果を含む行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルから検索語(Test)を大文字·小文字の区別なく検索し、検索結果を含む行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルから検索語(Test)を検索して検索結果を除いた行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルから検索語(Test)を検索して検索結果を除いた行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルで正確に一致する単語単位で検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルで正確に一致する単語単位で検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルで最初に[検索語]を含む行番号が表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルで最初に[検索語]を含む行番号が表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルからパターンによって1つ以上の行が一致するファイルの名前を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルからパターンによって1つ以上の行が一致するファイルの名前を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルからエラーがあっても出力されません" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルからエラーがあっても出力されません" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象フォルダからサブディレクトリファイルまですべて検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象フォルダからサブディレクトリファイルまですべて検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep test -r ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep test -r ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルから複数のパターンを検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルから複数のパターンを検索" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一致する部分のみ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "一致する部分のみ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search for a search term (test) in the target file and output a row containing the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search for a search term (test) in the target file and output a row containing the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search for a search term (Test) in the target file, case-insensitive, and output a row containing the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search for a search term (Test) in the target file, case-insensitive, and output a row containing the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -i test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search the search term (Test) in the target file and output the lines excluding the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search the search term (Test) in the target file and output the lines excluding the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -v test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search target files with exact matching word units" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search target files with exact matching word units" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -w test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays the row number that initially contains the [search word] in the destination file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays the row number that initially contains the [search word] in the destination file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -n test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs the name of a file in which one or more rows match by a pattern in the destination file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs the name of a file in which one or more rows match by a pattern in the destination file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep  -l test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "The target file does not output even if there is an error" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "The target file does not output even if there is an error" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -s test ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Search all the way from the destination folder to the subdirectory files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search all the way from the destination folder to the subdirectory files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -r test ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep  -r test ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Retrieving multiple patterns from destination files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Retrieving multiple patterns from destination files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -e cream -e zsh ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Outputs only the matching parts" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs only the matching parts" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            grep -o "[nN][aA]*" ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : ln                               #
#--------------------------------------------#
function func_command_ln() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory2/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test File1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'apple,banana,cream,dust,test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'testbash,zsh,sh'>> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-sf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[출력_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-sf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[出力ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-sf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Output_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하드 링크를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하드 링크(동일한 inode를 가지며 데이터 블록도 동일하게 공유)를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "심볼릭 링크를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "심볼릭 링크(원본 파일이 삭제되면 심볼릭 링크는 무효화됨)를 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "이미 존재하는 링크를 덮어쓸 때 작업 강제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "이미 존재하는 링크를 덮어쓸 때 작업 강제.옵션이 없다면 [File exists]를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ハードリンクを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ハードリンク（同一のノードを持ち、データブロックも同一に共有）を作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シンボリックリンクを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "シンボリックリンク(原本ファイルが削除されるとシンボリックリンクは無効になる)を作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "既に存在するリンクを上書きするときに作業強制。" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "既に存在するリンクを上書きするときに作業強制。オプションがない場合は、[File exists]を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create a hard link" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Create a hard link (with the same inode and the same data blocks shared)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create a symbolic link" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Create a symbolic link (the symbolic link is disabled when the original file is deleted)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Force action when overriding an already existing link." >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Force action when overriding an already existing link.If no option exists, output [File extists]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ln -f ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory2/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : ls                               #
#--------------------------------------------#
function func_command_ls() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/
    echo 'testFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/.hide_${commandItem}_TestFile0.txt
    echo 'testFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt
    echo 'testFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'testFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'testFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.txt
    echo 'testFile4' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile4.txt
    echo 'testFile5' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile5.txt
    echo 'testFile6' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile6.txt
    echo 'testFile7' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile7.txt
    echo 'testFile8' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile8.txt
    echo 'testFile9' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile9.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-laArtpRhi]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-laArtpRhi]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-laArtpRhi]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 폴더의 파일/폴더를 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 폴더의 파일/폴더를 표시(개행 없음)(폴더내 파일이 없는 경우 출력값 없음)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 폴더의 파일/폴더 상세정보 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 폴더의 파일/폴더 상세정보 표시(용량, 권한, 그룹, 갱신일자등을 표시)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재폴더(.),이전폴더(..),숨김파일표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재폴더(.),이전폴더(..),숨김파일표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "숨김파일표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "숨김파일표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "역순 출력(내림차순->폴더순)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "역순 출력(내림차순->폴더순)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "수정일자가 최신순으로 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "수정일자가 최신순으로 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "폴더의 경우 폴더명 뒤에 /를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "폴더의 경우 폴더명 뒤에 /를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "하위 디렉토리까지 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "하위 디렉토리까지 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사람이 읽기 쉽게 용량을 변환 출력(기본은 byte)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "사람이 읽기 쉽게 용량을 변환 출력(기본은 byte)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일/폴더의 고유번호인 inode값을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "파일/폴더의 고유번호인 inode값을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフォルダのファイル/フォルダを表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定されたフォルダのファイル/フォルダを表示（改行なし）（フォルダ内にファイルがない場合は出力値なし）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフォルダのファイル/フォルダの詳細情報を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定されたフォルダのファイル/フォルダの詳細情報を表示（容量、権限、グループ、更新日などを表示）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在のフォルダ(.)、上位のフォルダ(..)、非表示ファイル表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在のフォルダ(.)、以前のフォルダ(..)、非表示ファイル表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "非表示ファイル表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "非表示ファイル表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "逆順出力(降順->フォルダ順)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "逆順出力(降順->フォルダ順)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "修正日が最新の順に出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "修正日が最新の順に出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "フォルダの場合、フォルダ名の後に[/]を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "フォルダの場合、フォルダ名の後に[/]を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "サブディレクトリまですべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "サブディレクトリまですべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "人が読みやすいように容量を変換出力（基本はbyte）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "人が読みやすいように容量を変換出力（基本はbyte）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル/フォルダの固有番号であるinode値を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ファイル/フォルダの固有番号であるinode値を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays the files/folders in the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays the files/folders in the specified folder(no opening)(no output value if no files in the folder are present)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile0.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays file/folder details for the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays file/folder details for the specified folder(displays capacity,permissions,groups,update dates, etc.)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Show current folder (.), parent folder (.), hidden file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Show current folder (.), old folder (.), hidden file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -la ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Show hidden file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Show hidden file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lA ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Reverse output (descending -> folder order)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Reverse output (descending -> folder order)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lr ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Revised date output in latest order" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Revised date output in latest order" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lt ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "For folders, print [/] after the folder name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "For folders, print [/] after the folder name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lp ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs all the way to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Outputs all the way to subdirectories" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lR ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Convert capacity to human readable output (byte by default)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Convert capacity to human readable output (byte by default)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -lh ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Displays the inode value, the unique number of the file/folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Displays the inode value, the unique number of the file/folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -li ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : umask                            #
#--------------------------------------------#
function func_command_umask() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-S]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[설정마스크]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-S]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[設定マスキング]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-S]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Set_Masking]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "기본 마스크 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "MacOS인 작성자 PC에서는 기본 마스크는 0022" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "umask" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "기본 마스크를 000으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "기본 마스크를 000으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "umask 000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 000 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "기본 마스크를 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "기본 마스크를 777으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "umask 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 777 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "마스크처리된 권한을 출력(u, g, o 권한 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "마스크처리된 권한을 출력(u, g, o 권한 출력, rwx로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "umask -S" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask -S >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "基本マスク出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Mac OS の作成者 PC では、基本マスクは0022" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -il ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "umask" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "基本マスクを000に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "基本マスクを000に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "umask 000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 000 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "基本マスクを777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "基本マスクを777に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "umask 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 777 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "マスク処理された権限を出力(u、g、o権限を出力)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "マスク処理された権限を出力(u、g、o権限出力、rwxで出力)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "umask -S" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask -S >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Default Mask Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "On My PC, which is MacOS, the default mask is 0022" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "umask" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change default mask to 000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Change default mask to 000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "umask 000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 000 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change default mask to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Change default mask to 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "umask 777" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask 777 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/directory1/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output Mask permissions(u, g, o Privileges Output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output masked permissions(u, g, o rights output, rwx output)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "umask -S" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            umask -S >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : fc                               #
#--------------------------------------------#
function func_command_fc() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-lre[n][m]]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-lre[n][m]]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-lre[n][m]]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "직전에 실행하였던 명령어를 편집기로 수정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "직전에 실행하였던 명령어를 편집기로 수정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "직전에 실행하였던 명령어를 15개를 출력(과거순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "직전에 실행하였던 명령어를 15개를 출력(과거순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "직전에 실행하였던 명령어를 15개를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "직전에 실행하였던 명령어를 15개를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -lr" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "직전에 실행하였던 명령어를 3개를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "직전에 실행하였던 명령어를 3개를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -lr -3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "직전에 실행하였던 3번부터 5번까지 명령어를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "직전에 실행하였던 3번부터 5번까지 명령어를 출력(최신순으로 출력)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -lr -3 -5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 -5 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 편집기로 직전에 실행하였던 명령어를 편집" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 편집기로 직전에 실행하였던 명령어를 편집" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "直前に実行したコマンドをエディタに編集" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "直前に実行したコマンドをエディタに編集" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "直前に実行したコマンドを15個出力（過去の順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "直前に実行したコマンドを15個出力（過去の順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "直前に実行したコマンドを15個出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "直前に実行したコマンドを15個出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -lr" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "直前に実行したコマンドを3個出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "直前に実行したコマンドを3個出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -lr -3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "直前に実行した3番から5番までのコマンドを出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "直前に実行した3番から5番までのコマンドを出力（最新順に出力）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -lr -3 -5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 -5 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたエディタで直前に実行したコマンドを編集" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定されたエディタで直前に実行したコマンドを編集" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Modifying a previously executed command to an editor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Modifying a previously executed command to an editor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output 15 commands that were executed previously (in order of past)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output 15 commands that were executed previously (in order of past)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output 15 commands that were executed previously (up to date)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output 15 commands that were executed previously (up to date)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -lr" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output 3 commands that were executed previously (up to date)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output 3 commands that were executed previously (up to date)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -lr -3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output the commands from number 3 to number 5 that were executed previously (in the latest order)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output the commands from number 3 to number 5 that were executed previously (in the latest order)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -lr -3 -5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            fc -lr -3 -5 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Edit a command that was executed just before with the specified editor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Edit a command that was executed just before with the specified editor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e nano" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "fc -e vim" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : ping                             #
#--------------------------------------------#
function func_command_ping() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[옵션]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상호스트]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-cist]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[옵션대응수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[オプション]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ホスト]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-cist]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[オプション対応数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[option]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_host]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-cist]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Option_correspondence_number]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상호스트에게 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상호스트에게 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ping google.com" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : ping google.com">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "잠시 기다려주세요">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상호스트에게 3번의 패킷을 보내서 접근가능성을 테스트" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상호스트에게 3번의 패킷을 보내서 접근가능성을 테스트" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ping google.com -c 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : ping google.com -c 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "잠시 기다려주세요">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -c 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상호스트에게 3초간의 시간 간격을 두고 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상호스트에게 3초간의 시간 간격을 두고 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ping google.com -i 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : ping google.com -i 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "잠시 기다려주세요">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -i 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상호스트에게 3byte크기의 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상호스트에게 3byte크기의 패킷을 보내서 접근가능성을 테스트(무제한)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ping google.com -s 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : ping google.com -s 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "잠시 기다려주세요">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -s 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "응답을 기다리는 시간이 최대 3초" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "응답을 기다리는 시간이 최대 3초" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ping google.com -t 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : ping google.com -t 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "잠시 기다려주세요">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -t 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ホストにパケットを送信してアクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ホストにパケットを送信してアクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ping google.com" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : ping google.com">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "少々お待ちください。">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ターゲットホストに3回のパケットを送信してアクセス可能性をテスト" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ターゲットホストに3回のパケットを送信してアクセス可能性をテスト" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ping google.com -c 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : ping google.com -c 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "少々お待ちください。">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -c 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ホストに3秒間の時間間隔を置いてパケットを送信し、アクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ホストに3秒間の時間間隔を置いてパケットを送信し、アクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ping google.com -i 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : ping google.com -i 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "少々お待ちください。">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -i 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ホストに3byteサイズのパケットを送信してアクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ホストに3byteサイズのパケットを送信してアクセス可能性をテスト（無制限）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ping google.com -s 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : ping google.com -s 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "少々お待ちください。">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -s 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "最大3秒で応答を待ちます" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "最大3秒で応答を待ちます" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ping google.com -t 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : ping google.com -t 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "少々お待ちください。">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -t 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Test accessibility by sending packets to target hosts(unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Test accessibility by sending packets to target hosts(unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ping google.com" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : ping google.com">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Just a moment, please.">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Test accessibility by sending three packets to the target host" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Test accessibility by sending three packets to the target host" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ping google.com -c 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : ping google.com -c 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Just a moment, please.">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -c 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Test accessibility by sending packets to target hosts at 3-second time intervals (unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Test accessibility by sending packets to target hosts at 3-second time intervals (unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ping google.com -i 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : ping google.com -i 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Just a moment, please.">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -i 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Test accessibility by sending 3-byte-sized packets to target hosts (unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Test accessibility by sending 3-byte-sized packets to target hosts (unlimited)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ping google.com -s 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : ping google.com -s 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Just a moment, please.">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -s 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Up to 3 seconds to wait for response" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Up to 3 seconds to wait for response" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ping google.com -t 3" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : ping google.com -t 3">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Just a moment, please.">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `ping google.com -t 3 | head -n 10` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : ps                               #
#--------------------------------------------#
function func_command_ps() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-fle]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-fle]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-fle]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 실행 중인 프로세스에 관한 정보를 제공(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 실행 중인 프로세스에 관한 정보를 제공(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ps" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 실행 중인 프로세스에 관한 정보를 제공(추가 정보:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 실행 중인 프로세스에 관한 정보를 제공(추가 정보:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ps -f" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -f >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "현재 실행 중인 프로세스에 관한 정보를 제공(자세한 정보를 표시)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "현재 실행 중인 프로세스에 관한 정보를 제공(자세한 정보를 표시)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ps -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 사용자 프로세스 목록" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "모든 사용자 프로세스 목록" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "ps -e" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -e >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在実行中のプロセスに関する情報を提供(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在実行中のプロセスに関する情報を提供(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ps" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在実行中のプロセスに関する情報を提供(追加情報:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在実行中のプロセスに関する情報を提供(追加情報:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ps -f" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -f >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "現在実行中のプロセスに関する情報を提供(詳しい情報を表示)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "現在実行中のプロセスに関する情報を提供(詳しい情報を表示)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ps -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -l  >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "すべてのユーザープロセスのリスト" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "すべてのユーザープロセスのリスト" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "ps -e" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -e >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Provides information about the currently running process(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Provides information about the currently running process(PID, TTY, TIME, CMD)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ps" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Provides information about the currently running process(Additional information:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Provides information about the currently running process(Additional information:UID, PPID, STIME)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ps -f" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -f >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Provides information about the currently running process(Display more information)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Provides information about the currently running process(Display more information)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ps -l" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -l >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "List of all user processes" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "List of all user processes" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "ps -e" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ps -e >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : top                              #
#--------------------------------------------#
function func_command_top() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "시스템 사용량 및 현재 실행 중인 프로세스에 대한 정보를 표시하는데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "시스템 사용량 및 현재 실행 중인 프로세스에 대한 정보를 표시하는데 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "top" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `top | head -n 25` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "システム使用量と現在実行中のプロセスに関する情報を表示するために使用基本マスク出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "システム使用量と現在実行中のプロセスに関する情報を表示するために使用" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "top" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `top | head -n 25` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Used to display information about system usage and the processes currently running" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Used to display information about system usage and the processes currently running" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "top" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `top | head -n 25` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : sort                             #
#--------------------------------------------#
function func_command_sort() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'DTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'zTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '  tTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'xTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'adTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo '   vvTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'gTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'iTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'vvTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'qlTest,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'zxsTest,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-rfb]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-rfb]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-rfb]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "작은값에서 큰값순으로[A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "작은값에서 큰값순으로[A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "큰값에서 작은값순으로[z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "큰값에서 작은값순으로[z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대소문자를 구분하지 않는 정렬" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대소문자를 구분하지 않는 정렬" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "선두 공백 무시 및 정렬" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "선두 공백 무시 및 정렬" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "小さい値から大きい値の順に[A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "小さい値から大きい値の順に[A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "大きい値から小さい値の順に[z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "大きい値から小さい値の順に[z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "大文字と小文字を区別しない並び替え" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "大文字と小文字を区別しない並び替え" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "先頭のスペースを無視してソート" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "先頭のスペースを無視してソート" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "From small to large [A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "From small to large [A -> Z -> a -> z]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "From large to small [z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "From large to small [z -> a -> Z -> A]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -r ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "case-insensitive alignment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "case-insensitive alignment" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Ignore leading spaces and sort" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Ignore leading spaces and sort" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sort -b ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : tar                              #
#--------------------------------------------#
function func_command_tar() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory2/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory3/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ctxruvfC]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[출력_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ctxruvfC]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[出力ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ctxruvfC]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Output_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정 파일들을 이용하여 tar아카이브 압축파일을 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정 파일들을 이용하여 tar아카이브 압축파일을 생성" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tar아카이브파일 내부파일을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tar아카이브파일 내부파일을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tar아카이브파일을 현재 폴더에 압축해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tar아카이브파일을 현재 폴더에 압축해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tar아카이브파일을 지정된 폴더에 압축해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tar아카이브파일을 지정된 폴더에 압축해제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tar아카이브파일에 파일을 추가(덮어쓰기는 아님)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tar아카이브파일에 파일을 추가(덮어쓰기는 아님)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "tar아카이브파일에 파일을 추가(덮어쓰기)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tar아카이브파일에 파일을 추가(덮어쓰기)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定ファイルを利用してtarアーカイブ圧縮ファイルを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定ファイルを利用してtarアーカイブ圧縮ファイルを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "tarアーカイブファイルの内部ファイルを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tarアーカイブファイルの内部ファイルを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "tarアーカイブファイルを現在のフォルダに解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tarアーカイブファイルを現在のフォルダに解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "tarアーカイブファイルを指定されたフォルダに解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tarアーカイブファイルを指定されたフォルダに解凍" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "tarアーカイブファイルにファイルを追加（上書きではない）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tarアーカイブファイルにファイルを追加（上書きではない）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "tarアーカイブファイルにファイルを追加（上書き）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tarアーカイブファイルにファイルを追加（上書き）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create a tar archive compressed file using specified files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Create a tar archive compressed file using specified files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar cvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output the tar archive file internal file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output the tar archive file internal file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unzip the tar archive file to the current folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Unzip the tar archive file to the current folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Unzip the tar archive file to the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Unzip the tar archive file to the specified folder" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar xvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar -C ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Add file to tar archive file (not overwrite)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Add file to tar archive file (not overwrite)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar uvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Add file to tar archive file (overwrite)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Add file to tar archive file (overwrite)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar rvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar ${filePathParam%/}/tmp/${commandItem}/directory3/${commandItem}_TestFile3.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tar tvf ${filePathParam%/}/tmp/${commandItem}/Test_tarFile1.tar >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : tr                               #
#--------------------------------------------#
function func_command_tr() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'test  peach' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'testapple' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'test banana' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'teST           peach' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[변경_대상_문자열]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[변경_문자열]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[変更_対象_文字列]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[変更_文字列]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Change_Target_String]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Change_String]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 문자열을 대문자로 치환 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "모든 문자열을 대문자로 치환 출력"
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "단일문자를 단일문자로 치환 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "단일문자를 단일문자로 치환 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 단일문자을 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 단일문자을 삭제" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 단일문자의 중복제거" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 단일문자의 중복제거" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定ファイルを利用してtarアーカイブ圧縮ファイルを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定ファイルを利用してtarアーカイブ圧縮ファイルを作成" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "単一文字を単一文字に置換出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "単一文字を単一文字に置換出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定された単一文字を削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定された単一文字を削除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定された単一文字の重複排除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定された単一文字の重複排除" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create a tar archive compressed file using specified files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Create a tar archive compressed file using specified files" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr [a-z] [A-Z] < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Replace single characters with single characters" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Replace single characters with single characters" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr 't' 'x' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Delete the specified single character" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Delete the specified single character" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -d 'te' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Deduplication of a given single character" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Deduplication of a given single character" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            tr -s ' ' < ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : printf                           #
#--------------------------------------------#
function func_command_printf() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[출력_형식]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[출력_문자]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[出力形式]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[出力文字]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Output_Format]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Output_String]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "기본 형식 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "기본 형식 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%s : test data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%s\n' 'test data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%s\n' 'test data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "기출 변형 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "기출변형 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%-15s : _test_data      _" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%15s : _       test_data_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _    15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _ 15.01_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _ 15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _015_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%-15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%6.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%6.2f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%3d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "printf '%03d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%-15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.2f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%3d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%03d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "基本形式出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "基本形式出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%s : test data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%s\n' 'test data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%s\n' 'test data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "既出変形出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "既出変形出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%-15s : _test_data      _" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%15s : _       test_data_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _    15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _ 15.01_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _ 15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _015_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%-15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%6.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%6.2f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%3d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "printf '%03d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%-15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.2f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%3d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%03d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Default Type Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Default Type Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%s : test data" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%s\n' 'test data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Default Type Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%s\n' 'test data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Previously Deformed Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Previously Deformed Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%-15s : _test_data      _" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%15s : _       test_data_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _    15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%d : _ 15.01_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _ 15_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "%f : _015_" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%-15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%15s\n' 'test_data'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%6.f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%6.2f\n' 15.0123456" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%3d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "printf '%03d\n' 15" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%-15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%15s\n' 'test_data' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%6.2f\n' 15.0123456 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%3d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            printf '%03d\n' 15 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : paste                            #
#--------------------------------------------#
function func_command_paste() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/
    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory2/
    echo 'test apple' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test banana' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test melon' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test pear' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test peach' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test 300' > ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'test 350' >> ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'test 120' >> ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'test 270' >> ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'test 410' >> ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    echo 'test 910' >> ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상_파일1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象ファイル1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-ds]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_File1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "두 파일을 가로로 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "두 파일을 가로로 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "구분 기호를 이용해서 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "구분 기호를 이용해서 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "행렬 전환 후 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "행렬 전환 후 병합" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "両方のファイルを横にマージ" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "両方のファイルを横にマージ" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "区分記号を利用して併合" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "区分記号を利用して併合" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "行列の切り替え後に併合" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "行列の切り替え後に併合" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Merge two files horizontally" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Merge two files horizontally" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Merge using delimiter" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Merge using delimiter" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -d ',' ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Merge after matrix transition" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Merge after matrix transition" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            paste -s ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory2/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : sed                              #
#--------------------------------------------#
function func_command_sed() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 's/TestFile/fileRead/g' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "2~5행 제외 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "2~5행 중복 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "2~5행만 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 패턴을 각행에서 선두의 1회만 변경 후 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 패턴을 각행에서 모두 변경 후 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 패턴을 각행에서 모두 변경 후 데이터가 변경된 데이터 중복 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "여러개의 패턴을 변경 후 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tt1,tt2,tt3,tt4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tta,tta,tta,tta' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일에 작성된 변경패턴을 읽어서 파일 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,fileRead1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead4 fileRead' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "2~5行を除く出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "2~5行重複出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "2~5行のみ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたパターンを各行で先頭の1回だけ変更して出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたパターンを各行ですべて変更した後に出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたパターンを各行ですべて変更した後、データが変更されたデータ重複出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "複数のパターンを変更して出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tt1,tt2,tt3,tt4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tta,tta,tta,tta' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルに作成された変更パターンを読んでファイルを変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,fileRead1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead4 fileRead' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Outputs excluding lines 2 to 5" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5d ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Line 2 to line 5 duplicate output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output lines 2 to 5 only" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'TestFile2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -n 2,5p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change the specified pattern only once in each row and output it" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 TestFile' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/ ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change all the specified patterns in each row and output them" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Data duplicate output with changed data after changing the specified pattern all in each row" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed s/TestFile/SedSample/p ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output after changing multiple patterns" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,SedSample1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'SedSample4 SedSample' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tt1,tt2,tt3,tt4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'tta,tta,tta,tta' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -e s/TestFile/SedSample/g -e s/ps/tt/g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change the file by reading the change pattern created in the file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead1' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'apple,banana,cream,dust,Test,txt,fileRead1,gui' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,bash,zsh,sh' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead2' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'iphone,ipod,ipodtouch,Test,ipad,imac' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead3' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '0102,12310,asdas' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'fileRead4 fileRead' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'psa,psa,psa,psa' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sed -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : nkf                              #
#--------------------------------------------#
function func_command_nkf() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'English' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt
    echo '한글' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt
    echo '日本語漢字,にほんご,ニホンゴ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일 내용 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '한글' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일의 문자 코드 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일의 문자 코드,개행 코드 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "문자코드 EUC로 변경(한글은 ASCII 변경됨)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "문자코드 JIS로 변경(한글은 ASCII 변경됨)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "문자코드 SJIS로 변경(한글은 ASCII 변경됨)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "문자코드 UTF-8로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "개행코드 CRLF로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (CRLF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "개행코드 LF로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "개행코드 CR로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (CR)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "문자코드 UTF-8 (BOM)으로 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (BOM) (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Kr_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル内容出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '日本語漢字,にほんご,ニホンゴ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの文字コード出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルの文字コード、改行コードの出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "文字コードをEUCに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'EUC-JP (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "文字コードをJISに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ISO-2022-JP (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "文字コードをSJISに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Shift_JIS (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "文字コードをUTF-8に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "改行コードCRLFに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (CRLF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "改行コードLFに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "改行コードCRに変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (CR)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "文字コードUTF-8(BOM)に変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (BOM) (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_Jp_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "File Content Output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'English' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Character code output of a file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -g ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Character code in the file, outputting the new line code" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change character code to EUC(English changed to ASCII)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -e ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_EUC.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_EUC.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change character code to JIS(English changed to ASCII)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -j ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_JIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_JIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change character code to SJIS(English changed to ASCII)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -s ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_SJIS.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_SJIS.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change character code to UTF-8(English changed to ASCII)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -w ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change new line code to CRLF" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (CRLF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lw ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change new line code to LF" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lu ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CRLF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change new line code to CR" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'ASCII (CR)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf -Lm ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_LF.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CR.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_CR.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Change character code to UTF-8 (BOM)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'UTF-8 (BOM) (LF)' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --oc=UTF-8-BOM ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En.txt > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8-BOM.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo `nkf --guess ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_En_UTF-8-BOM.txt` >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : alias                            #
#--------------------------------------------#
function func_command_alias() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[선언명령어]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[宣言コマンド]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[declarative_command]" | sed 's/_/ /g'
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "쉘 내부에서는 사용자 지정 단축키를 선언 불가" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'll: command not found' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '지속적인 사용이 필요시 쉘 설정파일에 추가 : bash의 경우 ~/.bashrc 파일에 기재 할 것' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "alias ll='ls -l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            alias ll='ls -l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ll >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シェル内部ではユーザー指定のショートカットキーを宣言不可" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'll: command not found' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '持続的な使用が必要な場合、シェル設定ファイルに追加 : bashの場合 ~/.bashrcファイルに記載すること' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "alias ll='ls -l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            alias ll='ls -l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ㅣㅣ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Cannot declare custom shortcuts inside the shell" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'll: command not found' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Add to shell settings file if continuous use is required: to be written in ~/.bashrc file for bash' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "alias ll='ls -l'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            alias ll='ls -l' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ll >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : lsof                             #
#--------------------------------------------#
function func_command_lsof() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-nef]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_File]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "일반 파일, 디렉토리, 네트워크 소켓, 파이프, 장치정보등 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '일반 파일, 디렉토리, 네트워크 소켓, 파이프, 장치정보등 출력' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "lsof" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 포트에서 사용중인 프로세스 정보를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 포트에서 사용중인 프로세스 정보를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "lsof -i :80" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof -i :80 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常のファイル、ディレクトリ、ネットワークソケット、パイプ、デバイス情報などの出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '通常のファイル、ディレクトリ、ネットワークソケット、パイプ、デバイス情報などの出力' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "lsof" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたポートで使用中のプロセス情報を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo '指定されたポートで使用中のプロセス情報を出力' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "lsof -i :80" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof -i :80 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output general files, directories, network sockets, pipes, device information, etc" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Output general files, directories, network sockets, pipes, device information, etc' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "lsof" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Output process information in use on the specified port" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo 'Output process information in use on the specified port' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "lsof -i :80" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            lsof -i :80 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : egrep                            #
#--------------------------------------------#
function func_command_egrep() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/
    echo '  ' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile.txt
    echo 'TestFile1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'test File1' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'apple,banana,cream,dust,test,txt,TestFile1,gui' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'testbash,zsh,sh'>> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'Test,java,Javascript,C,C#,C++,python,ruby' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt
    echo 'TestFile2' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'iphone,ipad,imac,Test,ipod,ipodtouch' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'galaxyS7,Note7,ZFilp,S7,Test' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile2.txt
    echo 'TestFile3' > ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'Korea,Test,Japan,China' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'Seoul,Tokyo,hongkong' >> ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile3.t
    echo 'TestFile4' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile4.log
    echo 'ps1,ps2,ps3,ps4' >> ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/${commandItem}_TestFile4.log
    echo 'psa,psa,psa,psa' > ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/${commandItem}_TestFile5.log
    echo 'Nintendo,NDSL,DSL,wii' >> ${filePathParam%/}/tmp/${commandItem}/directory1/directory2/directory3/${commandItem}_TestFile5.log
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}"
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[검색패턴]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[대상_파일_또는_폴더]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[検索パタン]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[対象ファイル又はフォルダ]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Pattern]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Target_Files_or_Folders]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "메타 문자(+,?,|,(,))를 직접 사용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "대상 파일에서 검색어(test)를 검색해서 검색결과를 포함한 행을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "メタ文字(+,?,|,(,))を直接使用" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "対象ファイルから検索語（test）を検索し、検索結果を含む行を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Direct use of metacharacters (+, ?,|,(,))" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Search for a search term (test) in the target file and output a row containing the search results" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            egrep tes? ${filePathParam%/}/tmp/${commandItem}/directory1/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : read                             #
#--------------------------------------------#
function func_command_read() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-pnts]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[옵션설정값]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[입력값저장변수명]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-pnts]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[オプション設定値]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[入力値保存変数名]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-pnts]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Option_Settings]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Input_value_storage_variable_name]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자로부터 입력받은 값을 이용" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "사용자로부터 입력받은 값을 name변수에 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "read name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : read name">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read name >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "name=${name}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자로부터 입력받을때 먼저 출력되는 메시지를 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "input your number : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'read -p " input your number : " tel' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : read -p " input your number : " tel">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -p " input your number : " tel >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tel=${tel}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자로부터 입력받을 문자수를 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "4자리 문자까지 입력받음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "read -n 4 nickName" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : read -n 4 nickName">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -n 4 nickName >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nickName=${nickName}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "사용자로부터 입력을 받는 시간을 설정" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3초간만 데이터 입력을 받음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "read -t 3 waittime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : read -t 3 waittime">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -t 3 waittime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "waittime=${waittime}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "입력값이 보이지 않음(비밀번호)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "입력값이 출력되지 않음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "read -s hideString" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행중인 명령 : read -s hideString">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -s hideString >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "hideString=${hideString}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーから入力された値を利用" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ユーザーから入力された値をname変数に設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "read name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : read name">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read name >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "name=${name}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーから入力を受ける際に先に出力されるメッセージを設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "input your number : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'read -p " input your number : " tel' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : read -p " input your number : " tel">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -p " input your number : " tel >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tel=${tel}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーから入力される文字数を設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "4桁の文字まで入力を受ける" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "read -n 4 nickName" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : read -n 4 nickName">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -n 4 nickName >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nickName=${nickName}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ユーザーから入力を受ける時間を設定" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3秒間だけデータ入力を受ける" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "read -t 3 waittime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : read -t 3 waittime">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -t 3 waittime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "waittime=${waittime}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "入力値が表示されない(パスワード)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "入力値が出力されない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "read -s hideString" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行中のコマンド : read -s hideString">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -s hideString >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "hideString=${hideString}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Use the value input from the user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Set the value received from the user to the name variable" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "read name" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : read name">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read name >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "name=${name}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Set the message that is output first when you receive input from the user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "input your number : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'read -p " input your number : " tel' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : read -p " input your number : " tel">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -p " input your number : " tel >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "tel=${tel}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Set the number of characters to be entered from the user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Enter up to four-digit characters" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "read -n 4 nickName" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : read -n 4 nickName">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -n 4 nickName >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "nickName=${nickName}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Set the time to receive input from the user" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Data input only for 3 seconds" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "read -t 3 waittime" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : read -t 3 waittime">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -t 3 waittime >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "waittime=${waittime}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Input not visible (password)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Input value not output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "read -s hideString" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Executed command : read -s hideString">> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            read -s hideString >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "hideString=${hideString}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : sh                               #
#--------------------------------------------#
function func_command_sh() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo '#!/bin/sh ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh
    echo 'echo "testshell"' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh
    echo 'for forIndex in {1..1000}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.txt; done' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh
    echo '#!/bin/sh ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh
    echo 'echo "testshell"' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh
    echo 'for forIndex in {1..1000}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.txt; done' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh
    echo '#!/bin/sh ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh
    echo 'echo "testshell"' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh
    echo 'for forIndex in {1..1000}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.txt; done' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh
    echo '#!/bin/sh ' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh
    echo 'echo "testshell"' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh
    echo 'for forIndex in {1..1000}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.txt; done' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수1]_[인수2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-xv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[대상쉘]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[입력값저장변수명]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数1]_[引数2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-xv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[対象シェル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[入力値保存変数名]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument1]_[argument2]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-xv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Target_Shell]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Input_value_storage_variable_name]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "쉘 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "지정된 쉘을 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "디버그 모드로 쉘 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "디버그 모드로 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "백그라운드에서 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "백그라운드에서 실행" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh &" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh & >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "쉘을 실행 및 쉘 내용 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "쉘을 실행 및 쉘 내용 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたシェルを実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "指定されたシェルを実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "デバッグモードで実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "デバッグモードで実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "バックグラウンドで実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "バックグラウンドで実行" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh &" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh & >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シェルを実行し、シェル内容を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "シェルを実行し、シェル内容を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Run shell" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Run the specified shell" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test1.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Run in debug mode" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Run in debug mode" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -x ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test2.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Run in the background" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Run in the background" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh &" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test3.sh & >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Run shell and output shell content" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Run shell and output shell content" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            sh -v ${filePathParam%/}/tmp/${commandItem}/${commandItem}_Test4.sh >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : shift                            #
#--------------------------------------------#
function func_command_shift() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[이동수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[移動数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Move_Count]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파라미터 이동" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa Eng" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "shift" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "shift 2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            set Kor Jap Usa Eng
            echo "파라미터 갯수 : $#, 파라미터 : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift
            echo "파라미터 갯수 : $#, 파라미터 : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift 2
            echo "파라미터 갯수 : $#, 파라미터 : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "パラメータ移動" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa Eng" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "shift" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "shift 2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            set Kor Jap Usa Eng
            echo "パラメータ数 : $#, パラメータ : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift
            echo "パラメータ数 : $#, パラメータ : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift 2
            echo "パラメータ数 : $#, パラメータ : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Parameter Move" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa Eng" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor Jap Usa" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kor" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "shift" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "shift 2" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            set Kor Jap Usa Eng
            echo "Parameter Count : $#, Parameter : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift
            echo "Parameter Count : $#, Parameter : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            shift 2
            echo "Parameter Count : $#, Parameter : $* " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : readonly                         #
#--------------------------------------------#
function func_command_readonly() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[선언변수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[宣言変数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Declaration_Variables]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "읽기 전용 변수를 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "readonly readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            readonly readonlyTest=test
            echo "readonlyTest=${readonlyTest}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "読み取り専用変数を宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "readonly readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            readonly readonlyTest=test
            echo "readonlyTest=${readonlyTest}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Declare read-only variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "readonly readonlyTest=test" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            readonly readonlyTest=test
            echo "readonlyTest=${readonlyTest}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : declare                          #
#--------------------------------------------#
function func_command_declare() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-pxraiFf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[선언변수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-pxraiFf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[宣言変数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-pxraiFf]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Declaration_Variables]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "글로벌 변수를 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "글로벌 변수를 모두 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "글로벌 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "글로벌 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -x globalVariablex=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -x globalVariablex=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablex=${globalVariablex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "읽기전용 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "읽기전용 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -r globalVariabler=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -r globalVariabler=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariabler=${globalVariabler}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "배열 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "배열 변수 선언" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -a globalVariablea=(declareVari1 declareVari2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -a globalVariablea=(declareVari1 declareVari2) >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[0]=${globalVariablea[0]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[1]=${globalVariablea[1]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[@]=${globalVariablea[@]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "뉴메릭(numeric) 변수 선언(문자값을 받을 경우 0이 할당됨)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "뉴메릭(numeric) 변수 선언(문자값을 받을 경우 0이 할당됨)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -i globalVariablei=12" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -i globalVariablei='test'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei=12 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei='test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "-F : 쉘에 선언된 함수를 모두 출력(간단히)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "-f : 쉘에 선언된 함수를 모두 출력(자세히)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : 쉘에 선언된 함수를 모두 출력(간단히)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : 쉘에 선언된 함수를 모두 출력(자세히)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "declare -F" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -F >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "グローバル変数をすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "グローバル変数をすべて出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "グローバル変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "グローバル変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -x globalVariablex=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -x globalVariablex=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablex=${globalVariablex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "読み取り専用変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "読み取り専用変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -r globalVariabler=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -r globalVariabler=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariabler=${globalVariabler}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "配列変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "配列変数宣言" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -a globalVariablea=(declareVari1 declareVari2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -a globalVariablea=(declareVari1 declareVari2) >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[0]=${globalVariablea[0]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[1]=${globalVariablea[1]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[@]=${globalVariablea[@]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ニューメリック(numeric)変数宣言(文字値を受け取る場合、0が割り当てられる)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ニューメリック(numeric)変数宣言(文字値を受け取る場合、0が割り当てられる)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -i globalVariablei=12" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -i globalVariablei='test'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei=12 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei='test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "-F : シェルに宣言された関数をすべて出力（簡単）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "-f : シェルに宣言された関数をすべて出力（詳しく）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : シェルに宣言された関数をすべて出力（簡単）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : シェルに宣言された関数をすべて出力（詳しく）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "declare -F" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -F >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output all global variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output all global variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -p" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Global Variables Declaration" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Global Variables Declaration" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -x globalVariablex=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -x globalVariablex=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablex=${globalVariablex}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Declare read-only variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Declare read-only variables" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -r globalVariabler=declareVari" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -r globalVariabler=declareVari >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariabler=${globalVariabler}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Arrangement Variables Declaration" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Arrangement Variables Declaration" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -a globalVariablea=(declareVari1 declareVari2)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -a globalVariablea=(declareVari1 declareVari2) >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[0]=${globalVariablea[0]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[1]=${globalVariablea[1]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablea[@]=${globalVariablea[@]}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Numeric variable declaration (0 assigned if character value is received)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Numeric variable declaration (0 assigned if character value is received)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -i globalVariablei=12" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -i globalVariablei='test'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei=12 >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -i globalVariablei='test' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "globalVariablei=${globalVariablei}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "-F : Output all declared functions on the shell (simply)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "-f : Output all declared functions on the shell (detail)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : Output all declared functions on the shell (simply)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "-f : Output all declared functions on the shell (detail)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "declare -F" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            declare -F >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : rename                           #
#--------------------------------------------#
function func_command_rename() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'test_data' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1_20240408.txt
    echo 'test_data' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2_20240408.txt
    echo 'test_data' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3_20240408.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수1]_[인수2]_[인수3]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수1" ":" "[변경전텍스트]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수2" ":" "[변경후텍스트]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수3" ":" "[대상파일]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数1]_[引数2]_[引数3]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数1" ":" "[変更前文字]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数2" ":" "[変更後文字]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数3" ":" "[対象ファイル]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument1]_[argument2]_[argument3]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument1" ":" "[Text_before_change]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument2" ":" "[Text_after_change]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument3" ":" "[Destination_file]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대상파일의 이름을 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*
            echo "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "対象ファイルのファイル名を変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*
            echo "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Change the name of the destination file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile3_20221231.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*
            echo "rename 20240408 20221231 ${filePathParam%/}/tmp/${commandItem}/*" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : awk                              #
#--------------------------------------------#
function func_command_awk() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo 'Kr Korea 3324 5/11/96 50354' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Jp Japan 5246 15/9/66 287650' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Us USA 7654 6/20/58 60000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Cn China 8683 9/40/48 465000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    echo 'Kr    Korea   :3324    :5/11/96    :50354' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt
    echo 'Jp    Japan    :5246    :15/9/66    :287650' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt
    echo 'Us    USA    :7654    :6/20/58    :60000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt
    echo 'Cn,China,:8683,:9/40/48,:465000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt
    echo '{print "Country : " $1, $2 }' > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt
    echo '{print $1, $2, $3, $4, $5 }' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[옵션]_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※옵션" ":" "[-Fv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[필드출력방법]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[オプション]_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-20s %s %s\n" "※オプション" ":" "[-Fv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[フィルド出力方法]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[option]_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※option" ":" "[-Fv]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[FILLED_OUTPUT_METHOD]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "모든 위치의 값을 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '{print \$0}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$0}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "공백으로 구분하여 1,2,3번 필드 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "출력 레코드 라인번호를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "4 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '{print NR, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NR, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "출력 레코드의 필드 갯수를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '{print NF, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NF, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 패턴과 일치하는 레코드만 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "일치는 패턴의 3, 4번 필드를 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246 15/9/66" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '/Japan/{print \$2, \$3, \$4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print \$2, \$3, \$4}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Japan/{print $2, $3, $4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print $2, $3, $4}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 필드가 조건을 만족시 출력(숫자)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '\$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$3 >=7000'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$3 >=7000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 필드가 조건을 만족시 출력(문자)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '\$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 ~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 ~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "지정된 필드가 조건을 만족시 출력(문자)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk '\$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 !~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 !~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "BEGIN[FS : 필드 구분자, OFS : 출력 필드 구분자, ORS : 출력 레코드 구분자]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "제일 마지막 라인 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000Test Number 4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk 'END{print \$0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print \$0 "Test Number " NR}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'END{print $0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print $0 "Test Number " NR}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "명령어 설정 파일에 작성된 내용으로 명령어 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Kr Korea" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Jp Japan" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Us USA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Cn China" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "구분기호가 공백( )이 아닌 콜론(:)으로 지정하여 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "원본 : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr    Korea    3324     5/11/96    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp    Japan     5246     15/9/66    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us    USA     7654     6/20/58    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn,China, 8683, 9/40/48," >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk -F: '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -F: '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "명령어내 변수를 선언하여 활용하는 방법" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "원본 : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "すべての位置の値を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '{print \$0}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$0}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "空白で区切って1、2、3番フィールドを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "出力レコードライン番号を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "4 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '{print NR, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NR, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "出力レコードのフィールド数を出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '{print NF, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NF, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたパターンと一致するレコードのみ出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一致はパターンの3、4番フィールドを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246 15/9/66" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '/Japan/{print \$2, \$3, \$4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print \$2, \$3, \$4}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Japan/{print $2, $3, $4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print $2, $3, $4}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフィールドが条件を満たした場合に出力（数字）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '\$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$3 >=7000'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$3 >=7000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフィールドが条件を満たした場合に出力（文字）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '\$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 ~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 ~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "指定されたフィールドが条件を満たした場合に出力（文字）" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk '\$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 !~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 !~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "BEGIN[FS:フィールド区切り記号、OFS:出力フィールド区切り記号、ORS:出力レコード区切り記号]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一番最後のライン出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000Test Number 4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk 'END{print \$0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print \$0 "Test Number " NR}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'END{print $0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print $0 "Test Number " NR}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "コマンド設定ファイルに作成された内容でコマンドを出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Kr Korea" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Jp Japan" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Us USA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Cn China" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "区分記号が空白( )ではなくコロン( : )で指定して出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "原本 : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr    Korea    3324     5/11/96    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp    Japan     5246     15/9/66    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us    USA     7654     6/20/58    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn,China, 8683, 9/40/48," >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk -F: '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -F: '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "コマンド内の変数を宣言して活用する方法" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "原本 : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Outputs values for all locations" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '{print \$0}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$0}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Field output 1,2,3 separated by spaces" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output Record Line Number" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "1 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "2 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "3 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "4 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '{print NR, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NR, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NR, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Outputs the number of fields in the output record" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Kr Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Jp Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Us USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "5 Cn China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '{print NF, \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '{print NF, $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '{print NF, $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output only records that match the specified pattern" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Korea/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Korea/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Match outputs fields 3 and 4 of the pattern" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246 15/9/66" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '/Japan/{print \$2, \$3, \$4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print \$2, \$3, \$4}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '/Japan/{print $2, $3, $4}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '/Japan/{print $2, $3, $4}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output (numerical) when the specified field satisfies the condition" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '\$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$3 >=7000'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$3 >=7000' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$3 >=7000' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output (character) when the specified field satisfies the condition" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '\$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 ~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 ~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 ~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output (character) when the specified field satisfies the condition" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk '\$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '\$2 !~ /Kor/'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk '$2 !~ /Kor/' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk '$2 !~ /Kor/' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "BEGIN [FS: field separator, OFS: output field separator, ORS: output record separator]" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\\t"; ORS="\\n\\n"}{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'BEGIN{FS=":"; OFS="\t"; ORS="\n\n"}{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "The last line output" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000Test Number 4" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk 'END{print \$0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print \$0 "Test Number " NR}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk 'END{print $0 "Test Number " NR}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk 'END{print $0 "Test Number " NR}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output a command as written in the command settings file" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Kr Korea" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr Korea 3324 5/11/96 50354" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Jp Japan" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp Japan 5246 15/9/66 287650" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Us USA" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us USA 7654 6/20/58 60000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Country : Cn China" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn China 8683 9/40/48 465000" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -f ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile_command.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Outputs by specifying the separator as a colon (:) rather than a space ( )" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Original : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Kr    Korea    3324     5/11/96    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Jp    Japan     5246     15/9/66    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Us    USA     7654     6/20/58    " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Cn,China, 8683, 9/40/48," >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk -F: '{print \$1, \$2, \$3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print \$1, \$2, \$3}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -F: '{print $1, $2, $3}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile2.txt | awk -F: '{print $1, $2, $3}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "To declare and utilize variables within a command" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Original : " >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Korea 3324" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Japan 5246" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "USA 7654" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "China 8683" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print \$samNum1, \$samNum2}'" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt | awk -v samNum1=2 -v samNum2=3 '{print $samNum1, $samNum2}' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : locale                            #
#--------------------------------------------#
function func_command_locale() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[이동수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[移動数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[Move_Count]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "컴퓨터 시스템에서 사용되는 지역 및 언어 설정을 표시" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "사용자 컴퓨터의 기본 설정값 출력" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LANG="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_COLLATE="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_CTYPE="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MESSAGES="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MONETARY="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_NUMERIC="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_TIME="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_ALL="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "locale" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            locale >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "LANG을 제외한 모든 로케일 설정 변경" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "쉘에서는 변경된 내용이 출력되지 않음" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "실행 터미널에서 직접 확인 가능" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "export LC_ALL="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "export LC_ALL="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "コンピューターシステムで使用される地域および言語の設定を表示" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "ユーザーコンピューターのデフォルト設定値の出力" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LANG="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_COLLATE="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_CTYPE="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MESSAGES="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MONETARY="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_NUMERIC="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_TIME="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_ALL="ja_JP.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "locale" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            locale >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "LANG以外のすべてのロケール設定を変更" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "シェルでは変更された内容が出力されない" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "実行ターミナルで直接確認できます" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "export LC_ALL="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "export LC_ALL="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Displays the region and language settings used by the computer system" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Output your computer's default settings" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LANG="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_COLLATE="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_CTYPE="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MESSAGES="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_MONETARY="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_NUMERIC="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_TIME="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "LC_ALL="en_US.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "locale" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            locale >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Change all locale settings except LANG" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "No changes are output on the shell" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "Can be seen directly from the execution terminal" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "export LC_ALL="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "export LC_ALL="ko_KR.UTF-8"" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt

    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Command : compress                         #
#--------------------------------------------#
function func_command_compress() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### English Command Description Parameter / 영어 명령어 설명 파라미터 / 英語コマンド説明パラメータ
    local commandDescriptionEnParam=$3
    ### Korean Command Description Parameter / 한국어 명령어 설명 파라미터 / 韓国語コマンド説明パラメータ
    local commandDescriptionKrParam=$4
    ### Japense Command Description Parameter / 일본어 명령어 설명 파라미터 / 日本語コマンド説明パラメータ
    local commandDescriptionJpParam=$5
    ### Command / 명령어 / コマンド
    local commandItem=$6
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${commandItem}/
    echo "testFile1,Command,data" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${commandItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        printf "  %-16s %s %s\n" "명령어" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "기본설명" ":" "${commandDescriptionKrParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※사용법" ":" "${commandItem}_[인수]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※인수" ":" "[압축 대상 파일 경로]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        printf "  %-17s %s %s\n" "コマンド" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "基本説明" ":" "${commandDescriptionJpParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-18s %s %s\n" "※使用法" ":" "${commandItem}_[引数]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-17s %s %s\n" "※引数" ":" "[圧縮対象ファイルパス]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        printf "  %-13s %s %s\n" "Command" ":" "${commandItem}" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-13s %s %s\n" "Description" ":" "${commandDescriptionEnParam}" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※HowToUse" ":" "${commandItem}_[argument]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-15s %s %s\n" "※argument" ":" "[compressed_file_path]" | sed 's/_/ /g' >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일압축(.Z)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "compress ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            compress ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイル圧縮(.Z)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/${commandItem}_TestFile1.txt ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt"
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            compress ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "File_Compress(.Z)" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo "${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "zip ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile.zip ${filePathParam%/}/tmp/${commandItem}/directory/test1/ ${filePathParam%/}/tmp/${commandItem}/directory/${commandItem}_TestFile2.txt" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            compress ${filePathParam%/}/tmp/${commandItem}/${commandItem}_TestFile1.txt
            ls -l ${filePathParam%/}/tmp/${commandItem}/ >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
        
    fi
    echo >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${commandItem}/${commandItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${commandItem}/

    func_basicSetting_LogFileName_Path ${PID} "1" ${commandItem}
    echo 
    
}

#--------------------------------------------#
# Linux Script Tip List
#  : Linux Script Tip List
#  : 리눅스 스크립트 팁 리스트
#  : Linuxスクリプトヒントリスト
#--------------------------------------------#
function func_linuxScriptTipList() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    Index=0
    echo
    printf "##############################################################################################\n"
    if [[ ${languageParam} == [kK][rR] ]]; then
        printf "  %-8s %s  %-18s %s  %-102s\n" "번호" "#" "설명"
        printf "##############################################################################################\n"
        for scriptTipIndex in ${scriptTipList[@]}; do
            scriptItem=`echo ${scriptTipIndex} | cut -d, -f2 | sed 's/_/ /g'`
            printf "  %03d    %s  %-15s %s  %-50s\n" $((${Index}+1)) "#" "${scriptItem}"
            Index=$(( ${Index} + 1 ))
        done
    elif [[ ${languageParam} == [jJ][pP] ]]; then
        printf "  %-8s %s  %-19s %s  %-102s\n" "番号" "#" "説明"
        printf "##############################################################################################\n"
        for scriptTipIndex in ${scriptTipList[@]}; do
            scriptItem=`echo ${scriptTipIndex} | cut -d, -f3 | sed 's/_/ /g'`
            printf "  %03d    %s  %-15s %s  %-50s\n" $((${Index}+1)) "#" "${scriptItem}"
            Index=$(( ${Index} + 1 ))
        done
    else
        printf "  %-6s %s  %-15s %s  %-100s\n" "Number" "#" "Description"
        printf "##############################################################################################\n"
        for scriptTipIndex in ${scriptTipList[@]}; do
            scriptItem=`echo ${scriptTipIndex} | cut -d, -f1 | sed 's/_/ /g'`
            printf "  %03d    %s  %-15s %s  %-50s\n" $((${Index}+1)) "#" "${scriptItem}"
            Index=$(( ${Index} + 1 ))
        done
    fi
    printf "##############################################################################################\n"
    echo
    if [[ ${languageParam} == [kK][rR] ]];then
        read -p " 스크립트 팁 (취소:C) : " searchScriptTipIndex
    elif [[ ${languageParam} == [jJ][pP] ]];then
        read -p " スクリプトヒント (取り消し:C) : " searchScriptTipIndex
    else
        read -p " Script Tip (Cancel:C) : " searchScriptTipIndex
    fi

    if [[ ${searchScriptTipIndex} == [0-9][0-9][0-9] ]];then
        searchScriptTipIndex=$((10#${searchScriptTipIndex}))
    fi

    if [[ ${searchScriptTipIndex} == [cC] || ${searchScriptTipIndex} == [cC][aA][nN][cC][eE][lL] ]];then
        searchScriptTipIndex=""
        break
    fi

}

#--------------------------------------------#
# Linux Script Tip Example
#  : Linux Script Tip Example
#  : 리눅스 스크립트 팁 예
#  : Linuxスクリプトヒント例
#--------------------------------------------#
function func_linuxScriptTipExample() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### FilePath / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Array Index / 배열 인덱스 파라미터 / 配列インデックスパラメータ
    local scriptTipIndex=$3

    clear
    echo
    case ${scriptTipIndex} in
        1)
            func_script_for ${ouputLanguageParam} ${filePath} for
            ;;
        2)
            func_script_case ${ouputLanguageParam} ${filePath} case
            ;;
        3)
            func_script_while ${ouputLanguageParam} ${filePath} while
            ;;
        4)
            func_script_until ${ouputLanguageParam} ${filePath} until
            ;;
        5)
            func_script_break ${ouputLanguageParam} ${filePath} break
            ;;
        6)
            func_script_continue ${ouputLanguageParam} ${filePath} continue
            ;;
        7)
            func_script_if ${ouputLanguageParam} ${filePath} if
            ;;
        8)
            func_script_Calculate_Bracket ${ouputLanguageParam} ${filePath} Calculate_Bracket
            ;;
        9)
            func_script_Quotation_Marks ${ouputLanguageParam} ${filePath} Quotation_Marks
            ;;
        10)
            func_script_Variables_Modifiy ${ouputLanguageParam} ${filePath} Variables_Modifiy
            ;;
        11)
            func_script_IFS ${ouputLanguageParam} ${filePath} IFS
            ;;
        12)
            func_script_Parameter_Using ${ouputLanguageParam} ${filePath} Parameter_Using
            ;;
        13)
            func_script_File_Input_Output ${ouputLanguageParam} ${filePath} File_Input_Output
            ;;
        14)
            func_script_Create_Random_Data ${ouputLanguageParam} ${filePath} Create_Random_Data
            ;;
        *)  echo ; 
            if [[ ${ouputLanguageParam} == [kK][rR] ]];then
                echo " 에러 : 스크립트 팁 리스트에 존재하는 번호를 입력해주세요"; 
            elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
                echo " エラー : スクリプトヒントリストに存在する番号を入力"; 
            else
                echo " ERROR : Please enter a number that exists in the script tip list"; 
            fi
            echo ; # default
    esac
    
    ### Script Tip Initialization / 스크립트 팁 초기화 / スクリプトヒント初期化
    scriptTipIndex=""
    clear

}

#--------------------------------------------#
# Tip : for                           　　　   #
#--------------------------------------------#
function func_script_for() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for ((i=1; i<=5; i++))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "    echo "forIndex='${i}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for ((i=1; i<=5; i++))
            do
                echo "forIndex=${i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for forIndex in {1..5}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "for forIndex in {1..5}; do echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "시퀀스 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=9" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for forIndex in $(seq 1 2 10)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in $(seq 1 2 10)
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "배열을 사용한 반복문 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=En" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Kr" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Jp" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'stringArray=(En Kr Jp)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for forIndex in ${stringArray[@]}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            stringArray=(En Kr Jp)
            for forIndex in ${stringArray[@]}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の書き方1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for ((i=1; i<=5; i++))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "    echo "forIndex='${i}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for ((i=1; i<=5; i++))
            do
                echo "forIndex=${i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の書き方2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for forIndex in {1..5}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "for forIndex in {1..5}; do echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "シーケンスの書き方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=9" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for forIndex in $(seq 1 2 10)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in $(seq 1 2 10)
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "配列を使った繰り返し文の書き方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=En" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Kr" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Jp" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'stringArray=(En Kr Jp)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for forIndex in ${stringArray[@]}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            stringArray=(En Kr Jp)
            for forIndex in ${stringArray[@]}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical writing method1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'for ((i=1; i<=5; i++))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for ((i=1; i<=5; i++))
            do
                echo "forIndex=${i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical writing method2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'for forIndex in {1..5}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "for forIndex in {1..5}; do echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in {1..5}; do echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt; done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create sequence using" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=9" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'for forIndex in $(seq 1 2 10)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            for forIndex in $(seq 1 2 10)
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Create using a array" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=En" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Kr" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "forIndex=Jp" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'stringArray=(En Kr Jp)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'for forIndex in ${stringArray[@]}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "    echo "forIndex='${forIndex}'" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            stringArray=(En Kr Jp)
            for forIndex in ${stringArray[@]}
            do
                echo "forIndex=${forIndex}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt
            done
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile${countNumber}.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : case                                 #
#--------------------------------------------#
function func_script_case() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " 샘플1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "case '${countNumber}' in" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    1)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "        echo ' 샘플1 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    2)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "        echo ' 샘플2 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" "    *)  echo ' 샘플 else : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'esac' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        case "${countNumber}" in
            1)
                echo " 샘플1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                ;;
            2)
                echo " 샘플2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                ;;
            *)  echo " 샘플 else : ${countNumber} "  >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt # default
        esac
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " 샘플2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt"
        printf "    %-21s %s %s\n" "사용법" ":" "case '${countNumber}' in 1) echo \" 샘플1 : '${countNumber}' \";; 2) echo \" 샘플2 : '${countNumber}' \";; *) echo \" 샘플 else : '${countNumber}' \"; esac" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        case "${countNumber}" in 1) echo " 샘플1 : ${countNumber} ";; 2) echo " 샘플2 : ${countNumber} ";; *) echo " 샘플 else : ${countNumber} "; esac >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " サンプル1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "case '${countNumber}' in" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    1)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "        echo ' サンプル1 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    2)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "        echo ' サンプル2 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "    *)  echo ' サンプル else : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'esac' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            case "${countNumber}" in
                1)
                    echo " サンプル1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    ;;
                2)
                    echo " サンプル2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    ;;
                *)  echo " サンプル else : ${countNumber} "  >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt # default
            esac
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " サンプル2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" "case '${countNumber}' in 1) echo \" サンプル1 : '${countNumber}' \";; 2) echo \" サンプル2 : '${countNumber}' \";; *) echo \" サンプル else : '${countNumber}' \"; esac" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            case "${countNumber}" in 1) echo " サンプル1 : ${countNumber} ";; 2) echo " サンプル2 : ${countNumber} ";; *) echo " サンプル else : ${countNumber} "; esac >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Sample1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "case '${countNumber}' in" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    1)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "        echo ' サンプル1 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    2)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "        echo ' サンプル2 : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        ;;' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "    *)  echo ' サンプル else : ${countNumber} '" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'esac' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            case "${countNumber}" in
                1)
                    echo " Sample1 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    ;;
                2)
                    echo " Sample2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    ;;
                *)  echo " Sample else : ${countNumber} "  >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt # default
            esac
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Sample2 : ${countNumber} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" "case '${countNumber}' in 1) echo \" Sample1 : '${countNumber}' \";; 2) echo \" Sample2 : '${countNumber}' \";; *) echo \" Sample else : '${countNumber}' \"; esac" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            case "${countNumber}" in 1) echo " Sample1 : ${countNumber} ";; 2) echo " Sample2 : ${countNumber} ";; *) echo " Sample else : ${countNumber} "; esac >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : while                                #
#--------------------------------------------#
function func_script_while() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ] 
        do
            echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=`expr ${number} + 1`
        done
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ]; do echo "${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : until                                #
#--------------------------------------------#
function func_script_until() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'until [ ${number} -gt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        until [ ${number} -gt 5 ] 
        do
            echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=`expr ${number} + 1`
        done
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'until [ ${number} -gt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        until [ ${number} -gt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'until [ ${number} -gt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            until [ ${number} -gt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'until [ ${number} -gt 5 ]; do echo "${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            until [ ${number} -gt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'until [ ${number} -gt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            until [ ${number} -gt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'until [ ${number} -gt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            until [ ${number} -gt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : break                                #
#--------------------------------------------#
function func_script_break() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        break' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ] 
        do
            echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=`expr ${number} + 1`
            if [ ${number} -eq 3 ];then
                break
            fi
        done
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        break' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
                if [ ${number} -eq 3 ];then
                    break
                fi
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo "number=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        break' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
                if [ ${number} -eq 3 ];then
                    break
                fi
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then break; fi done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : continue                             #
#--------------------------------------------#
function func_script_continue() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo "number1=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        continue' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo "number2=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ] 
        do
            echo "number1=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=`expr ${number} + 1`
            if [ ${number} -eq 3 ];then
                continue
            fi
            echo "number2=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        done
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        number=0
        while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo "number1=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        continue' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo "number2=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number1=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
                if [ ${number} -eq 3 ];then
                    continue
                fi
                echo "number2=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'number=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ] ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo "number1=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    number=`expr ${number} + 1`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${number} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        continue' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo "number2=${number}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ] 
            do
                echo "number1=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                number=`expr ${number} + 1`
                if [ ${number} -eq 3 ];then
                    continue
                fi
                echo "number2=${number}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=0" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=2" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number1=4" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "number2=5" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "HowToUse" ":" 'while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            number=0
            while [ ${number} -lt 5 ]; do echo "number1=${number}"; number=`expr ${number} + 1`; if [ ${number} -eq 3 ];then continue; fi;  echo "number2=${number}"; done >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : if                                   #
#--------------------------------------------#
function func_script_if() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/directory1/
    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/directory2/
    echo "test1" > ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt
    chmod 777 -R ${filePathParam%/}/tmp/${scriptItem}/directory1/
    echo "test2" > ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt
    chmod 000 -R ${filePathParam%/}/tmp/${scriptItem}/directory2/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "[]통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "조건문에 맞는 내용이 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'read -p " Input Number(1,2,3,4,5) or text : " inputNumber' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [ ${inputNumber} = "text" ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'elif [ ${inputNumber} != "text" ];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -le 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -le "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} <= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -eq "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} = 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -ge 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -ge "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} >= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -gt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -gt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} > 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -eq -o -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} = 3 or ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " Condition : -le -a -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '        echo " ${inputNumber} <= 3 or ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        read -p " Input Number(1,2,3,4,5) or text : " inputNumber >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [ ${inputNumber} = "text" ];then 
            echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        elif [ ${inputNumber} != "text" ];then 
            echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [ ${inputNumber} -lt 3 ];then
                echo " Condition : -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -le 3 ];then
                echo " Condition : -le " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} <= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -eq 3 ];then
                echo " Condition : -eq " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} = 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -ge 3 ];then
                echo " Condition : -ge " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} >= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -gt 3 ];then
                echo " Condition : -gt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} > 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -ne 3 ];then
                echo " Condition : -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then
                echo " Condition : -eq -o -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} = 3 or ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then
                echo " Condition : -le -a -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                echo " ${inputNumber} <= 3 and ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
        else
            echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "[[]]통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "조건문에 맞는 내용이 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[] ${inputNumber} = "text" ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'elif [[ ${inputNumber} != "text" ]];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [[ ${inputNumber} == "text" ]];then 
            echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        elif [[ ${inputNumber} != "text" ]];then 
            echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        else
            echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "한 줄 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "조건문에 맞는 내용이 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "조건 체크 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "조건문에 맞는 내용이 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt Existing File Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Non-existent file, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Existing Folder Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ Non-existent Folder, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt File Type Output(-f)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Not output because it is in Folder format(-f) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Not output because it is in File format(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Folder Type Output(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because I don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have run permissions(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt 존재하는 파일 출력(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 존재하지 않는 파일 출력안함(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 존재하는 폴더 출력(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ 존재하지 않는 폴더 출력안함(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 파일 형식 출력(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 폴더 형식이라서 출력안함(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 파일 형식이라서 출력안함(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 폴더 형식 출력(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 읽기권한이 있어서 출력(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 읽기권한이 없어서 출력안함(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 읽기권한이 있어서 출력(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 읽기권한이 없어서 출력안함(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 쓰기권한이 있어서 출력(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 쓰기권한이 없어서 출력안함(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 쓰기권한이 있어서 출력(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 쓰기권한이 없어서 출력안함(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 실행권한이 있어서 출력(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 실행권한이 없어서 출력안함(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 실행권한이 없어서 출력안함(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 실행권한이 없어서 출력안함(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "[]通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "条件文に合う内容が出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'read -p " Input Number(1,2,3,4,5) or text : " inputNumber' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [ ${inputNumber} = "text" ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'elif [ ${inputNumber} != "text" ];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -le 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -le "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} <= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -eq "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} = 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -ge 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -ge "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} >= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -gt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -gt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} > 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -eq -o -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} = 3 or ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " Condition : -le -a -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '        echo " ${inputNumber} <= 3 or ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            read -p " Input Number(1,2,3,4,5) or text : " inputNumber >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [ ${inputNumber} = "text" ];then 
                echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            elif [ ${inputNumber} != "text" ];then 
                echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                if [ ${inputNumber} -lt 3 ];then
                    echo " Condition : -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -le 3 ];then
                    echo " Condition : -le " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} <= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -eq 3 ];then
                    echo " Condition : -eq " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} = 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -ge 3 ];then
                    echo " Condition : -ge " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} >= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -gt 3 ];then
                    echo " Condition : -gt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} > 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -ne 3 ];then
                    echo " Condition : -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then
                    echo " Condition : -eq -o -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} = 3 or ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then
                    echo " Condition : -le -a -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} <= 3 and ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
            else
                echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "[[]]通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "条件文に合う内容が出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[] ${inputNumber} = "text" ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'elif [[ ${inputNumber} != "text" ]];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [[ ${inputNumber} == "text" ]];then 
                echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            elif [[ ${inputNumber} != "text" ]];then 
                echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            else
                echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "一行書き方の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "条件文に合う内容が出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "条件チェックの使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "条件文に合う内容が出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt Existing File Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Non-existent file, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Existing Folder Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ Non-existent Folder, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt File Type Output(-f)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Not output because it is in Folder format(-f) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Not output because it is in File format(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Folder Type Output(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because I don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have run permissions(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt 存在するファイル出力(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 存在しないファイルを出力しない(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 存在するフォルダ出力(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ 存在しないフォルダを出力しない(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt フォルダ形式のため出力(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ フォルダ形式のため出力しない(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ファイル形式のため出力しない(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ フォルダ形式出力(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 読み取り権限があるので出力(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 読み取り権限がないため出力しない(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 読み取り権限があるので出力(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 読み取り権限がないため出力しない(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 書き込み権限があるので出力(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 書き込み権限がないため出力しない(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 書き込み権限があるので出力(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 書き込み権限がないため出力しない(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt 実行権限があるので出力(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt 実行権限がないため出力しない(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ 実行権限がないため出力しない(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ 実行権限がないため出力しない(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "[]Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Outputs content that matches the conditional statement" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'read -p " Input Number(1,2,3,4,5) or text : " inputNumber' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [ ${inputNumber} = "text" ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'elif [ ${inputNumber} != "text" ];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -le 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -le "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} <= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -eq 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -eq "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} = 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -ge 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -ge "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} >= 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -gt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -gt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} > 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -eq -o -ne "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} = 3 or ${inputNumber} != 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " Condition : -le -a -lt "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '        echo " ${inputNumber} <= 3 or ${inputNumber} < 3 "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            read -p " Input Number(1,2,3,4,5) or text : " inputNumber >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [ ${inputNumber} = "text" ];then 
                echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            elif [ ${inputNumber} != "text" ];then 
                echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                if [ ${inputNumber} -lt 3 ];then
                    echo " Condition : -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -le 3 ];then
                    echo " Condition : -le " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} <= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -eq 3 ];then
                    echo " Condition : -eq " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} = 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -ge 3 ];then
                    echo " Condition : -ge " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} >= 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -gt 3 ];then
                    echo " Condition : -gt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} > 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -ne 3 ];then
                    echo " Condition : -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -eq 3 -o ${inputNumber} -ne 3 ];then
                    echo " Condition : -eq -o -ne " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} = 3 or ${inputNumber} != 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
                if [ ${inputNumber} -le 3 -a ${inputNumber} -lt 3 ];then
                    echo " Condition : -le -a -lt " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                    echo " ${inputNumber} <= 3 and ${inputNumber} < 3 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
                fi
            else
                echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "[[]]Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Outputs content that matches the conditional statement" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[] ${inputNumber} = "text" ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " inputNumber is String(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'elif [[ ${inputNumber} != "text" ]];then ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " inputNumber is Number(${inputNumber}) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'else' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " Input Number(1,2,3,4,5) or text "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [[ ${inputNumber} == "text" ]];then 
                echo " inputNumber is String(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            elif [[ ${inputNumber} != "text" ]];then 
                echo " inputNumber is Number(${inputNumber}) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            else
                echo " Input Number(1,2,3,4,5) or text " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            fi
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "A way of writing in a single line" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Outputs content that matches the conditional statement" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            if [[ ${inputNumber} == "text" ]];then echo " inputNumber is String(${inputNumber}) "; elif [[ ${inputNumber} != "text" ]];then echo " inputNumber is Number(${inputNumber}) "; else echo " Input Number(1,2,3,4,5) or text "; fi >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "condition check" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Outputs content that matches the conditional statement" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt Existing File Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Non-existent file, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Existing Folder Output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ Non-existent Folder, not output(-e) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt File Type Output(-f)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Not output because it is in Folder format(-f) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Not output because it is in File format(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Folder Type Output(-d) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because I don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have read permissions(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to read(-r) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have write permissions(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to write(-w) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have run permissions(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to run(-x) "' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'fi' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile0.txt Existing File Output(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Non-existent file, not output(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Existing Folder Output(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -e ${filePathParam%/}/tmp/${scriptItem}/directory0/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory0/ Non-existent Folder, not output(-e) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt File Type Output(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -f ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Not output because it is in Folder format(-f) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Not output because it is in File format(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -d ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Folder Type Output(-d) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have read permissions(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because I don't have permission to read(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have read permissions(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -r ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to read(-r) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have write permissions(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to write(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ Output because you have write permissions(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -w ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to write(-w) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/${scriptItem}_TestFile1.txt Output because you have run permissions(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/${scriptItem}_TestFile2.txt don't print because don't have permission to run(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory1/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory1/ don't print because don't have permission to run(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo
        if [[ -x ${filePathParam%/}/tmp/${scriptItem}/directory2/ ]];then 
            echo " ${filePathParam%/}/tmp/${scriptItem}/directory2/ don't print because don't have permission to run(-x) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        fi
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    chmod 777 ${filePathParam%/}/tmp/${scriptItem}/directory2/
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : Calculate_Bracket                    #
#--------------------------------------------#
function func_script_Calculate_Bracket() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : $(( ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(+) : 13" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(-) : 7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(*) : 30" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(/) : 3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(%) : 1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Number1=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Number2=3' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Calculate Test(+) : $(( ${Number1} + ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Calculate Test(-) : $(( ${Number1} - ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Calculate Test(*) : $(( ${Number1} * ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Calculate Test(/) : $(( ${Number1} / ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Calculate Test(%) : $(( ${Number1} % ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number1=10 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number2=3 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Calculate Test(+) : $(( ${Number1} + ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Calculate Test(-) : $(( ${Number1} - ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Calculate Test(*) : $(( ${Number1} * ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Calculate Test(/) : $(( ${Number1} / ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Calculate Test(%) : $(( ${Number1} % ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "10진수출력방법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10진수 출력 : 8" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10진수 출력 : 10" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Number1=008' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'Number2=010' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '10진수 출력 : $((10#${Number1}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '10진수 출력 : $((10#${Number2}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number1=008 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number2=010 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "10진수 출력 : $((10#${Number1}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "10진수 출력 : $((10#${Number2}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(+) : 13" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(-) : 7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(*) : 30" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(/) : 3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(%) : 1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Number1=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Number2=3' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Calculate Test(+) : $(( ${Number1} + ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Calculate Test(-) : $(( ${Number1} - ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Calculate Test(*) : $(( ${Number1} * ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Calculate Test(/) : $(( ${Number1} / ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Calculate Test(%) : $(( ${Number1} % ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            Number1=10 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            Number2=3 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(+) : $(( ${Number1} + ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(-) : $(( ${Number1} - ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(*) : $(( ${Number1} * ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(/) : $(( ${Number1} / ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(%) : $(( ${Number1} % ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "10進数出力方法" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10進数出力 : 8" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10進数出力 : 10" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Number1=008' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'Number2=010' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '10進数出力 : $((10#${Number1}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '10進数出力 : $((10#${Number2}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number1=008 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number2=010 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "10進数出力 : $((10#${Number1}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "10進数出力 : $((10#${Number2}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(+) : 13" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(-) : 7" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(*) : 30" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(/) : 3" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(%) : 1" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Number1=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Number2=3' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Calculate Test(+) : $(( ${Number1} + ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Calculate Test(-) : $(( ${Number1} - ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Calculate Test(*) : $(( ${Number1} * ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Calculate Test(/) : $(( ${Number1} / ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Calculate Test(%) : $(( ${Number1} % ${Number2} ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            Number1=10 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            Number2=3 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(+) : $(( ${Number1} + ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(-) : $(( ${Number1} - ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(*) : $(( ${Number1} * ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(/) : $(( ${Number1} / ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Calculate Test(%) : $(( ${Number1} % ${Number2} ))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Decimal Output Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Decimal Output Method : 8" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "Decimal Output Method : 10" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Number1=008' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Number2=010' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Decimal Output Method : $((10#${Number1}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'Decimal Output Method : $((10#${Number2}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number1=008 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        Number2=010 >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Decimal Output Method : $((10#${Number1}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo "Decimal Output Method : $((10#${Number2}))" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : Quotation_Marks                      #
#--------------------------------------------#
function func_script_Quotation_Marks() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : '',\"\",\`\`" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd="작업패스" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'testpwd=pwd' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo testpwd='${testpwd}'' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo testpwd="${testpwd}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo testpwd=`${testpwd}`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo testpwd="${testpwd}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo testpwd=`${testpwd}` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd="作業ディレクトリ" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'testpwd=pwd' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo testpwd='${testpwd}'' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo testpwd="${testpwd}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo testpwd=`${testpwd}`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd="${testpwd}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd=`${testpwd}` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd="WorkingDirectory" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'testpwd=pwd' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo testpwd='${testpwd}'' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo testpwd="${testpwd}"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo testpwd=`${testpwd}`' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            testpwd=pwd >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd='${testpwd}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd="${testpwd}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo testpwd=`${testpwd}` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : Variables_Modifiy                    #
#--------------------------------------------#
function func_script_Variables_Modifiy() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : '',"",``" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '[Variable] : 원본 값 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2} : TestingtDataCutTestingtaCut ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern} : 18 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern2} : 27 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*} : AAABBBCACCB ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*t} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*} : AAA ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*t} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#A*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#T*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:-Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:-Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:=Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:=Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:+Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:+Test1} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6} : tNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6:2} : tNu ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6:2} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:?Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarPattern=AAABBBCACCBBDDAATT
            VarPattern2=TestingtDataCutTestingtaCut
            VarNotNull=TestNotNull
            VarNull=
            echo " [Variable] : 원본 값 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern} : ${VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2} : ${VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#Variable] : 변수의 문자수 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern} : ${#VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern2} : ${#VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%pattern] : 끝점을 포함하여 가장 짧게 일치하는 패턴 삭제 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*A} : ${VarPattern%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*} : ${VarPattern%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*t} : ${VarPattern2%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*} : ${VarPattern2%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%%pattern] : 끝점을 포함하여 가장 길게 일치하는 패턴 삭제 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*A} : ${VarPattern%%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*} : ${VarPattern%%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*t} : ${VarPattern2%%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*} : ${VarPattern2%%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#pattern] : 시작점을 포함한 가장 짧은 일치하는 패턴 삭제 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#A*B} : ${VarPattern#A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#*B} : ${VarPattern#*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#T*i} : ${VarPattern2#T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#*i} : ${VarPattern2#*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [##pattern] : 시작점을 포함한 가장 길게 일치하는 패턴 삭제 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : 변수가 null이 아니면 변수 값을 그대로 사용 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : 변수가 null이면 [Word]로 대체(일시적) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:-Test1} : ${VarNotNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:-Test1} : ${VarNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : 변수가 null이 아니면 변수 값을 그대로 사용 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : 변수가 null이면 [Word]로 대체(영구적) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:=Test1} : ${VarNotNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:=Test1} : ${VarNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarNull=
            echo " [:+Word] : 변수가 null이 아닌 경우 [Word]로 대체 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:+Word] : 변수가 null이면 아무것도 하지 않음 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:+Test1} : ${VarNotNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:+Test1} : ${VarNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset] : 왼쪽에서 [offset] 숫자로 변수 값을 오프셋하여 출력 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:6} : ${VarNotNull:6} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset:length] : 왼쪽에서 [offset] 숫자로 변수 값 오프셋을 설정하고 [length]로 출력 "
            echo " \${VarNotNull:6:2} : ${VarNotNull:6:3} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : 변수가 null이 아니면 변수 값이 사용되고, 변수가 null이면 변수 값이 사용 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : 셸은 오류 출력 후에 종료 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:?Test1} : ${VarNotNull:?Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo ' \${VarNull:?Test1} : ${VarNull:?Test1} ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2} : TestingtDataCutTestingtaCut ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern} : 18 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern2} : 27 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*} : AAABBBCACCB ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*t} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*} : AAA ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*t} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#A*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#T*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:-Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:-Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:=Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:=Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:+Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:+Test1} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6} : tNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6:2} : tNu ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6:2} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:?Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarPattern=AAABBBCACCBBDDAATT
            VarPattern2=TestingtDataCutTestingtaCut
            VarNotNull=TestNotNull
            VarNull=
            echo " [Variable] : 原本の値 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern} : ${VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2} : ${VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#Variable] : 変数の文字数 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern} : ${#VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern2} : ${#VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%pattern] : 終点を含めて最も短く一致するパターンを削除 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*A} : ${VarPattern%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*} : ${VarPattern%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*t} : ${VarPattern2%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*} : ${VarPattern2%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%%pattern] : 終点を含めて最も長く一致するパターンを削除 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*A} : ${VarPattern%%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*} : ${VarPattern%%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*t} : ${VarPattern2%%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*} : ${VarPattern2%%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#pattern] : 始点を含む最も短い一致するパターンを削除 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#A*B} : ${VarPattern#A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#*B} : ${VarPattern#*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#T*i} : ${VarPattern2#T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#*i} : ${VarPattern2#*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [##pattern] : 始点を含む最も長く一致するパターンを削除 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : 変数がnullでなければ変数値をそのまま使用 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : 変数がnullの場合は[Word]に置き換える(臨時的) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:-Test1} : ${VarNotNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:-Test1} : ${VarNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : 変数がnullでなければ変数値をそのまま使用 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : 変数がnullの場合は[Word]に置き換える(永久的) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:=Test1} : ${VarNotNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:=Test1} : ${VarNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarNull=
            echo " [:+Word] : 変数がnullでない場合は、[Word]に置き換える " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:+Word] : 変数がnullなら何もしない " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:+Test1} : ${VarNotNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:+Test1} : ${VarNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset] : 左側から[offset]の数字で変数値をオフセットして出力 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:6} : ${VarNotNull:6} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset:length] : 左側で[offset]の数字で変数値オフセットを設定し、[length]で出力 "
            echo " \${VarNotNull:6:2} : ${VarNotNull:6:3} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : 変数がnullでなければ変数値が使用され、変数がnullであれば変数値が使用 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : シェルはエラー出力後に終了 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:?Test1} : ${VarNotNull:?Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo ' \${VarNull:?Test1} : ${VarNull:?Test1} ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '[Variable] : 원본 값 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2} : TestingtDataCutTestingtaCut ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern} : 18 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${#VarPattern2} : 27 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%B*} : AAABBBCACCB ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*t} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%i*} : TestingtDataCutTest ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*A} : AAABBBCACCBBDDAATT ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern%%B*} : AAA ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*t} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2%%i*} : Test ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#A*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern#*B} : BBCACCBBDDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#T*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2#*i} : ngtDataCutTestingtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern##A*B} : DDAATT' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarPattern2##T*i} : ngtaCut' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:-Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:-Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:=Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:=Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:+Test1} : Test1 ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:+Test1} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6} : tNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:6:2} : tNu ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull:6:2} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNull} :  ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo '${VarNotNull:?Test1} : TestNotNull ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarPattern=AAABBBCACCBBDDAATT
            VarPattern2=TestingtDataCutTestingtaCut
            VarNotNull=TestNotNull
            VarNull=
            echo " [Variable] : Original value " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern} : ${VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2} : ${VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#Variable] : Number of characters in a variable " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern} : ${#VarPattern} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${#VarPattern2} : ${#VarPattern2} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%pattern] : Delete the shortest matching pattern, including end points " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*A} : ${VarPattern%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%B*} : ${VarPattern%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*t} : ${VarPattern2%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%i*} : ${VarPattern2%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [%%pattern] : Delete the longest matching pattern, including end points " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*A} : ${VarPattern%%B*A} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern%%B*} : ${VarPattern%%B*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*t} : ${VarPattern2%%i*t} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2%%i*} : ${VarPattern2%%i*} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [#pattern] : Delete the shortest matching pattern including the starting point " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#A*B} : ${VarPattern#A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern#*B} : ${VarPattern#*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#T*i} : ${VarPattern2#T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2#*i} : ${VarPattern2#*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [##pattern] : Delete the longest matching pattern including the starting point " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##A*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern##A*B} : ${VarPattern##*B}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##T*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarPattern2##T*i} : ${VarPattern2##*i}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : Use variable values as they are if the variable is not null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:-Word] : Replace with [Word] if the variable is null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:-Test1} : ${VarNotNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:-Test1} : ${VarNull:-Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : Use variable values as they are if the variable is not null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:=Word] : Replace with [Word] if the variable is null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:=Test1} : ${VarNotNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:=Test1} : ${VarNull:=Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            VarNull=
            echo " [:+Word] : Replace with [Word] if the variable is not null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:+Word] : Do nothing if the variable is null " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:+Test1} : ${VarNotNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull:+Test1} : ${VarNull:+Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNull} : ${VarNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset] : Outputs variable values offset by [offset] numbers from the left " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:6} : ${VarNotNull:6} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:offset:length] : Set a variable value offset from the left to the [offset] number and output to [length] "
            echo " \${VarNotNull:6:2} : ${VarNotNull:6:3} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull} : ${VarNotNull} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : If the variable is not null, the variable value is used; if the variable is null, the variable value is used " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [:?Word] : Shell shuts down after error output " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " \${VarNotNull:?Test1} : ${VarNotNull:?Test1} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo ' \${VarNull:?Test1} : ${VarNull:?Test1} ' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : IFS                                  #
#--------------------------------------------#
function func_script_IFS() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : IFS" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 1 : Korea" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 2 : Japan:China:USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 1 : Korea Japan" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 2 : China" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 3 : USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'oldifs=${IFS}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'IFS=":"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            oldifs=${IFS}
            IFS=":"
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 1 : Korea" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 2 : Japan:China:USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 1 : Korea Japan" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 2 : China" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 3 : USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'oldifs=${IFS}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'IFS=":"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            oldifs=${IFS}
            IFS=":"
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 1 : Korea" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " Defualt : Space -> No. 2 : Japan:China:USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " Defualt : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 1 : Korea Japan" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 2 : China" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " IFS : Space -> No. 3 : USA" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'nation="Korea Japan:China:USA"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'NumValue=0' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'oldifs=${IFS}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'IFS=":"' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'for country in ${nation}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    NumValue=$(( NumValue + 1 ))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            nation="Korea Japan:China:USA"
            NumValue=0
            oldifs=${IFS}
            IFS=":"
            for country in ${nation}
            do  
                NumValue=$(( NumValue + 1 ))
                echo " IFS : Space -> No. ${NumValue} : ${country}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            done
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    IFS=${oldifs}
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : Parameter_Using                      #
#--------------------------------------------#
function func_script_Parameter_Using() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : $$, $!..." >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "통상적 작성법" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : 쉘 프로세스 ID " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : 가장 최근 백그라운드에서 실행된 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : 가장 최근의 종료 상태 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : 사용중인 쉘스크립트의 풀패스 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : 모든 파라미터를 출력 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : 모든 파라미터를 출력(''으로 묶인경우 하나로 취급) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : 1자리수의 파라미터는 \$뒤에 숫자로 사용 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : 2자리수의 파라미터는 {}로 감싸주어야한다. " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : 파라미터 갯수 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$$ ] : 쉘 프로세스 ID' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$! ] : 가장 최근 백그라운드에서 실행된' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$? ] : 가장 최근의 종료 상태' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$0 ] : 사용중인 쉘스크립트의 풀패스' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$* ] : 모든 파라미터를 출력' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$@ ] : 모든 파라미터를 출력(''으로 묶인경우 하나로 취급)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$1 ] : 1자리수의 파라미터는 \$뒤에 숫자로 사용' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \${10} ] : 2자리수의 파라미터는 {}로 감싸주어야한다.' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '[ \$# ] : 파라미터 갯수' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : $$ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : $! " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : $? " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : $0 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : $* " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : $@ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : $1 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : ${10} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : $# " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-14s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "通常の使い方" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : シェルプロセスID " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : 一番最近バックグラウンドで実行 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : 最近終了状態 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : 使用中のシェルスクリプトのフルパス " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : 全てのパラメータ出力 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : すべてのパラメータが出力されます(''に縛られた場合、1つに処理される) " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : 1桁のパラメータが\$の後に数字として使われます " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : 2桁のパラメータは{}で囲む必要があります " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : パラメータ数 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$$ ] : シェルプロセスID' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$! ] : 一番最近バックグラウンドで実行' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$? ] : 最近終了状態' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$0 ] : 使用中のシェルスクリプトのフルパス' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$* ] : 全てのパラメータ出力' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$@ ] : すべてのパラメータが出力されます(''に縛られた場合、1つに処理される)' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$1 ] : 1桁のパラメータが\$の後に数字として使われます' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \${10} ] : 2桁のパラメータは{}で囲む必要があります' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '[ \$# ] : パラメータ数' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : $$ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : $! " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : $? " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : $0 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : $* " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : $@ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : $1 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : ${10} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : $# " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-10s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-15s %s %s\n" "ExpectedOutput" ":" "Typical Writing Method" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : shell process ID " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : most recently run in the background " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : Most recent shutdown status " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : full pass of the shell script in use " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : Output all parameters " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : All parameters are output (handled as one if tied to'') " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : 1digit parameter is used as a number after \$ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : 2digit parameters must be wrapped with {} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : Number of parameters " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$$ ] : shell process ID' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$! ] : most recently run in the background' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$? ] : Most recent shutdown status' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$0 ] : full pass of the shell script in use' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$* ] : Output all parameters' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$@ ] : All parameters are output (handled as one if tied to'')' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$1 ] : 1 digit parameter is used as a number after \$' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \${10} ] : 2digit parameters must be wrapped with {}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '[ \$# ] : Number of parameters' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$$ ] : $$ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$! ] : $! " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$? ] : $? " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$0 ] : $0 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$* ] : $* " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$@ ] : $@ " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$1 ] : $1 " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \${10} ] : ${10} " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " [ \$# ] : $# " >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : File_Input_Output                    #
#--------------------------------------------#
function func_script_File_Input_Output() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : >,>>,<" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "덮어쓰기" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test11" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test12" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "이어쓰기" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "파일로부터 표준입력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22 test21 test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "에러발생시만 파일에 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " No such file or directory" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "上書き" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test11" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test12" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "続き作成" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "ファイルから標準入力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22 test21 test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "エラー発生時のみファイルに出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " No such file or directory" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Overwrite" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test11" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test12" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Additional Write" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test21" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            echo "test22" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Enter Standard from File" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "test22 test21 test12" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo `sort -r < ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_TestFile.txt` >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "ExpectedOutput" ":" "Output to a file only when an error occurs" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo " No such file or directory" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            cat ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_NoTestFile.txt 2>> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}

#--------------------------------------------#
# Tip : Create_Random_Data                   #
#--------------------------------------------#
function func_script_Create_Random_Data() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Command / 명령어 / コマンド
    local scriptItem=$3
    ### Count / 번호 / 番号 
    local countNumber=0

    mkdir -p ${filePathParam%/}/tmp/${scriptItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${scriptItem}
    printf "##############################################################################################\n" > ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "  %-16s %s %s\n" "" "" "${scriptItem} : RANDOM" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        export LC_ALL="ko_KR.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "대문자 랜덤 문자열" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10자리 대문자 랜덤 문자열 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    randomAscii=$((RANDOM % 26 + 65))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 65))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "소문자 랜덤 문자열" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10자리 소문자 랜덤 문자열 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    randomAscii=$((RANDOM % 26 + 97))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 97))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "샘플${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "예상출력결과" ":" "숫자 랜덤 문자열" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10자리 숫자 랜덤 문자열 출력" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    randomInt=$((RANDOM % 10))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" '    item=${item}${randomInt}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "사용법" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomInt=$((RANDOM % 10))
                item=${item}${randomInt}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        export LC_ALL="ja_JP.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "大文字ランダム文字列" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10桁の大文字ランダム文字列出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    randomAscii=$((RANDOM % 26 + 65))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 65))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "小文字ランダム文字列" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10桁の小文字ランダム文字列出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    randomAscii=$((RANDOM % 26 + 97))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 97))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "サンプル${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "予想出力結果" ":" "数字ランダム文字列" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10桁の数字ランダム文字列出力" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    randomInt=$((RANDOM % 10))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" '    item=${item}${randomInt}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "使い方" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomInt=$((RANDOM % 10))
                item=${item}${randomInt}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    else
        export LC_ALL="en_US.UTF-8"
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "uppercase random string" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10-digit uppercase random string output" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    randomAscii=$((RANDOM % 26 + 65))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 65))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "lowercase random string" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10-digit lowercase random string output" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    randomAscii=$((RANDOM % 26 + 97))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    randomChar=$(printf \\$(printf '%03o' ${randomAscii}))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    item=${item}${randomChar}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomAscii=$((RANDOM % 26 + 97))
                randomChar=$(printf \\$(printf '%03o' ${randomAscii}))
                item=${item}${randomChar}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        countNumber=$((${countNumber}+1))
        printf "#============================================================================================#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "  %-12s %s %-15s\n" "Sample${countNumber}" "" "" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" "random number" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo "10-digit random number output" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'item=""' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'itemLength=10' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'for ((i=1; i<=${itemLength}; i++)); do' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    randomInt=$((RANDOM % 10))' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" '    item=${item}${randomInt}' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "    %-21s %s %s\n" "HowToUse" ":" 'done' >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            item=""
            itemLength=10
            for ((i=1; i<=${itemLength}; i++)); do
                randomInt=$((RANDOM % 10))
                item=${item}${randomInt}
            done
            echo "item=${item}" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
            echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
        printf "#--------------------------------------------------------------------------------------------#\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    fi
    echo >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    printf "##############################################################################################\n" >> ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    
    export LC_ALL=${old_LC_ALL}
    less ${filePathParam%/}/tmp/${scriptItem}/${scriptItem}_SampleText.txt
    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${scriptItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${scriptItem}
    echo 
    
}


#--------------------------------------------#
# Show Helper Shell
#  : Helper Shell
#  : 보조 쉘
#  : 手伝いシェル
#--------------------------------------------#
function func_showHelperShell() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    while true
    do
        if [[ ${languageParam} == [kK][rR] ]];then
            echo
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%7s\n"                                                                                   "보조 쉘"
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%-3s%-30s\n"                                                                                      "1. CreateTestData.sh" "*" "https://github.com/DokBak/DokBak_Shell_CMD/blob/main/CreateTestData.sh"
            printf "  * \n"
            printf "  * %-33s\n"                                                                                      "9. 이전메뉴"
            printf "  ***********************************************************************************************************************\n"
            echo 
            read -p " 이전메뉴 : " showHelperShell
            echo
        elif [[ ${languageParam} == [jJ][pP] ]]; then
            echo
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%7s\n"                                                                                   "手伝いシェル"
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%-3s%-30s\n"                                                                                      "1. CreateTestData.sh" "*" "https://github.com/DokBak/DokBak_Shell_CMD/blob/main/CreateTestData.sh"
            printf "  * \n"
            printf "  * %-25s\n"                                                                                      "9. 前のメニュー"
            printf "  ***********************************************************************************************************************\n"
            echo 
            read -p " 前のメニュー : " showHelperShell
            echo
        else
            echo
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%7s\n"                                                                                   "Helper Shell"
            printf "  ***********************************************************************************************************************\n"
            printf "  * %-25s%-3s%-30s*\n"                                                                                     "1. CreateTestData.sh" "*" "https://github.com/DokBak/DokBak_Shell_CMD/blob/main/CreateTestData.sh"
            printf "  * \n"
            printf "  * %-25s\n"                                                                                      "9. Previous Menu"
            printf "  ***********************************************************************************************************************\n"
            echo 
            read -p " Previous Menu : " showHelperShell
            echo
        fi

        ### Parameter exist / 파라미터가 존재 / パラメータが存在
        if [[ ${showHelperShell} == 9 ]]; then
            clear
            break
        else
            clear
            if [[ ${languageParam} == [kK][rR] ]]; then
                echo
                printf "%s%s\n" "### [9]를 입력해주세요 ###"
            elif [[ ${languageParam} == [jJ][pP] ]]; then
                echo
                printf "%s%s\n" "### [9]を入力してください ###"
            else
                echo
                printf "%s%s\n" "### Please input [9] ###"
            fi
        fi

    done

}

#--------------------------------------------#
# Select Editor
#  : List of Editor
#  : 편집기 리스트
#  : エディターリスト
#--------------------------------------------#
function func_selectEditor() {

    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local languageParam=$1

    ### Function Main Logic / 함수 메인 로직 / 関数メインロジック
    while true
    do
        if [[ ${languageParam} == [kK][rR] ]];then
            echo
            printf "  ******************************\n"
            printf "  * %25s%7s*\n"                     "편집기 선택"
            printf "  ******************************\n"
            printf "  * %-27s*\n"                       "1. Vim"
            printf "  * %-27s*\n"                       "2. Nano"
            printf "  *                            *\n"
            printf "  * %-31s*\n"                       "9. 이전메뉴"
            printf "  ******************************\n"
            echo 
            read -p " 편집기를 선택해주세요. : " selectEditor
            echo
        elif [[ ${languageParam} == [jJ][pP] ]]; then
            echo
            printf "  ******************************\n"
            printf "  * %28s%6s*\n"                     "エディター選択"
            printf "  ******************************\n"
            printf "  * %-27s*\n"                       "1. Vim"
            printf "  * %-27s*\n"                       "2. Nano"
            printf "  *                            *\n"
            printf "  * %-33s*\n"                       "9. 前のメニュー"
            printf "  ******************************\n"
            echo 
            read -p " 編集機を選択ください。 : " selectEditor
            echo
        else
            echo
            printf "  ******************************\n"
            printf "  * %20s%7s*\n"                     "Select Editor"
            printf "  ******************************\n"
            printf "  * %-27s*\n"                       "1. Vim"
            printf "  * %-27s*\n"                       "2. Nano"
            printf "  *                            *\n"
            printf "  * %-27s*\n"                       "9. Previous Menu"
            printf "  ******************************\n"
            echo 
            read -p " Select Editor. : " selectEditor
            echo
        fi

        ### Parameter exist / 파라미터가 존재 / パラメータが存在
        if [[ ${selectEditor} == 1 || ${selectEditor} == [vV][iI][mM] ]]; then
            func_editor_vim ${languageParam} ${filePath} "vim"
            clear
        elif [[ ${selectEditor} == 2 || ${selectEditor} == [nN][aA][nN][oO] ]]; then
            func_editor_nano ${languageParam} ${filePath} "nano"
            clear
        elif [[ ${selectEditor} == 9 ]]; then
            clear
            break
        else
            clear
            if [[ ${languageParam} == [kK][rR] ]]; then
                echo
                printf "%s%s\n" "### 편집기를 선택해주세요. (대소문자 구분없음 : " "vim, nano ) ###"
                printf "%s%35s\n" "### 번호를 선택해주세요.   (" "1,    2 ) ###"
            elif [[ ${languageParam} == [jJ][pP] ]]; then
                echo
                printf "%s%s\n" "### エディターを選択してください. (大小文字区別無し : " "vim, nano ) ###"
                printf "%s%34s\n" "### 番号を選択してください.       (" "1,    2 ) ###"
            else
                echo
                printf "%s%s\n" "### Please check the Editor. (case-insensitive : " "vim, nano ) ###"
                printf "%s%34s\n" "### Please check the Number. (" "1,    2 ) ###"
            fi
        fi

    done

}

#--------------------------------------------#
# Editor : vim                               #
#--------------------------------------------#
function func_editor_vim() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Editor / 편집기 / エディター
    local editorItem=$3

    mkdir -p ${filePathParam%/}/tmp/${editorItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${editorItem}
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        echo '###vim Text Mod Command###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Normal Mode : 처음 실행한 상태' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> h(왼쪽 방향키) : 커서 위치부터 왼쪽으로 한 칸 이동' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> j(아래 방향키) : 커서 위치부터 아래쪽으로 한 칸 이동' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> k(위쪽 방향키) : 커서 위치부터 위쪽으로 한 칸 이동' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> l(오른쪽 방향키) : 커서 위치부터 오른쪽으로 한 칸 이동' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x : 커서 위치의 문자 하나를 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> u : 편집 내용 하나 취소' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Insert Mode : i, a, o, I, A, O를 눌른후 텍스트를 입력할수 있는 상태' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Normal 모드에서 Insert Mode로 이동' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> i : 커서 위치부터 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> I : 커서가 있는 줄의 맨 앞에서부터 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> a : 커서 위치의 다음 칸부터 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> A : 커서가 있는 줄의 끝에서부터 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> o : 커서 바로 아래에 줄을 만들고 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> O : 커서 바로 위에 줄을 만들고 Insert Mode 진입' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Insert Mode에서 조작(삭제)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x(dl) : 커서 위치의 문자 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> X(dh) : 커서 위치의 바로 앞 문자 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dw : 커서 위치의 한 단어를 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> d0 : 커서 위치부터 행의 처음까지 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> D(d$) : 커서 위치부터 행의 맨끝까지 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dd : 커서 위치의 행 전체를 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dj : 커서 위치의 행과 그 다음 행을 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dk : 커서 위치의 행과 그 앞 행을 삭제' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Insert Mode에서 조작(복사/붙여넣기)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yw : 커서 위치부터 단어의 끝까지 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y2w : 커서 위치부터 두 단어 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y0 : 커서 위치부터 줄의 처음까지 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y$ : 커서 위치부터 줄의 끝까지 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yy : 커서가 있는 줄을 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> 2yy : 커서가 있는 줄 아래로 두줄을 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yj : 커서가 있는 줄과 그 다음줄을 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yk : 커서가 있는 줄과 그 앞줄을 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yG : 현재 위치에서 파일의 끝까지 복사' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> p : 커서의 다음 위치에 붙여넣기' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> PP : 커서가 있는 위치에 붙여넣기' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Command Mode : Normal Mode에서 [ ESC ]를 누르고 [ : ]을 입력한 상태' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w : 저장하기' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w test.txt : test.txt 파일로 저장' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w >> test.txt : test.txt 파일에 이어서 저장' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :q : vi 편집기를 종료' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ZZ : 저장 후 종료' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :wq! : 강제 저장 후 종료' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : test.txt 파일을 불러온다.' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : 현재 파일을 불러온다.' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Visual Mode : 블록 선택을 위해서 v 또는 [ Ctrl + V ] 키를 누른 상태' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   ETC' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> "." : .는 이전에 사용하였던 명령을 재실행한다.' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> /[검색어] : [검색어]가 출력되는 행을 제일 위에 출력(현재 페이지에 없는 경우 다음페이지에서 검색)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ?[검색어] : [검색어]가 출력되는 행을 제일 위에 출력(현재 페이지에 없는 경우 이전페이지에서 검색)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :[범위]/[매칭문자열]/[치환문자열]/[라인범위] : 기존 문자열을 한 번에 치환할때 사용한다.(:%s/AA/BB/g -> 처음부터끝까지 AA를 BB로 치환)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> (:%s/AA/BB/g -> 처음부터끝까지 AA를 BB로 치환)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> (:%s/AA/BB/gc -> 처음부터끝까지 AA를 BB로 치환할때 사용자에게 물어보며 하나씩 치환한다.)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        vi ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        echo '###vim Text Mod Command###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Normal モード : 初めて実行した状態' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> h(左方向キー):カーソル位置から左方向に1文字移動' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> j(下方向キー):カーソル位置から下方向に1文字移動' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> k(上方向キー):カーソル位置から上方向に1文字移動' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> l(右方向キー):カーソル位置から右方向に1文字移動' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x : カーソル位置の文字一つを削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> u : 編集内容一つ取り消し' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Insert モード : i、 a、o、I、A、Oを押してからテキストを入力できる状態' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ノーマルモードからInsertモードに移動' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> i : カーソル位置からInsertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> I : カーソルがある列の一番前からInsertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> a : カーソル位置の次の文字からInsertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> A : カーソルがある列の端からInsertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> o : カーソルのすぐ下に線を作り、Insertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> O : カーソルの真上に線を作り、Insertモードに進入' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Insertモードで操作（削除）' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x(dl) : カーソル位置の文字削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> X(dh) : カーソル位置のすぐ前の文字を削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dw : カーソル位置の単語を削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> d0 : カーソル位置から行の最初まで削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> D(d$) : カーソル位置から行の最後まで削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dd : カーソル位置の行全体を削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dj : カーソル位置の行とその次の行を削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dk : カーソル位置の行とその前の行を削除' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Insert モードで操作(コピー/貼り付け)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yw : カーソル位置から単語の最後までコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y2w : カーソル位置から二つの単語をコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y0 : カーソル位置から線の最初までコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y$ : カーソル位置から線の端までコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yy : カーソルのある行のコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> 2yy : カーソルのある行の下に2行をコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yj : カーソルのある行とその次の行をコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yk : カーソルのある行とその前の行をコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yG : 現在地からファイルの最後までコピー' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> p : カーソルの次の位置に貼り付ける' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> PP : カーソルのある位置に貼り付ける' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Command モード : Normal モードで[ESC]を押して[ : ]を入力した状態' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w : 保存' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w test.txt : test.txt ファイルとして保存' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w >> test.txt : test.txt ファイルに続いて保存' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :q : vi エディターを終了' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ZZ : 保存後終了' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :wq! : 強制保存後に終了' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : test.txt ファイルを読み込む。' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : 現在ファイルを読み込む。' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Visual モード : ブロック選択のためにvまたは[Ctrl+V]キーを押した状態' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   ETC' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> "." : .は、以前に使用した命令を再実行.' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> /[検索語] : [検索語]が出力される行を一番上に出力(現在のページにない場合は、次のページで検索)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ?[検索語] : [検索語]が出力される行を一番上に出力(現在のページにない場合は、前のページで検索)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :[範囲]/[マッチング文字列]/[置換文字列]/[ライン範囲] : 既存文字列を一度に置換する際に使用する。(:%s/AA/BB/g -> 最初から最後までAAをBBに置換)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> （:%s/AA/BB/g -> 最初から最後までAAをBBに置換）' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> （:%s/AA/BB/gc -> 最初から最後までAAをBBに置き換える際に、ユーザに聞いて一つずつ置き換える。）' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        vi ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    else
        echo '###vim Text Mod Command###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Normal mode : the state of being executed for the first time' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> h(left key): Move one character to the left from the cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> j(Down key): Move one character downward from cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> k(Up key): Move one character upward from cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> l(Right key): Move one character to the right from the cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x : Delete one character in cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> u : Undo one edit' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Insert mode : i, a, o, I, A, O, and then text can be entered' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Go from Normal Mode to Insert Mode' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> i : Enter Insert mode from cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> I : cursor enters Insert mode from the front of column' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> a : Enter Insert mode from the next character in the cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> A : US>Cursor enters Insert mode at the end of column' >>${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> o —Create a line just below the cursor and enter Insert mode' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> O : Create a line directly above the cursor and enter Insert mode' >>${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> Operation in Insert Mode (Delete)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> x(dl) : Delete cursor position character' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> X(dh) : Delete the character immediately before the cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dw : Delete cursor position word' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> d0 : Delete from cursor position to beginning of row' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> D(d$) : Delete from cursor position to end of row' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dd : Delete the entire row at the cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dj : Delete cursor position line and next line' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> dk : Delete cursor position row and previous row' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->Operate in Insert mode (copy/paste)'>>${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yw : Copy from cursor to end of word' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y2w : Copy two words from cursor position' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y0 : Copy from cursor to line beginning' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> y$ : Copy from cursor to line edge' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yy : Copy row with cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> 2yy : Copy two lines under the row with the cursor' >>${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yj : Copy the line with the cursor and the next line'>>${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yk : Copy the row with the cursor and the previous row' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> yG : Copy from current location to end of file' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> p : Paste to the next position of the cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> PP : Paste in cursor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Command Mode : In Normal mode, press [ESC], [:]' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w : save' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w test.txt : test.txt Save as File' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :w >> test.txt : test.txt Save file after file' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :q : vi Exit Editor' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ZZ : Save and Exit' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :wq! : Forced Save and Exit' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : test.txt load a file' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :e test.txt : Load the current file' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   Visual Mode : Pressing the v or Ctrl-V key to select a block' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '   ETC' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> "." : .reruns previously used instructions.' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> /[Search Item] : Top of page with [Search Item] output (if not on the current page, search on the next page)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> ?[Search Item] : Top of the line where [Search Item] is printed (if not on the current page, search on the previous page)'  >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    -> :Range/Matching String/Replacement String/Line Range : Used to replace existing strings at once.(:%s/AA/BB/g -> Replace AA with BB from start to finish)' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> （:%s/AA/BB/g -> Replace AA with BB from start to finish）' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '    ->> （:%s/AA/BB/gc -> When replacing AA with BB from start to finish, ask the user and replace them one by one）' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        echo '' >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "vim start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        vi ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    fi
    echo

    export LC_ALL=${old_LC_ALL}

    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${editorItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${editorItem}
    echo 
    
}

#--------------------------------------------#
# Editor : nano                              #
#--------------------------------------------#
function func_editor_nano() {
    
    ### Language Parameter / 언어 파라미터 / 言語パラメータ
    local ouputLanguageParam=$1
    ### File Path Parameter / 파일 패스 파라미터 / ファイルパスパラメータ
    local filePathParam=$2
    ### Editor / 편집기 / エディター
    local editorItem=$3

    mkdir -p ${filePathParam%/}/tmp/${editorItem}/
    old_LC_ALL=${LC_ALL}
    echo
    clear
    func_basicSetting_LogFileName_Path ${PID} "0" ${editorItem}
    echo
    if [[ ${ouputLanguageParam} == [kK][rR] ]];then
        echo '###nano Editor###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        nano ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    elif [[ ${ouputLanguageParam} == [jJ][pP] ]];then
        echo '###nano Editor###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        nano ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    else
        echo '###nano Editor###' > ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        LINENUM=1
        echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        for n in {1..100} 
        do 
            LINENUM=$(( LINENUM + 1 ))
            echo "nano start $LINENUM" >> ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
        done
        nano ${filePathParam%/}/tmp/${editorItem}/${editorItem}_TestFile.txt
    fi
    echo

    export LC_ALL=${old_LC_ALL}

    ### tmp Directory Delete / 임시 디렉토리 삭제 / 作業ディレクトリ削除
    rm -rf ${filePathParam%/}/tmp/${editorItem}/
    
    func_basicSetting_LogFileName_Path ${PID} "1" ${editorItem}
    echo 
    
}

#--------------------------------------------#
# Command List
#  : 명령어 리스트
#  : コマンドリスト
#--------------------------------------------#
readonly aliasEn="Used_to_list_information_about_files_left_open_by_various_processes_running_on_the_system"
readonly aliasKr="시스템에서_실행_중인_다양한_프로세스가_열어_둔_파일에_대한_정보를_나열하는데_사용"
readonly aliasJp="システムで実行されているさまざまなプロセスが開いているファイルに関する情報をリストするために使用"
readonly awkEn="Manipulate_text_files_to_search_for_patterns_and_work_on_lines_that_match_those_patterns"
readonly awkKr="텍스트_파일을_조작하여_패턴을_검색하고_해당_패턴과_일치하는_줄에_대해_작업을_수행"
readonly awkJp="テキストファイルを操作してパターンを検索し、そのパターンと一致する行に対してタスクを実行"
readonly calEn="It_allows_you_to_view_the_calendar_based_on_the_date_and_month_and_you_can_also_specify_a_particular_month_or_year_for_display"
readonly calKr="날짜와_월에_따라_달력을_확인할_수_있으며_특정_월이나_연도를_지정하여_출력"
readonly calJp="日付と月によってカレンダーを確認でき、特定の月や年を指定して表示"
readonly catEn="It_is_primarily_used_to_read_and_display_text_files_on_the_screen_and_can_be_used_to_communicate_the_contents_of_files_to_other_commands"
readonly catKr="주로_텍스트_파일을_읽어_화면에_표시할_때_사용되며_여러_파일을_순서대로_결합하거나_파일의_내용을_다른_명령어로_전달하는데에도_활용"
readonly catJp="主にテキストファイルを読み込んで画面に表示するために使用され、ファイルの内容を他のコマンドに渡すためにも利用"
readonly cdEn="Command_is_used_to_change_the_current_working_directory_in_a_command-line_interface"
readonly cdKr="명령줄_인터페이스에서_현재_작업_디렉토리를_변경하는데_사용"
readonly cdJp="コマンドラインインターフェイスの現在の作業ディレクトリを変更するために使用"
readonly chgrpEn="Use_commands_to_change_group_ownership_of_files_or_directories"
readonly chgrpKr="명령어는_파일이나_디렉토리의_그룹_소유권을_변경하는데_사용"
readonly chgrpJp="ファイルやディレクトリのグループ所有権を変更するために使用"
readonly chmodEn="Use_to_change_permissions_for_files_or_directories"
readonly chmodKr="파일이나_디렉토리의_권한을_변경하는데_사용"
readonly chmodJp="ファイルやディレクトリのパーミッションを変更するために使用"
readonly chownEn="Used_to_change_the_owner_of_a_file_or_directory"
readonly chownKr="파일이나_디렉토리의_소유자를_변경하는데_사용"
readonly chownJp="ファイルやディレクトリの所有者を変更するために使用"
readonly clearEn="Clear_the_terminal_screen_to_provide_a_clean_workspace"
readonly clearKr="터미널_화면을_지워_깨끗한_작업_공간을_제공"
readonly clearJp="ターミナル画面を消してきれいな作業スペースを提供"
readonly compressEn="Compressing_a_file_in_.Z_format"
readonly compressKr=".Z형식의_파일압축"
readonly compressJp=".Z形式のファイル圧縮です"
readonly cpEn="The_command_in_Unix/Linux_is_used_to_copy_files_or_directories"
readonly cpKr="파일_또는_디렉토리를_복사하는데_사용"
readonly cpJp="ファイルやディレクトリをコピーするため使用"
readonly cutEn="Used_to_extract_a_specific_portion_of_text_from_a_file_or_stream"
readonly cutKr="파일이나_스트림에서_특정_텍스트_부분을_추출하는데_사용"
readonly cutJp="ファイルやストリームから特定のテキスト部分を抽出するために使用"
readonly dateEn="Displays_the_date_and_time_of_the_current_system_and_formats_the_output._Also_used_to_calculate_or_manipulate_dates_and_times"
readonly dateKr="현재_시스템의_날짜와_시간이_표시되며_포맷을_지정하여_출력.날짜_및_시간을_계산하거나_조작하는데에도_사용"
readonly dateJp="現在のシステムの日付と時刻が表示され、フォーマットを指定して表示することもできます。また、日付や時刻の計算や操作にも使用"
readonly ddEn="Used_primarily_for_tasks_such_as_creating_disk_images,copying_data_between_devices,_and_converting_file_formats"
readonly ddKr="디스크_이미지_생성,_장치_간_데이터_복사,파일_형식_변환_등과_같은_작업에_사용"
readonly ddJp="ディスクイメージの作成、デバイス間のデータ複製、ファイルフォーマットの変換などのタスクによく使われます"
readonly declareEn="used_to_declare_variables_and_set_properties"
readonly declareKr="변수를_선언하고_속성을_설정하는데_사용"
readonly declareJp="変数を宣言して属性を設定するために使用"
readonly dfEn="Use_to_display_information_about_disk_space_usage"
readonly dfKr="디스크_공간_사용에_관한_정보를_표시하는_데_사용"
readonly dfJp="ディスク領域の使用に関する情報を表示するために使用"
readonly diffEn="Use_to_compare_the_contents_of_two_files_or_directories"
readonly diffKr="두_파일_또는_디렉토리의_내용을_비교하는_데_사용"
readonly diffJp="2つのファイルまたはディレクトリの内容を比較するために使われます"
readonly duEn="Used_to_estimate_disk_space_usage_for_files_and_directories"
readonly duKr="파일과_디렉토리의_디스크_공간_사용량을_추정하는_데_사용"
readonly duJp="ファイルとディレクトリのディスク領域の使用量を推定するために使用"
readonly echoEn="Used_to_display_the_value_of_a_text_line_or_variable_in_a_terminal"
readonly echoKr="터미널에_텍스트_라인이나_변수의_값을_표시하는데_사용"
readonly echoJp="ターミナルにテキストラインまたは変数の値を表示するために使用"
readonly egrepEn="Enable_robust_regular_expressions_to_support_POSIX_regular_expressions"
readonly egrepKr="POSIX_정규_표현식을_지원하는_강력한_정규_표현식_사용_가능"
readonly egrepJp="POSIX正規表現式に対応した強力な正規表現式を使用可能"
readonly envEn="Used_to_display_or_modify_environment_variables_in_commands"
readonly envKr="명령어의_환경_변수를_표시하거나_수정하는데에_사용"
readonly envJp="コマンドの環境変数の表示または修正に使用"
readonly exitEn="Used_to_end_shell_sessions_or_close_terminal_windows.Exit_the_current_process_to_log_out_the_user_or_close_the_terminal"
readonly exitKr="셸_세션을_종료하거나_터미널_창을_닫는_데_사용.현재_프로세스를_종료하여_사용자를_로그아웃하거나_터미널을_닫습니다"
readonly exitJp="シェルセッションを終了したり、ターミナルウィンドウを閉じるために使用します。現在のプロセスを終了して、ユーザーをログアウトするか、ターミナルを閉じます"
readonly exportEn="Deliver_variables_created_in_shell/terminal_sessions_to_child_processes_to_make_them_accessible_throughout_the_environment"
readonly exportKr="셸/터미널_세션에서_생성된_변수를_자식_프로세스에_전달하여_환경_전체에서_접근_가능하게_합니다"
readonly exportJp="シェル/ターミナルセッションで生成された変数を子プロセスに伝達し、環境全体でアクセス可能にします"
readonly exprEn="It_is_employed_in_tasks_such_as_evaluating_expressions_entered_by_users_in_the_terminal_or_finding_patterns_in_strings"
readonly exprKr="사용자가_입력한_표현식을_계산하거나_문자열에서_패턴을_찾아내는_등의_작업에_사용"
readonly exprJp="ユーザーが入力した式を計算したり、文字列からパターンを検出するなどの作業に使用"
readonly fcEn="Used_to_list_or_edit_a_list_of_command_history"
readonly fcKr="명령어_히스토리_목록을_나열하거나_편집하는데_사용"
readonly fcJp="コマンドヒストリーリストのリストのリストまたは編集に使用"
readonly findEn="Used_to_search_for_files_and_directories_in_a_directory_hierarchy_based_on_a_variety_of_conditions"
readonly findKr="다양한_조건을_기반으로_디렉토리_계층에서_파일_및_디렉토리를_검색하는_데_사용"
readonly findJp="さまざまな条件に基づいてディレクトリツリー内のファイルやディレクトリを検索するために使用"
readonly grepEn="Used_to_search_for_text_patterns_in_files"
readonly grepKr="파일에서_텍스트_패턴을_검색하는데_사용"
readonly grepJp="ファイルからテキストパターンを検索するために使用"
readonly gunzipEn="Command_is_used_to_decompress_files_compressed_with_gzip.This_command_is_employed_to_extract_and_restore_the_original_file"
readonly gunzipKr="gzip으로_압축된_파일을_해제하는데_사용됩니다.이_명령어는_파일을_압축_해제하고_원래_파일을_복원하는데_활용"
readonly gunzipJp="gzipで圧縮されたファイルを解凍するために使用されます。このコマンドはファイルを解凍し、元のファイルを復元するのに利用"
readonly gzipEn="Command_is_used_to_compress_files_primarily_useful_for_large_files_or_when_archiving_multiple_files"
readonly gzipKr="파일을_압축하는데_사용됩니다.주로_대용량_파일이나_여러_파일을_아카이브할_때_활용"
readonly gzipJp="ファイルを圧縮するために使用されます。主に大容量ファイルや複数のファイルをアーカイブする際に利用"
readonly headEn="Command_is_used_to_display_the_beginning(head)_of_a_file"
readonly headKr="파일의_처음_부분을_표시하는데_사용"
readonly headJp="ファイルの先頭部分を表示するために使用"
readonly historyEn="Displays_a_list_of_recently_executed_commands_from_the_terminal"
readonly historyKr="터미널에서_최근에_실행된_명령어_목록을_표시"
readonly historyJp="ターミナルで最近実行されたコマンドのリストを表示"
readonly idEn="Displays_information_about_users_and_user_groups"
readonly idKr="사용자와_사용자_그룹에_관한_정보를_표시"
readonly idJp="ユーザーとユーザーグループに関する情報を表示"
readonly lessEn="Pager_programs_that_allow_users_to_interactively_view_the_contents_of_text_files(more_highly_compatible)"
readonly lessKr="사용자가_텍스트_파일의_내용을_대화식으로_볼_수_있게_하는_페이저_프로그램(more_상위_호환)"
readonly lessJp="ユーザーがテキストファイルの内容をインタラクティブに表示できるようにするページャプログラム(more上位互換)"
readonly lnEn="Create_hard_links_or_symbolic_links_to_connect_one_file_to_another_to_provide_multiple_paths_to_the_same_data"
readonly lnKr="하드_링크_또는_심볼릭_링크를_생성하여_한_파일을_다른_파일에_연결하여_동일한_데이터에_여러_경로를_제공"
readonly lnJp="ハードリンクまたはシンボリックリンクを作成し、あるファイルを別のファイルに接続して、同じデータに複数のパスを提供"
readonly localeEn="Displays_the_region_and_language_settings_used_by_the_computer_system"
readonly localeKr="컴퓨터시스템에서_사용되는_지역_및_언어_설정을_표시"
readonly localeJp="コンピューターシステムで使用される地域および言語の設定を表示"
readonly lsEn="Displays_the_file_and_directory_names_for_the_specified_location"
readonly lsKr="지정된_위치의_파일과_디렉터리_이름을_표시"
readonly lsJp="指定された場所のファイルとディレクトリ名を表示"
readonly lsofEn="Lists_information_about_files_that_are_left_open_by_various_processes_running_on_the_system"
readonly lsofKr="시스템에서_실행_중인_다양한_프로세스가_열어_둔_파일에_대한_정보를_나열"
readonly lsofJp="システムで実行されているさまざまなプロセスが開いているファイルに関する情報をリストアップ"
readonly manEn="Used_to_display_manual_pages_for_other_commands"
readonly manKr="다른_명령어에_대한_매뉴얼_페이지를_표시하는데_사용"
readonly manJp="他のコマンドのマニュアルページを表示するために使用"
readonly mkdirEn="Used_to_create_a_directory"
readonly mkdirKr="디렉터리를_생성하는데_사용"
readonly mkdirJp="ディレクトリを作成するために使用"
readonly moreEn="Pager_programs_that_allow_users_to_interactively_view_the_contents_of_text_files"
readonly moreKr="사용자가_텍스트_파일의_내용을_대화식으로_볼_수_있게_하는_페이저_프로그램"
readonly moreJp="ユーザーがテキストファイルの内容をインタラクティブに表示できるようにするページャプログラム"
readonly mvEn="Used_to_move_or_rename_files_or_directories"
readonly mvKr="파일이나_디렉터리를_이동하거나_이름을_변경하는데_사용"
readonly mvJp="ファイルやディレクトリを移動または名前を変更するために使用"
readonly nkfEn="Used_to_ensure_correct_character_encoding_in_text_processing"
readonly nkfKr="텍스트_처리에서_올바른_문자_인코딩을_보장하기_위해_사용"
readonly nkfJp="テキスト処理で正しい文字エンコーディングを保証するために使用"
readonly pasteEn="Used_to_merge_rows_of_multiple_files"
readonly pasteKr="여러_파일의_행을_병합하는데_사용"
readonly pasteJp="複数のファイルの行をマージするために使用"
readonly pingEn="Measure_the_round_trip_time_of_messages_sent_from_the_source_host_to_the_target_computer.test_the_accessibility_of_the_host"
readonly pingKr="원본_호스트에서_대상_컴퓨터로_전송된_메시지의_왕복_시간을_측정.호스트의_접근_가능성을_테스트"
readonly pingJp="元のホストからターゲットコンピューターに送信されたメッセージの往復時間を測定。ホストのアクセス可能性をテスト"
readonly printfEn="Precisely_control_the_format_of_the_output.specify_the_shape_of_text,numbers,other_data."
readonly printfKr="출력물의_형식을_정밀하게_제어.텍스트,숫자_및_기타_데이터의_모양을_지정."
readonly printfJp="出力物の形式を精密に制御。テキスト、数字、その他のデータの外観を指定する。"
readonly psEn="Displays_details_such_as_the_process_ID(PID)_of_the_currently_running_process,terminals_associated_with_that_process_and_CPU_and_memory_usage"
readonly psKr="현재_실행_중인_프로세스의_프로세스_ID(PID),해당_프로세스와_연결된_터미널,CPU_및_메모리_사용량_등의_세부_정보를_표시"
readonly psJp="現在実行中のプロセスID(PID)、当該プロセスに接続されたターミナル、CPUおよびメモリ使用量などの詳細情報を表示"
readonly pwdEn="Outputs_the_directory_you_are_currently_working_on"
readonly pwdKr="현재_작업_중인_디렉터리를_출력"
readonly pwdJp="現在の作業ディレクトリを表示"
readonly readEn="Commonly_used_to_ask_users_for_input_interactively_or_to_read_input_from_a_file"
readonly readKr="사용자에게_대화식으로_입력을_요청하거나_파일에서_입력을_읽는데_일반적으로_사용"
readonly readJp="ユーザーに対話式で入力を要請したり、ファイルから入力を読み取るために一般的に使用"
readonly readonlyEn="Make_variables_or_functions_read-only_so_that_they_are_not_modified_or_released_from_the_shell_script"
readonly readonlyKr="변수나_함수를_읽기_전용으로_만들어_쉘_스크립트에서_수정하거나_해제되지_않도록함"
readonly readonlyJp="変数や関数を読み取り専用にして、シェルスクリプトから修正または解除されないようにする"
readonly renameEn="Modify_to_a_pattern_specifying_a_file_name"
readonly renameKr="파일명을_지정하는_패턴으로_수정"
readonly renameJp="ファイル名を指定するパターンに修正"
readonly rmEn="Use_to_delete_files_or_directories_from_Linux"
readonly rmKr="리눅스에서_파일이나_디렉터리를_삭제하기_위해_사용"
readonly rmJp="Linuxでファイルやディレクトリを削除するために使用"
readonly rmdirEn="Use_Linux_to_delete_empty_directories"
readonly rmdirKr="리눅스에서_비어있는_디렉터리를_삭제하는_데_사용"
readonly rmdirJp="Linuxで空のディレクトリを削除するために使用"
readonly sedEn="A_powerful_text_editor_that_performs_basic_text_conversion"
readonly sedKr="기본_텍스트_변환을_수행하는_강력한_텍스트_편집기"
readonly sedJp="デフォルトのテキスト変換を実行する強力なテキストエディタ"
readonly shEn="A_shell_interpreter_that_executes_commands_read_from_a_command_line_string,file,_or_standard_input"
readonly shKr="명령_줄_문자열,파일_또는_표준_입력에서_읽은_명령을_실행하는_쉘_해석기"
readonly shJp="コマンドライン文字列、ファイル、または標準入力で読み込んだコマンドを実行するシェルアナライザ"
readonly shiftEn="Used_to_move_location_parameters_in_a_shell_script"
readonly shiftKr="쉘_스크립트에서_위치_매개변수를_이동시키는데_사용"
readonly shiftJp="シェルスクリプトで位置パラメータを移動するために使用"
readonly sleepEn="It_is_commonly_used_in_scripts_or_programs_when_you_want_to_pause_execution_for_a_certain_duration"
readonly sleepKr="지정된_시간_동안_실행을_지연시키는데_사용됩니다.주로_스크립트나_프로그램에서_일정한_시간_동안_대기하고자_할_때_활용"
readonly sleepJp="指定された時間の間、実行を遅延させるために使用されます。主にスクリプトやプログラムで一定の時間待機させたい場合に利用"
readonly sortEn="Arrange_rows_of_text_files_or_streams_alphabetically_or_numerically"
readonly sortKr="텍스트_파일_또는_스트림의_행을_알파벳_순서_또는_숫자_순서대로_정렬"
readonly sortJp="テキストファイルまたはストリームの行をアルファベット順または数字順に並べ替えます"
readonly tailEn="Command_is_used_to_display_the_last_part_of_a_file"
readonly tailKr="파일의_마지막_부분을_표시하는데_사용"
readonly tailJp="ファイルの最後の部分を表示するために使用"
readonly tarEn="Used_to_compress_and_decompress_files_in_Unix_and_Linux_environments"
readonly tarKr="Unix_및_Linux_환경에서_파일을_압축_및_해제하는데_사용"
readonly tarJp="UnixおよびLinux環境でのファイルの圧縮および解除に使用"
readonly topEn="A_tool_that_monitors_system_processes_in_real_time_that_dynamically_displays_the_system_is_process_and_resource_usage"
readonly topKr="시스템_프로세스를_실시간으로_모니터링하는_도구로,시스템의_프로세스_및_자원_사용량을_동적으로_보여줍니다"
readonly topJp="システムプロセスをリアルタイムで監視するツールで、システムのプロセスおよびリソース使用量を動的に示します"
readonly touchEn="Used_to_create_empty_files_or_update_access_and_modification_times_for_existing_files"
readonly touchKr="빈_파일을_생성하거나_기존_파일의_액세스_및_수정_시간을_업데이트하는데_사용"
readonly touchJp="空のファイルを作成したり、既存ファイルのアクセスおよび修正のタイムスタンプを更新するために使用"
readonly trEn="Used_for_character_conversion_or_deletion_in_Unix_and_Linux"
readonly trKr="유닉스_및_리눅스에서_문자_변환_또는_삭제에_사용"
readonly trJp="UnixおよびLinuxで文字の変換や削除に使用"
readonly umaskEn="Used_to_set_the_default_file_permission_mask_for_newly_created_files.Specify_permissions_that_should_be_rejected_by_default_when_files_are_created"
readonly umaskKr="새로_생성되는_파일의_기본_파일_권한_마스크를_설정하는데_사용.파일이_생성될_때_기본적으로_거부되어야_하는_권한을_지정"
readonly umaskJp="新しく生成されるファイルのデフォルトファイル権限マスクの設定に使用。ファイルの生成時に基本的に拒否されるべき権限を指定"
readonly unameEn="Displays_system_information,returns_kernel_name,network_node_host_name,kernel_version,hardware_type_etc"
readonly unameKr="시스템_정보를_표시합니다.커널_이름,네트워크_노드_호스트_이름,커널_버전,하드웨어_타입_등을_반환"
readonly unameJp="システム情報を表示します。カーネル名、ネットワークノードホスト名、カーネルバージョン、ハードウェアタイプなどを返す"
readonly uniqEn="Used_to_remove_duplicate_rows_or_to_output_only_one_of_successively_repeated_rows"
readonly uniqKr="중복된_행을_제거하거나_연속적으로_반복된_행_중_하나만을_출력하는데_사용"
readonly uniqJp="重複する行を削除するか、連続して繰り返される行の1つのみを出力するために使用"
readonly unzipEn="Command_is_used_to_extract_files_from_a_ZIP_archive.It_is_commonly_used_to_unzip_compressed_files_or_directories"
readonly unzipKr="ZIP_파일을_해제하는데_사용됩니다.주로_압축된_파일이나_디렉토리를_푸는데_활용"
readonly unzipJp="ZIPファイルを解凍するために使用されます。主に圧縮されたファイルやディレクトリを解凍するのに利用"
readonly uptimeEn="Indicates_how_long_the_system_is_running_without_restarting(average_system_uptime,current_time,number_of_users,and_system_load)"
readonly uptimeKr="시스템이_얼마나_오랜_기간동안_다시_시작되지_않고_실행_중인지를_표시(시스템의_가동_시간,현재시간,사용자수_및_시스템_부하_평균)"
readonly uptimeJp="システムがどのくらいの期間再起動せずに実行中であるかを表示（システムの稼働時間、現在時間、ユーザ数およびシステム負荷平均）"
readonly wcEn="Command_is_used_to_count_the_number_of_lines_words_and_bytes_in_a_file.It_is_often_used_to_report_statistics_on_text_files_or_as_part_of_data_processing"
readonly wcKr="파일의_행_단어_바이트_수를_세는데_사용됩니다.텍스트_파일의_통계_정보를_보고하거나_데이터_처리에서_활용"
readonly wcJp="ファイルの行数、単語数、バイト数を数えるのに使用されます。テキストファイルの統計情報を報告するか、データ処理で利用"
readonly whoamiEn="Displays_the_name_of_the_user_who_is_currently_logged_in"
readonly whoamiKr="현재_로그인한_사용자의_이름을_표시"
readonly whoamiJp="現在ログインしているユーザーの名前を表示"
readonly zipEn="Command_is_used_to_compress_files_and_directories_creating_a_compressed_archive.It_is_primarily_used_to_save_space_by_compressing_files_or_when_transferring_files"
readonly zipKr="파일_및_디렉터리를_압축하고_압축_파일을_만드는데_사용됩니다.주로_파일을_압축하여_용량을_절약하거나_파일을_전송할_때_활용"
readonly zipJp="ファイルやディレクトリを圧縮し、圧縮ファイルを作成するのに使用されます。主にファイルを圧縮して容量を節約しファイルを転送する際に利用"
declare -a commandList=("alias" "awk" "cal" "cat" "cd" "chgrp" "chmod" "chown" "clear" "compress" "cp" "cut" "date" "dd" "declare" "df" "diff" "du" "echo" "egrep" "env" "exit" "export" "expr" "fc" "find" "grep" "gunzip" "gzip" "head" "history" "id" "less" "ln" "locale" "ls" "lsof" "man" "mkdir" "more" "mv" "nkf" "paste" "ping" "printf" "ps" "pwd" "read" "readonly" "rename" "rm" "rmdir" "sed" "sh" ""shift "sleep" "sort" "tail" "tar" "top" "touch" "tr" "umask" "uname" "uniq" "unzip" "uptime" "wc" "whoami" "zip")
declare -a commandDescriptionEn=("${aliasEn}" "${awkEn}" "${calEn}" "${catEn}" "${cdEn}" "${chgrpEn}" "${chmodEn}" "${chownEn}" "${clearEn}" "${compressEn}" "${cpEn}" "${cutEn}" "${dateEn}" "${ddEn}" "${declareEn}" "${dfEn}" "${diffEn}" "${duEn}" "${echoEn}" "${egrepEn}" "${envEn}" "${exitEn}" "${exportEn}" "${exprEn}" "${fcEn}" "${findEn}" "${grepEn}" "${gunzipEn}" "${gzipEn}" "${headEn}" "${historyEn}" "${idEn}" "${lessEn}" "${lnEn}" "${localeEn}" "${lsEn}" "${lsofEn}" "${manEn}" "${mkdirEn}" "${moreEn}" "${mvEn}" "${nkfEn}" "${pasteEn}" "${pingEn}" "${printfEn}" "${psEn}" "${pwdEn}" "${readEn}" "${readonlyEn}" "${renameEn}" "${rmEn}" "${rmdirEn}" "${sedEn}" "${shEn}" "${shiftEn}" "${sleepEn}" "${sortEn}" "${tailEn}" "${tarEn}" "${topEn}" "${touchEn}" "${trEn}" "${umaskEn}" "${unameEn}" "${uniqEn}" "${unzipEn}" "${uptimeEn}" "${wcEn}" "${whoamiEn}" "${zipEn}")
declare -a commandDescriptionKr=("${aliasKr}" "${awkKr}" "${calKr}" "${catKr}" "${cdKr}" "${chgrpKr}" "${chmodKr}" "${chownKr}" "${clearKr}" "${compressKr}" "${cpKr}" "${cutKr}" "${dateKr}" "${ddKr}" "${declareKr}" "${dfKr}" "${diffKr}" "${duKr}" "${echoKr}" "${egrepKr}" "${envKr}" "${exitKr}" "${exportKr}" "${exprKr}" "${fcKr}" "${findKr}" "${grepKr}" "${gunzipKr}" "${gzipKr}" "${headKr}" "${historyKr}" "${idKr}" "${lessKr}" "${lnKr}" "${localeKr}" "${lsKr}" "${lsofKr}" "${manKr}" "${mkdirKr}" "${moreKr}" "${mvKr}" "${nkfKr}" "${pasteKr}" "${pingKr}" "${printfKr}" "${psKr}" "${pwdKr}" "${readKr}" "${readonlyKr}" "${renameKr}" "${rmKr}" "${rmdirKr}" "${sedKr}" "${shKr}" "${shiftKr}" "${sleepKr}" "${sortKr}" "${tailKr}" "${tarKr}" "${topKr}" "${touchKr}" "${trKr}" "${umaskKr}" "${unameKr}" "${uniqKr}" "${unzipKr}" "${uptimeKr}" "${wcKr}" "${whoamiKr}" "${zipKr}")
declare -a commandDescriptionJp=("${aliasJp}" "${awkJp}" "${calJp}" "${catJp}" "${cdJp}" "${chgrpJp}" "${chmodJp}" "${chownJp}" "${clearJp}" "${compressJp}" "${cpJp}" "${cutJp}" "${dateJp}" "${ddJp}" "${declareJp}" "${dfJp}" "${diffJp}" "${duJp}" "${echoJp}" "${egrepJp}" "${envJp}" "${exitJp}" "${exportJp}" "${exprJp}" "${fcJp}" "${findJp}" "${grepJp}" "${gunzipJp}" "${gzipJp}" "${headJp}" "${historyJp}" "${idJp}" "${lessJp}" "${lnJp}" "${localeJp}" "${lsJp}" "${lsofJp}" "${manJp}" "${mkdirJp}" "${moreJp}" "${mvJp}" "${nkfJp}" "${pasteJp}" "${pingJp}" "${printfJp}" "${psJp}" "${pwdJp}" "${readJp}" "${readonlyJp}" "${renameJp}" "${rmJp}" "${rmdirJp}" "${sedJp}" "${shJp}" "${shiftJp}" "${sleepJp}" "${sortJp}" "${tailJp}" "${tarJp}" "${topJp}" "${touchJp}" "${trJp}" "${umaskJp}" "${unameJp}" "${uniqJp}" "${unzipJp}" "${uptimeJp}" "${wcJp}" "${whoamiJp}" "${zipJp}")

#--------------------------------------------#
# Tip List
#  : 스크립트 팁 리스트
#  : Linuxスクリプトヒントリスト
#--------------------------------------------#
scriptTipList=()
scriptTipList+=(Loop_for,반복문_for,繰り返し文_for)
scriptTipList+=(Conditional_case,조건문_case,条件文_case)
scriptTipList+=(Loop_while,반복문_while,繰り返し文_while)
scriptTipList+=(Loop_until,반복문_until,繰り返し文_until)
scriptTipList+=(LoopExit_break,반복문종료_break,繰り返し文終了_break)
scriptTipList+=(LoopStopAndContinue_continue,반복문정지및재개_continue,繰り返し文停止及び再開_continue)
scriptTipList+=(ConditionalCheck_if,조건문체크_if,条件文チェック_if)
scriptTipList+=(Calculate_\(\),계산_\(\),計算_\(\))
scriptTipList+=(Quotation_Marks_\"\"_\'\'_\`\`,따옴표_\"\"_\'\'_\`\`,クウォウテイション_\"\"_\'\'_\`\`)
scriptTipList+=(Variables_Modifiy,변수편집,変数編集)
scriptTipList+=(Field_Separator_IFS,필드_구분자_IFS,フィールド区切り文字_IFS)
scriptTipList+=(Parameter_utilization_\$,파라미터활용_\$,パラメータ活用_\$)
scriptTipList+=(File_input_output_\>_\>\>_\<,파일입출력_\>_\>\>_\<,ファイル入出力_\>_\>\>_\<)
scriptTipList+=(Create_random_data,랜덤데이터작성,ランダムデータ作成)

#--------------------------------------------#
# Script Basic Variable Setting
#  : 스크립트 기본 변수 설정
#  : スクリプトの基本変数設定
#--------------------------------------------#
### parameterCount / 파라미터 수 / パラメータ数
paramCount=$#
### ProcessID / 프로세스ID / プロセスID
PID=$$
### searchCommand / 검색명령어 / 検索コマンド
searchCommand=$1
### Output Language / 출력 언어 / 出力言語
ouputLanguage=$2
### Start Flg / 시작 Flg / 開始フラグ
startedFlg=0

#--------------------------------------------#
# Main Logic
#  : 메인 처리
#  : メイン処理
#--------------------------------------------#
### Parameter Check / 파라미터 체크 / パラメータチェック
if [[ ! -z ${searchCommand} ]] || [[ ${startedFlg} == 0 ]];then 
    func_linuxCommandsExistCheck ${searchCommand}
fi

if [[ ! -z ${searchCommand} && ${existCheck} == 0 ]];then
    clear
    echo
    func_notExistCommand ${searchCommand} ${ouputLanguage} ${existCheck}
    exit
fi
if [[ -z ${ouputLanguage} ]];then
    clear
    if [[ ${LC_ALL} == "ko_KR.UTF-8" ]];then    #export LC_ALL="ko_KR.UTF-8"
        ouputLanguage="kr"
    elif  [[ ${LC_ALL} == "ja_JP.UTF-8" ]];then #export LC_ALL="ja_JP.UTF-8"
        ouputLanguage="jp"
    else                                        #export LC_ALL="en_US.UTF-8"
        ouputLanguage="en" 
    fi
    func_howToUse
fi
if ! [[ ${ouputLanguage} == [eE][nN] || ${ouputLanguage} == [kK][rR] || ${ouputLanguage} == [jJ][pP] ]];then
    func_supportLanguage
    exit
else
    clear
fi

echo
### Function Run / 함수 실행 / 関数実行
func_basicSetting_StartingRunTime ${ouputLanguage} 
### Function Run / 함수 실행 / 関数実行
func_basicSetting_LogFileName_Path ${PID} "0" 

while true
do
    if [[ startedFlg -ge 1 ]];then
        clear
    fi

    if [[ ${startedFlg} == 0 && ! -z ${searchCommand} ]];then
        selectMenu=2
    else
        ### Function Run / 함수 실행 / 関数実行
        func_mainMenu ${ouputLanguage}
    fi

    if [[ ${selectMenu} == 1 ]];then
        clear
        ### Function Run / 함수 실행 / 関数実行
        func_selectLanguage ${ouputLanguage}
    elif [[ ${selectMenu} == 2 ]];then
        clear
        while true
        do
            clear
            if [[ ${startedFlg} -gt 0 && ! -z ${searchCommand} ]] || [[ -z ${searchCommand} ]];then
                ### Function Run / 함수 실행 / 関数実行
                func_linuxCommandsList 1 ${ouputLanguage} 
            fi
            existCheck=0
            ### Function Run / 함수 실행 / 関数実行
            func_linuxCommandsExistCheck ${searchCommand}
            if [[ ${existCheck} == 1 ]];then
                func_linuxCommandExample ${ouputLanguage} ${filePath} ${commandItemIndex} 
            fi
        done
    elif [[ ${selectMenu} == 3 ]];then
        clear
        while true
        do
            clear
            ### Function Run / 함수 실행 / 関数実行
            func_linuxScriptTipList ${ouputLanguage} 

            func_linuxScriptTipExample ${ouputLanguage} ${filePath} ${searchScriptTipIndex}
        done
    elif [[ ${selectMenu} == 7 ]];then
        clear
        ### Function Run / 함수 실행 / 関数実行
        func_showHelperShell ${ouputLanguage}
    elif [[ ${selectMenu} == 8 ]];then
        clear
        ### Function Run / 함수 실행 / 関数実行
        func_selectEditor ${ouputLanguage}
    elif [[ ${selectMenu} == "終了" || ${selectMenu} == "종료" || ${selectMenu} == [eE][nN][dD] || ${selectMenu} == [eE][xX][iI][tT] ||  ${selectMenu} == 9 ]];then
        ### Function Run / 함수 실행 / 関数実行
        func_scriptEnd ${ouputLanguage}
    else
        continue
    fi
    selectMenu=0
    startedFlg=$((${startedFlg}+1))
done

### Function Run / 함수 실행 / 関数実行
func_basicSetting_LogFileName_Path ${PID} "1" 